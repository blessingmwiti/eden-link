{"ast":null,"code":"import { Chart } from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/sensor.service\";\nimport * as i2 from \"../../core/services/ai.service\";\nimport * as i3 from \"../../core/services/greenhouse.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../shared/components/chart/chart.component\";\nimport * as i6 from \"../../shared/components/sensor-card/sensor-card.component\";\nfunction DashboardComponent_app_sensor_card_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-sensor-card\", 20);\n  }\n  if (rf & 2) {\n    const sensor_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"sensor\", sensor_r3);\n  }\n}\nfunction DashboardComponent_app_chart_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-chart\", 21);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r1.chartData);\n  }\n}\nconst _c0 = (a0, a1) => ({\n  \"active\": a0,\n  \"completed\": a1\n});\nfunction DashboardComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 24);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const stage_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, stage_r4.active, stage_r4.completed));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", stage_r4.completed ? \"\\u2713\" : i_r5 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stage_r4.name);\n  }\n}\nexport class DashboardComponent {\n  constructor(sensorService, aiService, greenhouseService) {\n    this.sensorService = sensorService;\n    this.aiService = aiService;\n    this.greenhouseService = greenhouseService;\n    this.sensors = [];\n    this.systemHealth = {\n      status: 'excellent',\n      message: 'All systems functioning optimally. Consider adjusting CO₂ levels slightly for optimal tomato growth.'\n    };\n  }\n  ngOnInit() {\n    this.loadSensorData();\n    this.initializeChart();\n    this.subscribeToGreenhouseData();\n  }\n  ngOnDestroy() {\n    if (this.greenhouseDataSubscription) {\n      this.greenhouseDataSubscription.unsubscribe();\n    }\n  }\n  initializeChart() {\n    const ctx = document.getElementById('greenhouseChart');\n    this.greenhouseChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: [{\n          label: 'Temperature (°C)',\n          data: [],\n          borderColor: '#ff6384',\n          tension: 0.4,\n          fill: false\n        }, {\n          label: 'Humidity (%)',\n          data: [],\n          borderColor: '#36a2eb',\n          tension: 0.4,\n          fill: false\n        }, {\n          label: 'Light (lux)',\n          data: [],\n          borderColor: '#ffcd56',\n          tension: 0.4,\n          fill: false\n        }]\n      },\n      options: {\n        responsive: true,\n        animation: {\n          duration: 0 // Disable animation for real-time updates\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Time'\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Value'\n            }\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: 'Greenhouse Conditions (Real-time)'\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }\n    });\n  }\n  subscribeToGreenhouseData() {\n    this.greenhouseDataSubscription = this.greenhouseService.getGreenhouseData().subscribe(data => {\n      if (data.length > 0) {\n        this.updateChart(data);\n        this.currentData = data[data.length - 1];\n        this.updateSensors();\n      }\n    });\n  }\n  updateChart(data) {\n    const labels = data.map(d => {\n      const time = new Date(d.timestamp);\n      return time.toLocaleTimeString('en-US', {\n        hour12: false,\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    });\n    const temperatures = data.map(d => d.temperature);\n    const humidities = data.map(d => d.humidity);\n    const lights = data.map(d => d.light);\n    this.greenhouseChart.data.labels = labels;\n    this.greenhouseChart.data.datasets[0].data = temperatures;\n    this.greenhouseChart.data.datasets[1].data = humidities;\n    this.greenhouseChart.data.datasets[2].data = lights;\n    this.greenhouseChart.update();\n  }\n  updateSensors() {\n    if (this.currentData) {\n      this.sensors = [{\n        id: 1,\n        name: 'Temperature',\n        value: `${this.currentData.temperature}°C`,\n        icon: '🌡️',\n        type: 'Environmental',\n        unit: '°C',\n        status: 'normal'\n      }, {\n        id: 2,\n        name: 'Humidity',\n        value: `${this.currentData.humidity}%`,\n        icon: '💧',\n        type: 'Environmental',\n        unit: '%',\n        status: 'normal'\n      }, {\n        id: 3,\n        name: 'Light',\n        value: `${this.currentData.light} lux`,\n        icon: '☀️',\n        type: 'Environmental',\n        unit: 'lux',\n        status: 'normal'\n      }];\n    }\n  }\n  loadSensorData() {\n    // Keep other sensor data for EC, pH, and CO₂\n    const otherSensors = [{\n      id: 4,\n      name: 'EC',\n      value: '1.8 mS/cm',\n      icon: '⚡',\n      type: 'Nutrient',\n      unit: 'mS/cm',\n      status: 'normal'\n    }, {\n      id: 5,\n      name: 'pH',\n      value: '6.2',\n      icon: '🧪',\n      type: 'Nutrient',\n      unit: '',\n      status: 'normal'\n    }, {\n      id: 6,\n      name: 'CO₂',\n      value: '450 ppm',\n      icon: '🌫️',\n      type: 'Gas',\n      unit: 'ppm',\n      status: 'normal'\n    }];\n    this.sensors = [...this.sensors, ...otherSensors];\n  }\n  startIrrigation() {\n    this.sensorService.startIrrigation().subscribe(() => alert('Irrigation started successfully!'), error => console.error('Error starting irrigation:', error));\n  }\n  exportData() {\n    this.sensorService.exportData().subscribe(data => {\n      const blob = new Blob([data], {\n        type: 'application/json'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.setAttribute('hidden', '');\n      a.setAttribute('href', url);\n      a.setAttribute('download', 'eden-link-data-export.json');\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }, error => console.error('Error exporting data:', error));\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.SensorService), i0.ɵɵdirectiveInject(i2.AiService), i0.ɵɵdirectiveInject(i3.GreenhouseService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 36,\n      vars: 8,\n      consts: [[1, \"dashboard-container\"], [1, \"dashboard-header\"], [1, \"dashboard-title\"], [1, \"dashboard-actions\"], [1, \"btn\", \"btn-outline\", 3, \"click\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"sensors-grid\"], [3, \"sensor\", 4, \"ngFor\", \"ngForOf\"], [1, \"chart-container\"], [3, \"data\", 4, \"ngIf\"], [1, \"system-health\", 3, \"ngClass\"], [1, \"system-health-icon\"], [1, \"system-health-content\"], [1, \"system-health-title\"], [1, \"system-health-message\"], [1, \"crop-roadmap\"], [\"class\", \"roadmap-step\", 4, \"ngFor\", \"ngForOf\"], [3, \"sensor\"], [3, \"data\"], [1, \"roadmap-step\"], [1, \"step-icon\", 3, \"ngClass\"], [1, \"step-label\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n          i0.ɵɵtext(3, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_5_listener() {\n            return ctx.exportData();\n          });\n          i0.ɵɵtext(6, \"Export Data\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_7_listener() {\n            return ctx.startIrrigation();\n          });\n          i0.ɵɵtext(8, \"Start Irrigation\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"h2\", 8);\n          i0.ɵɵtext(12, \"Sensor Status\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 9);\n          i0.ɵɵtemplate(14, DashboardComponent_app_sensor_card_14_Template, 1, 1, \"app-sensor-card\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 6)(16, \"div\", 7)(17, \"h2\", 8);\n          i0.ɵɵtext(18, \"Real-Time Charts\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 11);\n          i0.ɵɵtemplate(20, DashboardComponent_app_chart_20_Template, 1, 1, \"app-chart\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\", 13)(22, \"div\", 14);\n          i0.ɵɵtext(23, \"\\u2713\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 15)(25, \"div\", 16);\n          i0.ɵɵtext(26);\n          i0.ɵɵpipe(27, \"titlecase\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"div\", 17);\n          i0.ɵɵtext(29);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(30, \"div\", 6)(31, \"div\", 7)(32, \"h2\", 8);\n          i0.ɵɵtext(33, \"Crop Cycle Roadmap\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(34, \"div\", 18);\n          i0.ɵɵtemplate(35, DashboardComponent_div_35_Template, 5, 6, \"div\", 19);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngForOf\", ctx.sensors);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.chartData);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngClass\", \"system-health-\" + ctx.systemHealth.status);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\"System Health: \", i0.ɵɵpipeBind1(27, 6, ctx.systemHealth.status), \"\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.systemHealth.message);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.roadmapStages);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.ChartComponent, i6.SensorCardComponent, i4.TitleCasePipe],\n      styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n  padding: 2rem;\\n  display: grid;\\n  gap: 2rem;\\n  max-width: 1400px;\\n  margin: 0 auto;\\n}\\n\\n\\n\\n.chart-section[_ngcontent-%COMP%] {\\n  background: white;\\n  border-radius: 12px;\\n  padding: 1.5rem;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n.chart-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 400px;\\n  position: relative;\\n}\\n\\n\\n\\n.sensor-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n  gap: 1.5rem;\\n}\\n\\n.sensor-card[_ngcontent-%COMP%] {\\n  background: white;\\n  border-radius: 12px;\\n  padding: 1.5rem;\\n  display: flex;\\n  align-items: center;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  transition: transform 0.2s ease;\\n}\\n\\n.sensor-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-2px);\\n}\\n\\n.sensor-icon[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  margin-right: 1rem;\\n}\\n\\n.sensor-info[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.sensor-info[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #333;\\n  font-size: 1.1rem;\\n}\\n\\n.sensor-value[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  font-weight: 600;\\n  color: #006d5b;\\n  margin: 0.5rem 0;\\n}\\n\\n.sensor-status[_ngcontent-%COMP%] {\\n  font-size: 0.9rem;\\n  padding: 0.25rem 0.75rem;\\n  border-radius: 12px;\\n  text-transform: capitalize;\\n}\\n\\n.sensor-status.normal[_ngcontent-%COMP%] {\\n  background: #e8f5e9;\\n  color: #2e7d32;\\n}\\n\\n.sensor-status.warning[_ngcontent-%COMP%] {\\n  background: #fff3e0;\\n  color: #ef6c00;\\n}\\n\\n.sensor-status.alert[_ngcontent-%COMP%] {\\n  background: #ffebee;\\n  color: #c62828;\\n}\\n\\n\\n\\n.system-health[_ngcontent-%COMP%] {\\n  margin-top: 1rem;\\n}\\n\\n.health-card[_ngcontent-%COMP%] {\\n  background: white;\\n  border-radius: 12px;\\n  padding: 1.5rem;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n.health-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0 0 1rem 0;\\n  color: #333;\\n}\\n\\n.health-icon[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  margin: 1rem 0;\\n}\\n\\n.health-message[_ngcontent-%COMP%] {\\n  color: #666;\\n  margin: 0;\\n  line-height: 1.5;\\n}\\n\\n.health-card.excellent[_ngcontent-%COMP%] {\\n  border-left: 4px solid #2e7d32;\\n}\\n\\n.health-card.warning[_ngcontent-%COMP%] {\\n  border-left: 4px solid #ef6c00;\\n}\\n\\n.health-card.alert[_ngcontent-%COMP%] {\\n  border-left: 4px solid #c62828;\\n}\\n\\n\\n\\n.quick-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 1rem;\\n  margin-top: 1rem;\\n}\\n\\n.action-btn[_ngcontent-%COMP%] {\\n  background: #006d5b;\\n  color: white;\\n  border: none;\\n  border-radius: 8px;\\n  padding: 0.75rem 1.5rem;\\n  font-size: 1rem;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  transition: background-color 0.2s ease;\\n}\\n\\n.action-btn[_ngcontent-%COMP%]:hover {\\n  background: #005446;\\n}\\n\\n.btn-icon[_ngcontent-%COMP%] {\\n  margin-right: 0.5rem;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .dashboard-container[_ngcontent-%COMP%] {\\n    padding: 1rem;\\n  }\\n\\n  .chart-container[_ngcontent-%COMP%] {\\n    height: 300px;\\n  }\\n\\n  .sensor-grid[_ngcontent-%COMP%] {\\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n  }\\n\\n  .quick-actions[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n\\n  .action-btn[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7RUFDYixTQUFTO0VBQ1QsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUEsa0JBQWtCO0FBQ2xCO0VBQ0UsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2Ysd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYixrQkFBa0I7QUFDcEI7O0FBRUEsZ0JBQWdCO0FBQ2hCO0VBQ0UsYUFBYTtFQUNiLDJEQUEyRDtFQUMzRCxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHdDQUF3QztFQUN4QywrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsT0FBTztBQUNUOztBQUVBO0VBQ0UsU0FBUztFQUNULFdBQVc7RUFDWCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsd0JBQXdCO0VBQ3hCLG1CQUFtQjtFQUNuQiwwQkFBMEI7QUFDNUI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGNBQWM7QUFDaEI7O0FBRUEsa0JBQWtCO0FBQ2xCO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2Ysd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGVBQWU7RUFDZixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFNBQVM7RUFDVCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSw4QkFBOEI7QUFDaEM7O0FBRUEsa0JBQWtCO0FBQ2xCO0VBQ0UsYUFBYTtFQUNiLFNBQVM7RUFDVCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsdUJBQXVCO0VBQ3ZCLGVBQWU7RUFDZixlQUFlO0VBQ2YsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixzQ0FBc0M7QUFDeEM7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxvQkFBb0I7QUFDdEI7O0FBRUEsc0JBQXNCO0FBQ3RCO0VBQ0U7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSwyREFBMkQ7RUFDN0Q7O0VBRUE7SUFDRSxzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5kYXNoYm9hcmQtY29udGFpbmVyIHtcbiAgcGFkZGluZzogMnJlbTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ2FwOiAycmVtO1xuICBtYXgtd2lkdGg6IDE0MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi8qIENoYXJ0IFNlY3Rpb24gKi9cbi5jaGFydC1zZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIHBhZGRpbmc6IDEuNXJlbTtcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuLmNoYXJ0LWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDQwMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi8qIFNlbnNvciBHcmlkICovXG4uc2Vuc29yLWdyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDI1MHB4LCAxZnIpKTtcbiAgZ2FwOiAxLjVyZW07XG59XG5cbi5zZW5zb3ItY2FyZCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBwYWRkaW5nOiAxLjVyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGVhc2U7XG59XG5cbi5zZW5zb3ItY2FyZDpob3ZlciB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcbn1cblxuLnNlbnNvci1pY29uIHtcbiAgZm9udC1zaXplOiAycmVtO1xuICBtYXJnaW4tcmlnaHQ6IDFyZW07XG59XG5cbi5zZW5zb3ItaW5mbyB7XG4gIGZsZXg6IDE7XG59XG5cbi5zZW5zb3ItaW5mbyBoMyB7XG4gIG1hcmdpbjogMDtcbiAgY29sb3I6ICMzMzM7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xufVxuXG4uc2Vuc29yLXZhbHVlIHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjMDA2ZDViO1xuICBtYXJnaW46IDAuNXJlbSAwO1xufVxuXG4uc2Vuc29yLXN0YXR1cyB7XG4gIGZvbnQtc2l6ZTogMC45cmVtO1xuICBwYWRkaW5nOiAwLjI1cmVtIDAuNzVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuXG4uc2Vuc29yLXN0YXR1cy5ub3JtYWwge1xuICBiYWNrZ3JvdW5kOiAjZThmNWU5O1xuICBjb2xvcjogIzJlN2QzMjtcbn1cblxuLnNlbnNvci1zdGF0dXMud2FybmluZyB7XG4gIGJhY2tncm91bmQ6ICNmZmYzZTA7XG4gIGNvbG9yOiAjZWY2YzAwO1xufVxuXG4uc2Vuc29yLXN0YXR1cy5hbGVydCB7XG4gIGJhY2tncm91bmQ6ICNmZmViZWU7XG4gIGNvbG9yOiAjYzYyODI4O1xufVxuXG4vKiBTeXN0ZW0gSGVhbHRoICovXG4uc3lzdGVtLWhlYWx0aCB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59XG5cbi5oZWFsdGgtY2FyZCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBwYWRkaW5nOiAxLjVyZW07XG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG5cbi5oZWFsdGgtY2FyZCBoMyB7XG4gIG1hcmdpbjogMCAwIDFyZW0gMDtcbiAgY29sb3I6ICMzMzM7XG59XG5cbi5oZWFsdGgtaWNvbiB7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgbWFyZ2luOiAxcmVtIDA7XG59XG5cbi5oZWFsdGgtbWVzc2FnZSB7XG4gIGNvbG9yOiAjNjY2O1xuICBtYXJnaW46IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5oZWFsdGgtY2FyZC5leGNlbGxlbnQge1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICMyZTdkMzI7XG59XG5cbi5oZWFsdGgtY2FyZC53YXJuaW5nIHtcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAjZWY2YzAwO1xufVxuXG4uaGVhbHRoLWNhcmQuYWxlcnQge1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICNjNjI4Mjg7XG59XG5cbi8qIFF1aWNrIEFjdGlvbnMgKi9cbi5xdWljay1hY3Rpb25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAxcmVtO1xuICBtYXJnaW4tdG9wOiAxcmVtO1xufVxuXG4uYWN0aW9uLWJ0biB7XG4gIGJhY2tncm91bmQ6ICMwMDZkNWI7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHBhZGRpbmc6IDAuNzVyZW0gMS41cmVtO1xuICBmb250LXNpemU6IDFyZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2U7XG59XG5cbi5hY3Rpb24tYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzAwNTQ0Njtcbn1cblxuLmJ0bi1pY29uIHtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG59XG5cbi8qIFJlc3BvbnNpdmUgRGVzaWduICovXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmRhc2hib2FyZC1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDFyZW07XG4gIH1cblxuICAuY2hhcnQtY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICB9XG5cbiAgLnNlbnNvci1ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDIwMHB4LCAxZnIpKTtcbiAgfVxuXG4gIC5xdWljay1hY3Rpb25zIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG5cbiAgLmFjdGlvbi1idG4ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Chart","i0","ɵɵelement","ɵɵproperty","sensor_r3","ctx_r1","chartData","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpureFunction2","_c0","stage_r4","active","completed","ɵɵtextInterpolate1","i_r5","ɵɵtextInterpolate","name","DashboardComponent","constructor","sensorService","aiService","greenhouseService","sensors","systemHealth","status","message","ngOnInit","loadSensorData","initializeChart","subscribeToGreenhouseData","ngOnDestroy","greenhouseDataSubscription","unsubscribe","ctx","document","getElementById","greenhouseChart","type","data","labels","datasets","label","borderColor","tension","fill","options","responsive","animation","duration","scales","x","title","display","text","y","beginAtZero","plugins","legend","position","getGreenhouseData","subscribe","length","updateChart","currentData","updateSensors","map","d","time","Date","timestamp","toLocaleTimeString","hour12","hour","minute","temperatures","temperature","humidities","humidity","lights","light","update","id","value","icon","unit","otherSensors","startIrrigation","alert","error","console","exportData","blob","Blob","url","window","URL","createObjectURL","a","createElement","setAttribute","body","appendChild","click","removeChild","ɵɵdirectiveInject","i1","SensorService","i2","AiService","i3","GreenhouseService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ɵɵlistener","DashboardComponent_Template_button_click_5_listener","DashboardComponent_Template_button_click_7_listener","ɵɵtemplate","DashboardComponent_app_sensor_card_14_Template","DashboardComponent_app_chart_20_Template","DashboardComponent_div_35_Template","ɵɵpipeBind1","roadmapStages"],"sources":["/home/injinia/eden-link/src/app/features/dashboard/dashboard.component.ts","/home/injinia/eden-link/src/app/features/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SensorService } from '../../core/services/sensor.service';\nimport { AiService } from '../../core/services/ai.service';\nimport { GreenhouseService, GreenhouseData } from '../../core/services/greenhouse.service';\nimport { Sensor } from '../../core/models/sensor.model';\nimport { Subscription } from 'rxjs';\nimport { Chart } from 'chart.js/auto';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  sensors: Sensor[] = [];\n  systemHealth = {\n    status: 'excellent',\n    message: 'All systems functioning optimally. Consider adjusting CO₂ levels slightly for optimal tomato growth.'\n  };\n  \n  greenhouseChart: any;\n  private greenhouseDataSubscription: Subscription;\n  currentData: GreenhouseData;\n\n  constructor(\n    private sensorService: SensorService,\n    private aiService: AiService,\n    private greenhouseService: GreenhouseService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadSensorData();\n    this.initializeChart();\n    this.subscribeToGreenhouseData();\n  }\n\n  ngOnDestroy(): void {\n    if (this.greenhouseDataSubscription) {\n      this.greenhouseDataSubscription.unsubscribe();\n    }\n  }\n\n  private initializeChart(): void {\n    const ctx = document.getElementById('greenhouseChart') as HTMLCanvasElement;\n    this.greenhouseChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Temperature (°C)',\n            data: [],\n            borderColor: '#ff6384',\n            tension: 0.4,\n            fill: false\n          },\n          {\n            label: 'Humidity (%)',\n            data: [],\n            borderColor: '#36a2eb',\n            tension: 0.4,\n            fill: false\n          },\n          {\n            label: 'Light (lux)',\n            data: [],\n            borderColor: '#ffcd56',\n            tension: 0.4,\n            fill: false\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        animation: {\n          duration: 0 // Disable animation for real-time updates\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Time'\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Value'\n            }\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: 'Greenhouse Conditions (Real-time)'\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }\n    });\n  }\n\n  private subscribeToGreenhouseData(): void {\n    this.greenhouseDataSubscription = this.greenhouseService.getGreenhouseData()\n      .subscribe(data => {\n        if (data.length > 0) {\n          this.updateChart(data);\n          this.currentData = data[data.length - 1];\n          this.updateSensors();\n        }\n      });\n  }\n\n  private updateChart(data: GreenhouseData[]): void {\n    const labels = data.map(d => {\n      const time = new Date(d.timestamp);\n      return time.toLocaleTimeString('en-US', { hour12: false, hour: '2-digit', minute: '2-digit' });\n    });\n\n    const temperatures = data.map(d => d.temperature);\n    const humidities = data.map(d => d.humidity);\n    const lights = data.map(d => d.light);\n\n    this.greenhouseChart.data.labels = labels;\n    this.greenhouseChart.data.datasets[0].data = temperatures;\n    this.greenhouseChart.data.datasets[1].data = humidities;\n    this.greenhouseChart.data.datasets[2].data = lights;\n    this.greenhouseChart.update();\n  }\n\n  private updateSensors(): void {\n    if (this.currentData) {\n      this.sensors = [\n        {\n          id: 1,\n          name: 'Temperature',\n          value: `${this.currentData.temperature}°C`,\n          icon: '🌡️',\n          type: 'Environmental',\n          unit: '°C',\n          status: 'normal'\n        },\n        {\n          id: 2,\n          name: 'Humidity',\n          value: `${this.currentData.humidity}%`,\n          icon: '💧',\n          type: 'Environmental',\n          unit: '%',\n          status: 'normal'\n        },\n        {\n          id: 3,\n          name: 'Light',\n          value: `${this.currentData.light} lux`,\n          icon: '☀️',\n          type: 'Environmental',\n          unit: 'lux',\n          status: 'normal'\n        }\n      ];\n    }\n  }\n\n  loadSensorData(): void {\n    // Keep other sensor data for EC, pH, and CO₂\n    const otherSensors = [\n      { id: 4, name: 'EC', value: '1.8 mS/cm', icon: '⚡', type: 'Nutrient', unit: 'mS/cm', status: 'normal' },\n      { id: 5, name: 'pH', value: '6.2', icon: '🧪', type: 'Nutrient', unit: '', status: 'normal' },\n      { id: 6, name: 'CO₂', value: '450 ppm', icon: '🌫️', type: 'Gas', unit: 'ppm', status: 'normal' }\n    ];\n    this.sensors = [...this.sensors, ...otherSensors];\n  }\n\n  startIrrigation(): void {\n    this.sensorService.startIrrigation().subscribe(\n      () => alert('Irrigation started successfully!'),\n      (error) => console.error('Error starting irrigation:', error)\n    );\n  }\n\n  exportData(): void {\n    this.sensorService.exportData().subscribe(\n      (data) => {\n        const blob = new Blob([data], { type: 'application/json' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.setAttribute('hidden', '');\n        a.setAttribute('href', url);\n        a.setAttribute('download', 'eden-link-data-export.json');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      },\n      (error) => console.error('Error exporting data:', error)\n    );\n  }\n}","<div class=\"dashboard-container\">\n    <div class=\"dashboard-header\">\n      <h1 class=\"dashboard-title\">Dashboard</h1>\n      <div class=\"dashboard-actions\">\n        <button class=\"btn btn-outline\" (click)=\"exportData()\">Export Data</button>\n        <button class=\"btn btn-primary\" (click)=\"startIrrigation()\">Start Irrigation</button>\n      </div>\n    </div>\n    \n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h2 class=\"card-title\">Sensor Status</h2>\n      </div>\n      <div class=\"sensors-grid\">\n        <app-sensor-card \n          *ngFor=\"let sensor of sensors\" \n          [sensor]=\"sensor\">\n        </app-sensor-card>\n      </div>\n    </div>\n    \n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h2 class=\"card-title\">Real-Time Charts</h2>\n      </div>\n      <div class=\"chart-container\">\n        <app-chart \n          *ngIf=\"chartData\" \n          [data]=\"chartData\">\n        </app-chart>\n      </div>\n      <div class=\"system-health\" [ngClass]=\"'system-health-' + systemHealth.status\">\n        <div class=\"system-health-icon\">✓</div>\n        <div class=\"system-health-content\">\n          <div class=\"system-health-title\">System Health: {{ systemHealth.status | titlecase }}</div>\n          <div class=\"system-health-message\">{{ systemHealth.message }}</div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h2 class=\"card-title\">Crop Cycle Roadmap</h2>\n      </div>\n      <div class=\"crop-roadmap\">\n        <div class=\"roadmap-step\" *ngFor=\"let stage of roadmapStages; let i = index\">\n          <div class=\"step-icon\" \n               [ngClass]=\"{'active': stage.active, 'completed': stage.completed}\">\n            {{ stage.completed ? '✓' : i + 1 }}\n          </div>\n          <div class=\"step-label\">{{ stage.name }}</div>\n        </div>\n      </div>\n    </div>\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}