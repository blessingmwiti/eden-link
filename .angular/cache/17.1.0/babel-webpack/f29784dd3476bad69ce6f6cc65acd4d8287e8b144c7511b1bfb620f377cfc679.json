{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/logistics.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../shared/components/chart/chart.component\";\nfunction LogisticsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Loading logistics data...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LogisticsComponent_div_7_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    i0.ɵɵtext(2, \"\\uD83D\\uDCA7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 19)(4, \"h3\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function LogisticsComponent_div_7_div_29_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const pump_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.activatePump(pump_r4.id));\n    });\n    i0.ɵɵtext(9, \"Activate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const pump_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", pump_r4.status);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Pump \", pump_r4.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pump_r4.status);\n  }\n}\nfunction LogisticsComponent_div_7_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31);\n    i0.ɵɵtext(2, \"\\uD83E\\uDDEA\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 32)(4, \"h3\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function LogisticsComponent_div_7_div_36_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const nutrient_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.refillNutrient(nutrient_r7.id));\n    });\n    i0.ɵɵtext(9, \"Refill\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const nutrient_r7 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.getStatusClass(nutrient_r7.percentage));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(nutrient_r7.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", nutrient_r7.percentage, \"%\");\n  }\n}\nfunction LogisticsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"section\", 8)(2, \"div\", 9)(3, \"div\", 10)(4, \"h2\");\n    i0.ɵɵtext(5, \"System Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 11)(7, \"span\", 12);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\", 13)(10, \"input\", 14);\n    i0.ɵɵlistener(\"change\", function LogisticsComponent_div_7_Template_input_change_10_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.toggleAutomationMode());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"span\", 15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 16)(13, \"div\", 17)(14, \"div\", 18);\n    i0.ɵɵtext(15, \"\\uD83D\\uDCE1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 19)(17, \"h3\");\n    i0.ɵɵtext(18, \"Connection\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\", 17)(22, \"div\", 18);\n    i0.ɵɵtext(23, \"\\u26A1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 19)(25, \"h3\");\n    i0.ɵɵtext(26, \"Power\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"p\");\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(29, LogisticsComponent_div_7_div_29_Template, 10, 3, \"div\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(30, \"section\", 21)(31, \"div\", 9)(32, \"div\", 10)(33, \"h2\");\n    i0.ɵɵtext(34, \"Nutrient Levels\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(35, \"div\", 22);\n    i0.ɵɵtemplate(36, LogisticsComponent_div_7_div_36_Template, 10, 3, \"div\", 23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(37, \"section\", 24)(38, \"div\", 9)(39, \"div\", 10)(40, \"h2\");\n    i0.ɵɵtext(41, \"Water Level\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(42, \"div\", 25)(43, \"h3\");\n    i0.ɵɵtext(44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function LogisticsComponent_div_7_Template_button_click_45_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.refillWater());\n    });\n    i0.ɵɵtext(46, \"Refill\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(47, \"div\", 27)(48, \"h3\");\n    i0.ɵɵtext(49, \"Water Usage History\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(50, \"app-chart\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"div\", 27)(52, \"h3\");\n    i0.ɵɵtext(53, \"Nutrient Usage History\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(54, \"app-chart\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.isAutoMode ? \"Auto\" : \"Manual\", \" Mode\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", ctx_r1.isAutoMode);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.systemStatus.connectionStatus);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r1.systemStatus.connectionStatus);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.systemStatus.powerStatus);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r1.systemStatus.powerStatus);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.systemStatus == null ? null : ctx_r1.systemStatus.pumps);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.nutrientLevels);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getStatusClass(ctx_r1.waterLevel.percentage));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.waterLevel.percentage, \"%\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"chartData\", ctx_r1.waterChartData)(\"chartOptions\", ctx_r1.chartOptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"chartData\", ctx_r1.nutrientChartData)(\"chartOptions\", ctx_r1.chartOptions);\n  }\n}\nexport class LogisticsComponent {\n  constructor(logisticsService) {\n    this.logisticsService = logisticsService;\n    this.destroy$ = new Subject();\n    this.systemStatus = {\n      connectionStatus: 'disconnected',\n      powerStatus: 'off',\n      automationMode: 'manual',\n      pumps: [],\n      lastUpdated: new Date(),\n      status: 'operational',\n      message: 'System initialized'\n    };\n    this.nutrientLevels = [{\n      id: 'nutrient-a',\n      name: 'Nutrient A',\n      level: 0,\n      percentage: 0,\n      unit: 'ppm',\n      status: 'normal',\n      lastUpdated: new Date()\n    }];\n    this.waterLevel = {\n      current: 0,\n      capacity: 100,\n      percentage: 0,\n      status: 'normal',\n      lastUpdated: new Date()\n    };\n    this.isLoading = true;\n    this.isAutoMode = true;\n    // Updated chart properties\n    this.waterChartData = {\n      labels: [],\n      datasets: [{\n        label: 'Water Usage (L)',\n        data: [],\n        borderColor: '#006d5b',\n        backgroundColor: 'rgba(0, 109, 91, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }]\n    };\n    this.nutrientChartData = {\n      labels: [],\n      datasets: [{\n        label: 'Nutrient Usage (mL)',\n        data: [],\n        borderColor: '#dc3545',\n        backgroundColor: 'rgba(220, 53, 69, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }]\n    };\n    this.chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          }\n        },\n        y: {\n          beginAtZero: true,\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          align: 'center',\n          labels: {\n            boxWidth: 15,\n            padding: 15,\n            font: {\n              size: 11\n            }\n          }\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          titleColor: '#000',\n          bodyColor: '#666',\n          borderColor: 'rgba(0, 0, 0, 0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      interaction: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      }\n    };\n  }\n  ngOnInit() {\n    this.loadLogisticsData();\n    this.loadUsageChart();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  loadLogisticsData() {\n    this.isLoading = true;\n    this.logisticsService.getNutrientLevels().pipe(takeUntil(this.destroy$)).subscribe({\n      next: nutrients => {\n        this.nutrientLevels = nutrients;\n      },\n      error: error => {\n        console.error('Error loading nutrient levels:', error);\n      }\n    });\n    this.logisticsService.getWaterLevel().pipe(takeUntil(this.destroy$)).subscribe({\n      next: water => {\n        this.waterLevel = water;\n      },\n      error: error => {\n        console.error('Error loading water level:', error);\n      }\n    });\n    this.logisticsService.getSystemStatus().pipe(takeUntil(this.destroy$)).subscribe({\n      next: status => {\n        this.systemStatus = status;\n        this.isAutoMode = status.automationMode === 'auto';\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Error loading system status:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n  loadUsageChart() {\n    this.logisticsService.getUsageHistory().pipe(takeUntil(this.destroy$)).subscribe({\n      next: data => {\n        // Update water usage chart\n        this.waterChartData = {\n          labels: data.dates,\n          datasets: [{\n            label: 'Water Usage (L)',\n            data: data.waterUsage,\n            borderColor: '#006d5b',\n            backgroundColor: 'rgba(0, 109, 91, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }]\n        };\n        // Update nutrient usage chart\n        this.nutrientChartData = {\n          labels: data.dates,\n          datasets: [{\n            label: 'Nutrient Usage (mL)',\n            data: data.nutrientAUsage,\n            borderColor: '#dc3545',\n            backgroundColor: 'rgba(220, 53, 69, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }]\n        };\n      },\n      error: error => {\n        console.error('Error loading usage history:', error);\n      }\n    });\n  }\n  toggleAutomationMode() {\n    const newMode = this.isAutoMode ? 'manual' : 'auto';\n    this.logisticsService.setAutomationMode(newMode).pipe(takeUntil(this.destroy$)).subscribe({\n      next: status => {\n        this.systemStatus = status;\n        this.isAutoMode = (status && status.automationMode?.toLowerCase?.()) === 'auto';\n        console.log(`Automation mode set to ${this.isAutoMode ? 'auto' : 'manual'}`);\n      },\n      error: error => {\n        console.error('Error toggling automation mode:', error);\n        // Reset the toggle if there was an error\n        this.isAutoMode = !this.isAutoMode;\n      }\n    });\n  }\n  activatePump(pumpId) {\n    this.logisticsService.activatePump(pumpId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: status => {\n        this.systemStatus = status;\n      },\n      error: error => {\n        console.error(`Error activating pump ${pumpId}:`, error);\n      }\n    });\n  }\n  refillNutrient(nutrientId) {\n    this.logisticsService.confirmNutrientRefill(nutrientId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: nutrients => {\n        this.nutrientLevels = nutrients;\n      },\n      error: error => {\n        console.error(`Error confirming refill for nutrient ${nutrientId}:`, error);\n      }\n    });\n  }\n  refillWater() {\n    this.logisticsService.confirmWaterRefill().pipe(takeUntil(this.destroy$)).subscribe({\n      next: water => {\n        this.waterLevel = water;\n      },\n      error: error => {\n        console.error('Error confirming water refill:', error);\n      }\n    });\n  }\n  getStatusClass(percentage) {\n    if (percentage <= 20) return 'critical';\n    if (percentage <= 40) return 'warning';\n    return 'normal';\n  }\n  static {\n    this.ɵfac = function LogisticsComponent_Factory(t) {\n      return new (t || LogisticsComponent)(i0.ɵɵdirectiveInject(i1.LogisticsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LogisticsComponent,\n      selectors: [[\"app-logistics\"]],\n      decls: 8,\n      vars: 2,\n      consts: [[1, \"logistics-container\"], [1, \"section-header\"], [1, \"section-description\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [\"class\", \"logistics-content\", 4, \"ngIf\"], [1, \"loading-container\"], [1, \"loading-spinner\"], [1, \"logistics-content\"], [1, \"system-status\"], [1, \"card\"], [1, \"card-header\"], [1, \"automation-toggle\"], [1, \"toggle-label\"], [1, \"switch\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [1, \"slider\"], [1, \"status-grid\"], [1, \"status-item\", 3, \"ngClass\"], [1, \"status-icon\"], [1, \"status-details\"], [\"class\", \"status-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"nutrient-levels\"], [1, \"nutrient-grid\"], [\"class\", \"nutrient-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"water-level\"], [1, \"water-details\", 3, \"ngClass\"], [1, \"btn-secondary\", 3, \"click\"], [1, \"usage-chart\"], [3, \"chartData\", \"chartOptions\"], [1, \"btn-primary\", 3, \"click\"], [1, \"nutrient-item\", 3, \"ngClass\"], [1, \"nutrient-icon\"], [1, \"nutrient-details\"]],\n      template: function LogisticsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"h1\");\n          i0.ɵɵtext(3, \"Logistics Panel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 2);\n          i0.ɵɵtext(5, \"Monitor and control your system's water, nutrients, and equipment status.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(6, LogisticsComponent_div_6_Template, 4, 0, \"div\", 3)(7, LogisticsComponent_div_7_Template, 55, 14, \"div\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.ChartComponent],\n      styles: [\".logistics-container[_ngcontent-%COMP%] {\\n    padding: 20px;\\n    max-width: 1200px;\\n    margin: 0 auto;\\n  }\\n  \\n  .section-header[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .section-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n    color: #006d5b;\\n    font-size: 24px;\\n  }\\n  \\n  .section-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    color: #666;\\n    font-size: 16px;\\n  }\\n  \\n  .loading-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    padding: 40px 0;\\n  }\\n  \\n  .loading-spinner[_ngcontent-%COMP%] {\\n    border: 4px solid #f3f3f3;\\n    border-top: 4px solid #006d5b;\\n    border-radius: 50%;\\n    width: 40px;\\n    height: 40px;\\n    animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n    margin-bottom: 16px;\\n  }\\n  \\n  @keyframes _ngcontent-%COMP%_spin {\\n    0% { transform: rotate(0deg); }\\n    100% { transform: rotate(360deg); }\\n  }\\n  \\n  .card[_ngcontent-%COMP%] {\\n    background-color: #ffffff;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n    margin-bottom: 20px;\\n    padding: 20px;\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .automation-toggle[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n  }\\n  \\n  .toggle-label[_ngcontent-%COMP%] {\\n    margin-right: 10px;\\n    font-size: 14px;\\n  }\\n  \\n  .switch[_ngcontent-%COMP%] {\\n    position: relative;\\n    display: inline-block;\\n    width: 34px;\\n    height: 20px;\\n  }\\n  \\n  .switch[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    opacity: 0;\\n    width: 0;\\n    height: 0;\\n  }\\n  \\n  .slider[_ngcontent-%COMP%] {\\n    position: absolute;\\n    cursor: pointer;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #ccc;\\n    transition: 0.4s;\\n    border-radius: 20px;\\n  }\\n  \\n  .slider[_ngcontent-%COMP%]:before {\\n    position: absolute;\\n    content: \\\"\\\";\\n    height: 14px;\\n    width: 14px;\\n    left: 3px;\\n    bottom: 3px;\\n    background-color: white;\\n    transition: 0.4s;\\n    border-radius: 50%;\\n  }\\n  \\n  input[_ngcontent-%COMP%]:checked    + .slider[_ngcontent-%COMP%] {\\n    background-color: #006d5b;\\n  }\\n  \\n  input[_ngcontent-%COMP%]:checked    + .slider[_ngcontent-%COMP%]:before {\\n    transform: translateX(14px);\\n  }\\n  \\n  .status-grid[_ngcontent-%COMP%], .nutrient-grid[_ngcontent-%COMP%] {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\\n    gap: 20px;\\n  }\\n  \\n  .status-item[_ngcontent-%COMP%], .nutrient-item[_ngcontent-%COMP%] {\\n    text-align: center;\\n    padding: 15px;\\n    border: 1px solid #ddd;\\n    border-radius: 8px;\\n  }\\n  \\n  .status-item.critical[_ngcontent-%COMP%], .nutrient-item.critical[_ngcontent-%COMP%] {\\n    border-left: 5px solid #f44336;\\n  }\\n  \\n  .status-item.warning[_ngcontent-%COMP%], .nutrient-item.warning[_ngcontent-%COMP%] {\\n    border-left: 5px solid #ffc107;\\n  }\\n  \\n  .status-item.normal[_ngcontent-%COMP%], .nutrient-item.normal[_ngcontent-%COMP%] {\\n    border-left: 5px solid #4caf50;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%], .btn-secondary[_ngcontent-%COMP%] {\\n    padding: 8px 12px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%] {\\n    background-color: #006d5b;\\n    color: white;\\n  }\\n  \\n  .btn-secondary[_ngcontent-%COMP%] {\\n    background-color: #4caf50;\\n    color: white;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%]:hover {\\n    background-color: #004d40;\\n  }\\n  \\n  .btn-secondary[_ngcontent-%COMP%]:hover {\\n    background-color: #388e3c;\\n  }\\n  \\n  .chart-container[_ngcontent-%COMP%] {\\n    height: 300px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvbG9naXN0aWNzL2xvZ2lzdGljcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixjQUFjO0VBQ2hCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLDZCQUE2QjtJQUM3QixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFlBQVk7SUFDWixrQ0FBa0M7SUFDbEMsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsS0FBSyx1QkFBdUIsRUFBRTtJQUM5QixPQUFPLHlCQUF5QixFQUFFO0VBQ3BDOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQix3Q0FBd0M7SUFDeEMsbUJBQW1CO0lBQ25CLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0lBQ25CLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsV0FBVztJQUNYLFlBQVk7RUFDZDs7RUFFQTtJQUNFLFVBQVU7SUFDVixRQUFRO0lBQ1IsU0FBUztFQUNYOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixNQUFNO0lBQ04sT0FBTztJQUNQLFFBQVE7SUFDUixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFlBQVk7SUFDWixXQUFXO0lBQ1gsU0FBUztJQUNULFdBQVc7SUFDWCx1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLDJCQUEyQjtFQUM3Qjs7RUFFQTtJQUNFLGFBQWE7SUFDYiw0REFBNEQ7SUFDNUQsU0FBUztFQUNYOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtFQUNkOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2lzdGljcy1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbiAgXG4gIC5zZWN0aW9uLWhlYWRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbiAgXG4gIC5zZWN0aW9uLWhlYWRlciBoMSB7XG4gICAgY29sb3I6ICMwMDZkNWI7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICB9XG4gIFxuICAuc2VjdGlvbi1oZWFkZXIgcCB7XG4gICAgY29sb3I6ICM2NjY7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG4gIFxuICAubG9hZGluZy1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDQwcHggMDtcbiAgfVxuICBcbiAgLmxvYWRpbmctc3Bpbm5lciB7XG4gICAgYm9yZGVyOiA0cHggc29saWQgI2YzZjNmMztcbiAgICBib3JkZXItdG9wOiA0cHggc29saWQgIzAwNmQ1YjtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGFuaW1hdGlvbjogc3BpbiAxcyBsaW5lYXIgaW5maW5pdGU7XG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgfVxuICBcbiAgQGtleWZyYW1lcyBzcGluIHtcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XG4gICAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH1cbiAgfVxuICBcbiAgLmNhcmQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICB9XG4gIFxuICAuY2FyZC1oZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICBcbiAgLmF1dG9tYXRpb24tdG9nZ2xlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC50b2dnbGUtbGFiZWwge1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbiAgXG4gIC5zd2l0Y2gge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDM0cHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICB9XG4gIFxuICAuc3dpdGNoIGlucHV0IHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgfVxuICBcbiAgLnNsaWRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgICB0cmFuc2l0aW9uOiAwLjRzO1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIH1cbiAgXG4gIC5zbGlkZXI6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBoZWlnaHQ6IDE0cHg7XG4gICAgd2lkdGg6IDE0cHg7XG4gICAgbGVmdDogM3B4O1xuICAgIGJvdHRvbTogM3B4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHRyYW5zaXRpb246IDAuNHM7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB9XG4gIFxuICBpbnB1dDpjaGVja2VkICsgLnNsaWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNmQ1YjtcbiAgfVxuICBcbiAgaW5wdXQ6Y2hlY2tlZCArIC5zbGlkZXI6YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTRweCk7XG4gIH1cbiAgXG4gIC5zdGF0dXMtZ3JpZCwgLm51dHJpZW50LWdyaWQge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMjAwcHgsIDFmcikpO1xuICAgIGdhcDogMjBweDtcbiAgfVxuICBcbiAgLnN0YXR1cy1pdGVtLCAubnV0cmllbnQtaXRlbSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIH1cbiAgXG4gIC5zdGF0dXMtaXRlbS5jcml0aWNhbCwgLm51dHJpZW50LWl0ZW0uY3JpdGljYWwge1xuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2Y0NDMzNjtcbiAgfVxuICBcbiAgLnN0YXR1cy1pdGVtLndhcm5pbmcsIC5udXRyaWVudC1pdGVtLndhcm5pbmcge1xuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2ZmYzEwNztcbiAgfVxuICBcbiAgLnN0YXR1cy1pdGVtLm5vcm1hbCwgLm51dHJpZW50LWl0ZW0ubm9ybWFsIHtcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM0Y2FmNTA7XG4gIH1cbiAgXG4gIC5idG4tcHJpbWFyeSwgLmJ0bi1zZWNvbmRhcnkge1xuICAgIHBhZGRpbmc6IDhweCAxMnB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIFxuICAuYnRuLXByaW1hcnkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDZkNWI7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9XG4gIFxuICAuYnRuLXNlY29uZGFyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgXG4gIC5idG4tcHJpbWFyeTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNGQ0MDtcbiAgfVxuICBcbiAgLmJ0bi1zZWNvbmRhcnk6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzODhlM2M7XG4gIH1cbiAgXG4gIC5jaGFydC1jb250YWluZXIge1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Subject","takeUntil","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LogisticsComponent_div_7_div_29_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r6","pump_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","activatePump","id","ɵɵproperty","status","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate","LogisticsComponent_div_7_div_36_Template_button_click_8_listener","_r9","nutrient_r7","ctx_r8","refillNutrient","ctx_r3","getStatusClass","percentage","name","LogisticsComponent_div_7_Template_input_change_10_listener","_r11","ctx_r10","toggleAutomationMode","ɵɵtemplate","LogisticsComponent_div_7_div_29_Template","LogisticsComponent_div_7_div_36_Template","LogisticsComponent_div_7_Template_button_click_45_listener","ctx_r12","refillWater","ctx_r1","isAutoMode","systemStatus","connectionStatus","powerStatus","pumps","nutrientLevels","waterLevel","waterChartData","chartOptions","nutrientChartData","LogisticsComponent","constructor","logisticsService","destroy$","automationMode","lastUpdated","Date","message","level","unit","current","capacity","isLoading","labels","datasets","label","data","borderColor","backgroundColor","tension","fill","borderWidth","responsive","maintainAspectRatio","scales","x","grid","color","ticks","font","size","y","beginAtZero","plugins","legend","position","align","boxWidth","padding","tooltip","mode","intersect","titleColor","bodyColor","interaction","axis","ngOnInit","loadLogisticsData","loadUsageChart","ngOnDestroy","next","complete","getNutrientLevels","pipe","subscribe","nutrients","error","console","getWaterLevel","water","getSystemStatus","getUsageHistory","dates","waterUsage","nutrientAUsage","newMode","setAutomationMode","toLowerCase","log","pumpId","nutrientId","confirmNutrientRefill","confirmWaterRefill","ɵɵdirectiveInject","i1","LogisticsService","selectors","decls","vars","consts","template","LogisticsComponent_Template","rf","ctx","LogisticsComponent_div_6_Template","LogisticsComponent_div_7_Template"],"sources":["/home/injinia/eden-link/src/app/features/logistics/logistics.component.ts","/home/injinia/eden-link/src/app/features/logistics/logistics.component.html"],"sourcesContent":["// src/app/features/logistics/logistics.component.ts\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { LogisticsService } from '../../core/services/logistics.service';\nimport { SystemStatus, NutrientLevel, WaterLevel, UsageHistory, PumpStatus } from '../../core/models/system-status.model';\nimport { ChartData, ChartOptions } from 'chart.js';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-logistics',\n  templateUrl: './logistics.component.html',\n  styleUrls: ['./logistics.component.css']\n})\nexport class LogisticsComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  \n  systemStatus: SystemStatus = {\n    connectionStatus: 'disconnected',\n    powerStatus: 'off',\n    automationMode: 'manual',\n    pumps: [] as PumpStatus[],\n    lastUpdated: new Date(),\n    status: 'operational',\n    message: 'System initialized'\n  };\n\n  nutrientLevels: NutrientLevel[] = [{\n    id: 'nutrient-a',\n    name: 'Nutrient A',\n    level: 0,\n    percentage: 0,\n    unit: 'ppm',\n    status: 'normal',\n    lastUpdated: new Date()\n  }];\n\n  waterLevel: WaterLevel = {\n    current: 0,\n    capacity: 100,\n    percentage: 0,\n    status: 'normal',\n    lastUpdated: new Date()\n  };\n\n  isLoading = true;\n  isAutoMode = true;\n  \n  // Updated chart properties\n  waterChartData: any = {\n    labels: [],\n    datasets: [{\n      label: 'Water Usage (L)',\n      data: [],\n      borderColor: '#006d5b',\n      backgroundColor: 'rgba(0, 109, 91, 0.1)',\n      tension: 0.4,\n      fill: true,\n      borderWidth: 2\n    }]\n  };\n\n  nutrientChartData: any = {\n    labels: [],\n    datasets: [{\n      label: 'Nutrient Usage (mL)',\n      data: [],\n      borderColor: '#dc3545',\n      backgroundColor: 'rgba(220, 53, 69, 0.1)',\n      tension: 0.4,\n      fill: true,\n      borderWidth: 2\n    }]\n  };\n  \n  chartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n          borderColor: 'rgba(0, 0, 0, 0.3)'\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 11\n          }\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n          borderColor: 'rgba(0, 0, 0, 0.3)'\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 11\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        align: 'center',\n        labels: {\n          boxWidth: 15,\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        titleColor: '#000',\n        bodyColor: '#666',\n        borderColor: 'rgba(0, 0, 0, 0.1)',\n        borderWidth: 1,\n        padding: 10\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  };\n  \n  constructor(private logisticsService: LogisticsService) {}\n\n  ngOnInit(): void {\n    this.loadLogisticsData();\n    this.loadUsageChart();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadLogisticsData(): void {\n    this.isLoading = true;\n    \n    this.logisticsService.getNutrientLevels().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (nutrients) => {\n        this.nutrientLevels = nutrients;\n      },\n      error: (error) => {\n        console.error('Error loading nutrient levels:', error);\n      }\n    });\n    \n    this.logisticsService.getWaterLevel().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (water) => {\n        this.waterLevel = water;\n      },\n      error: (error) => {\n        console.error('Error loading water level:', error);\n      }\n    });\n    \n    this.logisticsService.getSystemStatus().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (status) => {\n        this.systemStatus = status;\n        this.isAutoMode = status.automationMode === 'auto';\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Error loading system status:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n\n  loadUsageChart(): void {\n    this.logisticsService.getUsageHistory().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (data) => {\n        // Update water usage chart\n        this.waterChartData = {\n          labels: data.dates,\n          datasets: [{\n              label: 'Water Usage (L)',\n              data: data.waterUsage,\n            borderColor: '#006d5b',\n            backgroundColor: 'rgba(0, 109, 91, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }]\n        };\n\n        // Update nutrient usage chart\n        this.nutrientChartData = {\n          labels: data.dates,\n          datasets: [{\n            label: 'Nutrient Usage (mL)',\n              data: data.nutrientAUsage,\n            borderColor: '#dc3545',\n            backgroundColor: 'rgba(220, 53, 69, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }]\n        };\n      },\n      error: (error) => {\n        console.error('Error loading usage history:', error);\n      }\n    });\n  }\n\n  toggleAutomationMode(): void {\n    const newMode = this.isAutoMode ? 'manual' : 'auto';\n    \n    this.logisticsService.setAutomationMode(newMode).pipe(takeUntil(this.destroy$)).subscribe({\n      next: (status) => {\n        this.systemStatus = status;\n        this.isAutoMode = (status && status.automationMode?.toLowerCase?.()) === 'auto';\n        console.log(`Automation mode set to ${this.isAutoMode ? 'auto' : 'manual'}`);\n      },\n      error: (error) => {\n        console.error('Error toggling automation mode:', error);\n        // Reset the toggle if there was an error\n        this.isAutoMode = !this.isAutoMode;\n      }\n    });\n  }\n\n  activatePump(pumpId: string): void {\n    this.logisticsService.activatePump(pumpId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: (status) => {\n        this.systemStatus = status;\n      },\n      error: (error) => {\n        console.error(`Error activating pump ${pumpId}:`, error);\n      }\n    });\n  }\n\n  refillNutrient(nutrientId: string): void {\n    this.logisticsService.confirmNutrientRefill(nutrientId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: (nutrients) => {\n        this.nutrientLevels = nutrients;\n      },\n      error: (error) => {\n        console.error(`Error confirming refill for nutrient ${nutrientId}:`, error);\n      }\n    });\n  }\n\n  refillWater(): void {\n    this.logisticsService.confirmWaterRefill().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (water) => {\n        this.waterLevel = water;\n      },\n      error: (error) => {\n        console.error('Error confirming water refill:', error);\n      }\n    });\n  }\n\n  getStatusClass(percentage: number): string {\n    if (percentage <= 20) return 'critical';\n    if (percentage <= 40) return 'warning';\n    return 'normal';\n  }\n}","<div class=\"logistics-container\">\n    <section class=\"section-header\">\n      <h1>Logistics Panel</h1>\n      <p class=\"section-description\">Monitor and control your system's water, nutrients, and equipment status.</p>\n    </section>\n  \n    <div class=\"loading-container\" *ngIf=\"isLoading\">\n      <div class=\"loading-spinner\"></div>\n      <p>Loading logistics data...</p>\n    </div>\n  \n    <div class=\"logistics-content\" *ngIf=\"!isLoading\">\n      <!-- System Status Section -->\n      <section class=\"system-status\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h2>System Status</h2>\n            <div class=\"automation-toggle\">\n              <span class=\"toggle-label\">{{ isAutoMode ? 'Auto' : 'Manual' }} Mode</span>\n              <label class=\"switch\">\n                <input type=\"checkbox\" [checked]=\"isAutoMode\" (change)=\"toggleAutomationMode()\">\n                <span class=\"slider\"></span>\n              </label>\n            </div>\n          </div>\n  \n          <div class=\"status-grid\">\n            <div class=\"status-item\" [ngClass]=\"systemStatus.connectionStatus\">\n              <div class=\"status-icon\">📡</div>\n              <div class=\"status-details\">\n                <h3>Connection</h3>\n                <p>{{ systemStatus.connectionStatus }}</p>\n              </div>\n            </div>\n            \n            <div class=\"status-item\" [ngClass]=\"systemStatus.powerStatus\">\n              <div class=\"status-icon\">⚡</div>\n              <div class=\"status-details\">\n                <h3>Power</h3>\n                <p>{{ systemStatus.powerStatus }}</p>\n              </div>\n            </div>\n            \n            <div class=\"status-item\" *ngFor=\"let pump of systemStatus?.pumps\" [ngClass]=\"pump.status\">\n              <div class=\"status-icon\">💧</div>\n              <div class=\"status-details\">\n                <h3>Pump {{ pump.id }}</h3>\n                <p>{{ pump.status }}</p>\n                <button class=\"btn-primary\" (click)=\"activatePump(pump.id)\">Activate</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n  \n      <!-- Nutrient Levels Section -->\n      <section class=\"nutrient-levels\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h2>Nutrient Levels</h2>\n          </div>\n          <div class=\"nutrient-grid\">\n            <div class=\"nutrient-item\" *ngFor=\"let nutrient of nutrientLevels\" [ngClass]=\"getStatusClass(nutrient.percentage)\">\n              <div class=\"nutrient-icon\">🧪</div>\n              <div class=\"nutrient-details\">\n                <h3>{{ nutrient.name }}</h3>\n                <p>{{ nutrient.percentage }}%</p>\n                <button class=\"btn-secondary\" (click)=\"refillNutrient(nutrient.id)\">Refill</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n  \n      <!-- Water Level Section -->\n      <section class=\"water-level\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h2>Water Level</h2>\n          </div>\n          <div class=\"water-details\" [ngClass]=\"getStatusClass(waterLevel.percentage)\">\n            <h3>{{ waterLevel.percentage }}%</h3>\n            <button class=\"btn-secondary\" (click)=\"refillWater()\">Refill</button>\n          </div>\n        </div>\n      </section>\n  \n      <!-- Usage Chart Section -->\n      <div class=\"usage-chart\">\n        <h3>Water Usage History</h3>\n        <app-chart\n          [chartData]=\"waterChartData\"\n          [chartOptions]=\"chartOptions\">\n        </app-chart>\n      </div>\n  \n      <!-- Nutrient Usage Chart -->\n      <div class=\"usage-chart\">\n        <h3>Nutrient Usage History</h3>\n        <app-chart\n          [chartData]=\"nutrientChartData\"\n          [chartOptions]=\"chartOptions\">\n        </app-chart>\n      </div>\n    </div>\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}