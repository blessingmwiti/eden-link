{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/services/ai.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = (a0, a1) => ({\n  \"user-message\": a0,\n  \"ai-message\": a1\n});\nfunction AiChatbotComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ÉµÉµtext(2);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"div\", 13);\n    i0.ÉµÉµtext(4);\n    i0.ÉµÉµpipe(5, \"date\");\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction2(6, _c0, message_r1.fromUser, !message_r1.fromUser));\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate(message_r1.text);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate(i0.ÉµÉµpipeBind2(5, 3, message_r1.timestamp, \"shortTime\"));\n  }\n}\nconst _c1 = a0 => ({\n  \"open\": a0\n});\nexport class AiChatbotComponent {\n  constructor(aiService) {\n    this.aiService = aiService;\n    this.isChatOpen = false;\n    this.messages = [];\n    this.newMessage = '';\n  }\n  ngOnInit() {\n    // Initial welcome message\n    this.messages.push({\n      text: 'Hello! I\\'m your Eden Link AI assistant. How can I help you today?',\n      fromUser: false,\n      timestamp: new Date()\n    });\n  }\n  toggleChat() {\n    this.isChatOpen = !this.isChatOpen;\n  }\n  sendMessage() {\n    if (!this.newMessage.trim()) return;\n    // Add user message\n    this.messages.push({\n      text: this.newMessage,\n      fromUser: true,\n      timestamp: new Date()\n    });\n    // Store and clear message input\n    const userQuery = this.newMessage;\n    this.newMessage = '';\n    // Get AI response\n    this.aiService.getResponse(userQuery).subscribe(response => {\n      this.messages.push({\n        text: response,\n        fromUser: false,\n        timestamp: new Date()\n      });\n    }, error => {\n      console.error('Error getting AI response:', error);\n      // Fallback response\n      this.messages.push({\n        text: 'I\\'m having trouble connecting right now. Please try again later.',\n        fromUser: false,\n        timestamp: new Date()\n      });\n    });\n  }\n  static {\n    this.Éµfac = function AiChatbotComponent_Factory(t) {\n      return new (t || AiChatbotComponent)(i0.ÉµÉµdirectiveInject(i1.AiService));\n    };\n  }\n  static {\n    this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n      type: AiChatbotComponent,\n      selectors: [[\"app-ai-chatbot\"]],\n      decls: 15,\n      vars: 5,\n      consts: [[1, \"ai-chatbot-container\"], [1, \"chat-icon\", 3, \"click\"], [1, \"chat-window\", 3, \"ngClass\"], [1, \"chat-header\"], [1, \"chat-title\"], [1, \"close-btn\", 3, \"click\"], [1, \"chat-messages\"], [\"class\", \"message\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"chat-input\"], [\"type\", \"text\", \"placeholder\", \"Ask a question...\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [3, \"click\"], [1, \"message\", 3, \"ngClass\"], [1, \"message-content\"], [1, \"message-time\"]],\n      template: function AiChatbotComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ÉµÉµlistener(\"click\", function AiChatbotComponent_Template_div_click_1_listener() {\n            return ctx.toggleChat();\n          });\n          i0.ÉµÉµtext(2, \"\\uD83E\\uDD16\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n          i0.ÉµÉµtext(6, \"Eden Link AI Assistant\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(7, \"div\", 5);\n          i0.ÉµÉµlistener(\"click\", function AiChatbotComponent_Template_div_click_7_listener() {\n            return ctx.toggleChat();\n          });\n          i0.ÉµÉµtext(8, \"\\u2715\");\n          i0.ÉµÉµelementEnd()();\n          i0.ÉµÉµelementStart(9, \"div\", 6);\n          i0.ÉµÉµtemplate(10, AiChatbotComponent_div_10_Template, 6, 9, \"div\", 7);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(11, \"div\", 8)(12, \"input\", 9);\n          i0.ÉµÉµlistener(\"ngModelChange\", function AiChatbotComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.newMessage = $event;\n          })(\"keyup.enter\", function AiChatbotComponent_Template_input_keyup_enter_12_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(13, \"button\", 10);\n          i0.ÉµÉµlistener(\"click\", function AiChatbotComponent_Template_button_click_13_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ÉµÉµtext(14, \"Send\");\n          i0.ÉµÉµelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ÉµÉµadvance(3);\n          i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction1(3, _c1, ctx.isChatOpen));\n          i0.ÉµÉµadvance(7);\n          i0.ÉµÉµproperty(\"ngForOf\", ctx.messages);\n          i0.ÉµÉµadvance(2);\n          i0.ÉµÉµproperty(\"ngModel\", ctx.newMessage);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.DatePipe],\n      styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 740:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(43:3) /home/injinia/eden-link/src/app/shared/components/ai-chatbot/ai-chatbot.component.css Unclosed block\\\\n\\\\n \\\\u001b[90m 41 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 42 | \\\\u001b[39m  \\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 43 | \\\\u001b[39m  \\\\u001b[33m.chat-header\\\\u001b[39m \\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m    | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 44 | \\\\u001b[39m    background-color\\\\u001b[33m:\\\\u001b[39m \\\\u001b[35m#006d5b\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 45 | \\\\u001b[39m    color\\\\u001b[33m:\\\\u001b[39m \\\\u001b[35m#ffffff\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[740]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=ai-chatbot.component.css.map*/\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµproperty","ÉµÉµpureFunction2","_c0","message_r1","fromUser","ÉµÉµadvance","ÉµÉµtextInterpolate","text","ÉµÉµpipeBind2","timestamp","AiChatbotComponent","constructor","aiService","isChatOpen","messages","newMessage","ngOnInit","push","Date","toggleChat","sendMessage","trim","userQuery","getResponse","subscribe","response","error","console","ÉµÉµdirectiveInject","i1","AiService","selectors","decls","vars","consts","template","AiChatbotComponent_Template","rf","ctx","ÉµÉµlistener","AiChatbotComponent_Template_div_click_1_listener","AiChatbotComponent_Template_div_click_7_listener","ÉµÉµtemplate","AiChatbotComponent_div_10_Template","AiChatbotComponent_Template_input_ngModelChange_12_listener","$event","AiChatbotComponent_Template_input_keyup_enter_12_listener","AiChatbotComponent_Template_button_click_13_listener","ÉµÉµpureFunction1","_c1"],"sources":["/home/injinia/eden-link/src/app/shared/components/ai-chatbot/ai-chatbot.component.ts","/home/injinia/eden-link/src/app/shared/components/ai-chatbot/ai-chatbot.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AiService } from '../../../core/services/ai.service';\n\n@Component({\n  selector: 'app-ai-chatbot',\n  templateUrl: './ai-chatbot.component.html',\n  styleUrls: ['./ai-chatbot.component.css']\n})\nexport class AiChatbotComponent implements OnInit {\n  isChatOpen = false;\n  messages: { text: string, fromUser: boolean, timestamp: Date }[] = [];\n  newMessage = '';\n  \n  constructor(private aiService: AiService) { }\n\n  ngOnInit(): void {\n    // Initial welcome message\n    this.messages.push({\n      text: 'Hello! I\\'m your Eden Link AI assistant. How can I help you today?',\n      fromUser: false,\n      timestamp: new Date()\n    });\n  }\n  \n  toggleChat(): void {\n    this.isChatOpen = !this.isChatOpen;\n  }\n  \n  sendMessage(): void {\n    if (!this.newMessage.trim()) return;\n    \n    // Add user message\n    this.messages.push({\n      text: this.newMessage,\n      fromUser: true,\n      timestamp: new Date()\n    });\n    \n    // Store and clear message input\n    const userQuery = this.newMessage;\n    this.newMessage = '';\n    \n    // Get AI response\n    this.aiService.getResponse(userQuery).subscribe(\n      (response) => {\n        this.messages.push({\n          text: response,\n          fromUser: false,\n          timestamp: new Date()\n        });\n      },\n      (error) => {\n        console.error('Error getting AI response:', error);\n        // Fallback response\n        this.messages.push({\n          text: 'I\\'m having trouble connecting right now. Please try again later.',\n          fromUser: false,\n          timestamp: new Date()\n        });\n      }\n    );\n  }\n}","<div class=\"ai-chatbot-container\">\n    <div class=\"chat-icon\" (click)=\"toggleChat()\">ðŸ¤–</div>\n    \n    <div class=\"chat-window\" [ngClass]=\"{'open': isChatOpen}\">\n      <div class=\"chat-header\">\n        <div class=\"chat-title\">Eden Link AI Assistant</div>\n        <div class=\"close-btn\" (click)=\"toggleChat()\">âœ•</div>\n      </div>\n      \n      <div class=\"chat-messages\">\n        <div *ngFor=\"let message of messages\" \n             class=\"message\" \n             [ngClass]=\"{'user-message': message.fromUser, 'ai-message': !message.fromUser}\">\n          <div class=\"message-content\">{{ message.text }}</div>\n          <div class=\"message-time\">{{ message.timestamp | date:'shortTime' }}</div>\n        </div>\n      </div>\n      \n      <div class=\"chat-input\">\n        <input type=\"text\" \n               placeholder=\"Ask a question...\" \n               [(ngModel)]=\"newMessage\" \n               (keyup.enter)=\"sendMessage()\">\n        <button (click)=\"sendMessage()\">Send</button>\n      </div>\n    </div>\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}