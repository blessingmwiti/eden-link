{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/logistics.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../shared/components/chart/chart.component\";\nfunction LogisticsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Loading logistics data...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LogisticsComponent_div_7_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"div\", 26);\n    i0.ɵɵtext(2, \"\\uD83E\\uDDEA\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 27)(4, \"h3\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function LogisticsComponent_div_7_div_55_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const nutrient_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.refillNutrient(nutrient_r3.id));\n    });\n    i0.ɵɵtext(9, \"Refill\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const nutrient_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.getStatusClass(nutrient_r3.percentage));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(nutrient_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", nutrient_r3.percentage, \"%\");\n  }\n}\nfunction LogisticsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"section\", 8)(2, \"div\", 9)(3, \"div\", 10);\n    i0.ɵɵtext(4, \"\\uD83C\\uDF21\\uFE0F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 11)(6, \"h3\");\n    i0.ɵɵtext(7, \"Temperature\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 12);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 13);\n    i0.ɵɵtext(11, \" Optimal: 22-26\\u00B0C \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 10);\n    i0.ɵɵtext(14, \"\\uD83D\\uDCA7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 11)(16, \"h3\");\n    i0.ɵɵtext(17, \"Humidity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 12);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 13);\n    i0.ɵɵtext(21, \" Optimal: 60-70% \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"div\", 9)(23, \"div\", 10);\n    i0.ɵɵtext(24, \"\\u2600\\uFE0F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 11)(26, \"h3\");\n    i0.ɵɵtext(27, \"Light\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 12);\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\", 13);\n    i0.ɵɵtext(31, \" Optimal: 500-800 lux \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(32, \"div\", 9)(33, \"div\", 10);\n    i0.ɵɵtext(34, \"\\uD83E\\uDDEA\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 11)(36, \"h3\");\n    i0.ɵɵtext(37, \"pH Level\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"div\", 12);\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"div\", 13);\n    i0.ɵɵtext(41, \" Optimal: 5.8-6.5 \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(42, \"section\", 14)(43, \"div\", 15)(44, \"div\", 16)(45, \"h2\");\n    i0.ɵɵtext(46, \"Environmental Metrics\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(47, \"div\", 17);\n    i0.ɵɵelement(48, \"app-chart\", 18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(49, \"section\", 19)(50, \"div\", 15)(51, \"div\", 16)(52, \"h2\");\n    i0.ɵɵtext(53, \"Nutrient Levels\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(54, \"div\", 20);\n    i0.ɵɵtemplate(55, LogisticsComponent_div_7_div_55_Template, 10, 3, \"div\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(56, \"section\", 22)(57, \"div\", 15)(58, \"div\", 16)(59, \"h2\");\n    i0.ɵɵtext(60, \"Water Level\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(61, \"div\", 23)(62, \"h3\");\n    i0.ɵɵtext(63);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(64, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function LogisticsComponent_div_7_Template_button_click_64_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.refillWater());\n    });\n    i0.ɵɵtext(65, \"Refill\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getMetricStatus(ctx_r1.currentTemp, 22, 26));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentTemp, \"\\u00B0C \");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getMetricStatus(ctx_r1.currentHumidity, 60, 70));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentHumidity, \"% \");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getMetricStatus(ctx_r1.currentLight, 500, 800));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentLight, \" lux \");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getMetricStatus(ctx_r1.currentPH, 5.8, 6.5));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentPH, \" \");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"chartData\", ctx_r1.chartData)(\"chartOptions\", ctx_r1.chartOptions);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.nutrientLevels);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getStatusClass(ctx_r1.waterLevel.percentage));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.waterLevel.percentage, \"%\");\n  }\n}\nexport class LogisticsComponent {\n  constructor(logisticsService) {\n    this.logisticsService = logisticsService;\n    this.destroy$ = new Subject();\n    this.systemStatus = {\n      connectionStatus: 'disconnected',\n      powerStatus: 'off',\n      automationMode: 'manual',\n      pumps: [],\n      lastUpdated: new Date(),\n      status: 'operational',\n      message: 'System initialized'\n    };\n    this.nutrientLevels = [{\n      id: 'nutrient-a',\n      name: 'Nutrient A',\n      level: 0,\n      percentage: 0,\n      unit: 'ppm',\n      status: 'normal',\n      lastUpdated: new Date()\n    }];\n    this.waterLevel = {\n      current: 0,\n      capacity: 100,\n      percentage: 0,\n      status: 'normal',\n      lastUpdated: new Date()\n    };\n    this.isLoading = true;\n    this.isAutoMode = true;\n    // Updated chart properties\n    this.waterChartData = {\n      labels: [],\n      datasets: [{\n        label: 'Water Usage (L)',\n        data: [],\n        borderColor: '#006d5b',\n        backgroundColor: 'rgba(0, 109, 91, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }]\n    };\n    this.nutrientChartData = {\n      labels: [],\n      datasets: [{\n        label: 'Nutrient Usage (mL)',\n        data: [],\n        borderColor: '#dc3545',\n        backgroundColor: 'rgba(220, 53, 69, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }]\n    };\n    this.chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          }\n        },\n        y: {\n          beginAtZero: true,\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          align: 'center',\n          labels: {\n            boxWidth: 15,\n            padding: 15,\n            font: {\n              size: 11\n            }\n          }\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          titleColor: '#000',\n          bodyColor: '#666',\n          borderColor: 'rgba(0, 0, 0, 0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      interaction: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      }\n    };\n    // Current metric values\n    this.currentTemp = 24;\n    this.currentHumidity = 65;\n    this.currentLight = 650;\n    this.currentPH = 6.2;\n    // Chart data with optimal ranges\n    this.chartData = {\n      labels: [],\n      datasets: [{\n        label: 'Temperature (°C)',\n        data: [],\n        borderColor: '#006d5b',\n        backgroundColor: 'rgba(0, 109, 91, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }, {\n        label: 'Optimal Temperature',\n        data: [],\n        borderColor: '#2ecc71',\n        borderDash: [5, 5],\n        fill: false,\n        tension: 0\n      }, {\n        label: 'Humidity (%)',\n        data: [],\n        borderColor: '#8d90bb',\n        backgroundColor: 'rgba(141, 144, 187, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }, {\n        label: 'Optimal Humidity',\n        data: [],\n        borderColor: '#2ecc71',\n        borderDash: [5, 5],\n        fill: false,\n        tension: 0\n      }, {\n        label: 'Light (lux)',\n        data: [],\n        borderColor: '#ffc107',\n        backgroundColor: 'rgba(255, 193, 7, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }, {\n        label: 'Optimal Light',\n        data: [],\n        borderColor: '#2ecc71',\n        borderDash: [5, 5],\n        fill: false,\n        tension: 0\n      }, {\n        label: 'pH Level',\n        data: [],\n        borderColor: '#6610f2',\n        backgroundColor: 'rgba(102, 16, 242, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }, {\n        label: 'Optimal pH',\n        data: [],\n        borderColor: '#2ecc71',\n        borderDash: [5, 5],\n        fill: false,\n        tension: 0\n      }]\n    };\n  }\n  ngOnInit() {\n    this.loadLogisticsData();\n    this.loadUsageChart();\n    this.loadChartData();\n    // Set up real-time updates\n    this.updateSubscription = interval(5000).subscribe(() => {\n      this.updateCurrentMetrics();\n      this.loadChartData();\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  loadLogisticsData() {\n    this.isLoading = true;\n    this.logisticsService.getNutrientLevels().pipe(takeUntil(this.destroy$)).subscribe({\n      next: nutrients => {\n        this.nutrientLevels = nutrients;\n      },\n      error: error => {\n        console.error('Error loading nutrient levels:', error);\n      }\n    });\n    this.logisticsService.getWaterLevel().pipe(takeUntil(this.destroy$)).subscribe({\n      next: water => {\n        this.waterLevel = water;\n      },\n      error: error => {\n        console.error('Error loading water level:', error);\n      }\n    });\n    this.logisticsService.getSystemStatus().pipe(takeUntil(this.destroy$)).subscribe({\n      next: status => {\n        this.systemStatus = status;\n        this.isAutoMode = status.automationMode === 'auto';\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Error loading system status:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n  loadUsageChart() {\n    this.logisticsService.getUsageHistory().pipe(takeUntil(this.destroy$)).subscribe({\n      next: data => {\n        // Update water usage chart\n        this.waterChartData = {\n          labels: data.dates,\n          datasets: [{\n            label: 'Water Usage (L)',\n            data: data.waterUsage,\n            borderColor: '#006d5b',\n            backgroundColor: 'rgba(0, 109, 91, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }]\n        };\n        // Update nutrient usage chart\n        this.nutrientChartData = {\n          labels: data.dates,\n          datasets: [{\n            label: 'Nutrient Usage (mL)',\n            data: data.nutrientAUsage,\n            borderColor: '#dc3545',\n            backgroundColor: 'rgba(220, 53, 69, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }]\n        };\n      },\n      error: error => {\n        console.error('Error loading usage history:', error);\n      }\n    });\n  }\n  toggleAutomationMode() {\n    const newMode = this.isAutoMode ? 'manual' : 'auto';\n    this.logisticsService.setAutomationMode(newMode).pipe(takeUntil(this.destroy$)).subscribe({\n      next: status => {\n        this.systemStatus = status;\n        this.isAutoMode = (status && status.automationMode?.toLowerCase?.()) === 'auto';\n        console.log(`Automation mode set to ${this.isAutoMode ? 'auto' : 'manual'}`);\n      },\n      error: error => {\n        console.error('Error toggling automation mode:', error);\n        // Reset the toggle if there was an error\n        this.isAutoMode = !this.isAutoMode;\n      }\n    });\n  }\n  activatePump(pumpId) {\n    this.logisticsService.activatePump(pumpId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: status => {\n        this.systemStatus = status;\n      },\n      error: error => {\n        console.error(`Error activating pump ${pumpId}:`, error);\n      }\n    });\n  }\n  refillNutrient(nutrientId) {\n    this.logisticsService.confirmNutrientRefill(nutrientId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: nutrients => {\n        this.nutrientLevels = nutrients;\n      },\n      error: error => {\n        console.error(`Error confirming refill for nutrient ${nutrientId}:`, error);\n      }\n    });\n  }\n  refillWater() {\n    this.logisticsService.confirmWaterRefill().pipe(takeUntil(this.destroy$)).subscribe({\n      next: water => {\n        this.waterLevel = water;\n      },\n      error: error => {\n        console.error('Error confirming water refill:', error);\n      }\n    });\n  }\n  getStatusClass(percentage) {\n    if (percentage <= 20) return 'critical';\n    if (percentage <= 40) return 'warning';\n    return 'normal';\n  }\n  updateCurrentMetrics() {\n    // Simulate real-time updates with small random variations\n    this.currentTemp = Math.round((24 + (Math.random() * 4 - 2)) * 10) / 10;\n    this.currentHumidity = Math.round((65 + (Math.random() * 10 - 5)) * 10) / 10;\n    this.currentLight = Math.round(650 + (Math.random() * 300 - 150));\n    this.currentPH = Math.round((6.2 + (Math.random() * 0.6 - 0.3)) * 100) / 100;\n  }\n  getMetricStatus(value, min, max) {\n    if (value >= min && value <= max) {\n      return 'status-optimal';\n    } else if (value < min - min * 10 / 100 || value > max + max * 10 / 100) {\n      return 'status-critical';\n    } else {\n      return 'status-warning';\n    }\n  }\n  loadChartData() {\n    this.logisticsService.getSensorHistory('defaultSensorId').subscribe({\n      next: data => {\n        const timestamps = data.timestamps || Array.from({\n          length: 12\n        }, (_, i) => {\n          const d = new Date();\n          d.setMinutes(d.getMinutes() - (11 - i) * 5);\n          return d.toLocaleTimeString('en-US', {\n            hour12: false\n          });\n        });\n        // Update chart data with both actual values and optimal ranges\n        this.chartData = {\n          labels: timestamps,\n          datasets: [{\n            label: 'Temperature (°C)',\n            data: data.temperature || Array.from({\n              length: 12\n            }, () => 22 + Math.random() * 4),\n            borderColor: '#006d5b',\n            backgroundColor: 'rgba(0, 109, 91, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }, {\n            label: 'Optimal Temperature',\n            data: Array(12).fill(24),\n            borderColor: '#2ecc71',\n            borderDash: [5, 5],\n            fill: false,\n            tension: 0\n          }, {\n            label: 'Humidity (%)',\n            data: data.humidity || Array.from({\n              length: 12\n            }, () => 60 + Math.random() * 12),\n            borderColor: '#8d90bb',\n            backgroundColor: 'rgba(141, 144, 187, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }, {\n            label: 'Optimal Humidity',\n            data: Array(12).fill(65),\n            borderColor: '#2ecc71',\n            borderDash: [5, 5],\n            fill: false,\n            tension: 0\n          }, {\n            label: 'Light (lux)',\n            data: data.light || Array.from({\n              length: 12\n            }, () => 500 + Math.random() * 300),\n            borderColor: '#ffc107',\n            backgroundColor: 'rgba(255, 193, 7, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }, {\n            label: 'Optimal Light',\n            data: Array(12).fill(650),\n            borderColor: '#2ecc71',\n            borderDash: [5, 5],\n            fill: false,\n            tension: 0\n          }, {\n            label: 'pH Level',\n            data: data.ph || Array.from({\n              length: 12\n            }, () => 5.8 + Math.random() * 0.8),\n            borderColor: '#6610f2',\n            backgroundColor: 'rgba(102, 16, 242, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }, {\n            label: 'Optimal pH',\n            data: Array(12).fill(6.2),\n            borderColor: '#2ecc71',\n            borderDash: [5, 5],\n            fill: false,\n            tension: 0\n          }]\n        };\n      },\n      error: error => {\n        console.error('Error loading sensor history:', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LogisticsComponent_Factory(t) {\n      return new (t || LogisticsComponent)(i0.ɵɵdirectiveInject(i1.LogisticsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LogisticsComponent,\n      selectors: [[\"app-logistics\"]],\n      decls: 8,\n      vars: 2,\n      consts: [[1, \"logistics-container\"], [1, \"section-header\"], [1, \"section-description\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [\"class\", \"logistics-content\", 4, \"ngIf\"], [1, \"loading-container\"], [1, \"loading-spinner\"], [1, \"logistics-content\"], [1, \"metrics-grid\"], [1, \"metric-card\"], [1, \"metric-icon\"], [1, \"metric-content\"], [1, \"current-value\", 3, \"ngClass\"], [1, \"optimal-range\"], [1, \"charts-section\"], [1, \"card\"], [1, \"card-header\"], [1, \"chart-container\"], [3, \"chartData\", \"chartOptions\"], [1, \"nutrient-levels\"], [1, \"nutrient-grid\"], [\"class\", \"nutrient-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"water-level\"], [1, \"water-details\", 3, \"ngClass\"], [1, \"btn-secondary\", 3, \"click\"], [1, \"nutrient-item\", 3, \"ngClass\"], [1, \"nutrient-icon\"], [1, \"nutrient-details\"]],\n      template: function LogisticsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"h1\");\n          i0.ɵɵtext(3, \"Logistics Panel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 2);\n          i0.ɵɵtext(5, \"Monitor and control your system's water, nutrients, and equipment status.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(6, LogisticsComponent_div_6_Template, 4, 0, \"div\", 3)(7, LogisticsComponent_div_7_Template, 66, 13, \"div\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.ChartComponent],\n      styles: [\".logistics-container[_ngcontent-%COMP%] {\\n    padding: 20px;\\n    max-width: 1200px;\\n    margin: 0 auto;\\n  }\\n  \\n  .section-header[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .section-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n    color: #006d5b;\\n    font-size: 24px;\\n  }\\n  \\n  .section-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    color: #666;\\n    font-size: 16px;\\n  }\\n  \\n  .loading-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    padding: 40px 0;\\n  }\\n  \\n  .loading-spinner[_ngcontent-%COMP%] {\\n    border: 4px solid #f3f3f3;\\n    border-top: 4px solid #006d5b;\\n    border-radius: 50%;\\n    width: 40px;\\n    height: 40px;\\n    animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n    margin-bottom: 16px;\\n  }\\n  \\n  @keyframes _ngcontent-%COMP%_spin {\\n    0% { transform: rotate(0deg); }\\n    100% { transform: rotate(360deg); }\\n  }\\n  \\n  .card[_ngcontent-%COMP%] {\\n    background-color: #ffffff;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n    margin-bottom: 20px;\\n    padding: 20px;\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .automation-toggle[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n  }\\n  \\n  .toggle-label[_ngcontent-%COMP%] {\\n    margin-right: 10px;\\n    font-size: 14px;\\n  }\\n  \\n  .switch[_ngcontent-%COMP%] {\\n    position: relative;\\n    display: inline-block;\\n    width: 34px;\\n    height: 20px;\\n  }\\n  \\n  .switch[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    opacity: 0;\\n    width: 0;\\n    height: 0;\\n  }\\n  \\n  .slider[_ngcontent-%COMP%] {\\n    position: absolute;\\n    cursor: pointer;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #ccc;\\n    transition: 0.4s;\\n    border-radius: 20px;\\n  }\\n  \\n  .slider[_ngcontent-%COMP%]:before {\\n    position: absolute;\\n    content: \\\"\\\";\\n    height: 14px;\\n    width: 14px;\\n    left: 3px;\\n    bottom: 3px;\\n    background-color: white;\\n    transition: 0.4s;\\n    border-radius: 50%;\\n  }\\n  \\n  input[_ngcontent-%COMP%]:checked    + .slider[_ngcontent-%COMP%] {\\n    background-color: #006d5b;\\n  }\\n  \\n  input[_ngcontent-%COMP%]:checked    + .slider[_ngcontent-%COMP%]:before {\\n    transform: translateX(14px);\\n  }\\n  \\n  .status-grid[_ngcontent-%COMP%], .nutrient-grid[_ngcontent-%COMP%] {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\\n    gap: 20px;\\n  }\\n  \\n  .status-item[_ngcontent-%COMP%], .nutrient-item[_ngcontent-%COMP%] {\\n    text-align: center;\\n    padding: 15px;\\n    border: 1px solid #ddd;\\n    border-radius: 8px;\\n  }\\n  \\n  .status-item.critical[_ngcontent-%COMP%], .nutrient-item.critical[_ngcontent-%COMP%] {\\n    border-left: 5px solid #f44336;\\n  }\\n  \\n  .status-item.warning[_ngcontent-%COMP%], .nutrient-item.warning[_ngcontent-%COMP%] {\\n    border-left: 5px solid #ffc107;\\n  }\\n  \\n  .status-item.normal[_ngcontent-%COMP%], .nutrient-item.normal[_ngcontent-%COMP%] {\\n    border-left: 5px solid #4caf50;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%], .btn-secondary[_ngcontent-%COMP%] {\\n    padding: 8px 12px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%] {\\n    background-color: #006d5b;\\n    color: white;\\n  }\\n  \\n  .btn-secondary[_ngcontent-%COMP%] {\\n    background-color: #4caf50;\\n    color: white;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%]:hover {\\n    background-color: #004d40;\\n  }\\n  \\n  .btn-secondary[_ngcontent-%COMP%]:hover {\\n    background-color: #388e3c;\\n  }\\n  \\n  .chart-container[_ngcontent-%COMP%] {\\n    height: 300px;\\n  }\\n\\n  .metrics-grid[_ngcontent-%COMP%] {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\\n    gap: 1rem;\\n    margin-bottom: 2rem;\\n  }\\n  \\n  .metric-card[_ngcontent-%COMP%] {\\n    background: white;\\n    border-radius: 12px;\\n    padding: 1.5rem;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    display: flex;\\n    align-items: flex-start;\\n    gap: 1rem;\\n    transition: transform 0.2s ease;\\n  }\\n  \\n  .metric-card[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-2px);\\n  }\\n  \\n  .metric-icon[_ngcontent-%COMP%] {\\n    font-size: 2rem;\\n    line-height: 1;\\n  }\\n  \\n  .metric-content[_ngcontent-%COMP%] {\\n    flex: 1;\\n  }\\n  \\n  .metric-content[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    margin: 0 0 0.5rem 0;\\n    font-size: 1rem;\\n    color: #666;\\n  }\\n  \\n  .current-value[_ngcontent-%COMP%] {\\n    font-size: 1.75rem;\\n    font-weight: bold;\\n    margin-bottom: 0.5rem;\\n  }\\n  \\n  .optimal-range[_ngcontent-%COMP%] {\\n    font-size: 0.875rem;\\n    color: #666;\\n    padding: 0.25rem 0.5rem;\\n    background: #f5f5f5;\\n    border-radius: 4px;\\n    display: inline-block;\\n  }\\n  \\n  \\n\\n  .status-optimal[_ngcontent-%COMP%] {\\n    color: #2ecc71;\\n  }\\n  \\n  .status-warning[_ngcontent-%COMP%] {\\n    color: #f1c40f;\\n  }\\n  \\n  .status-critical[_ngcontent-%COMP%] {\\n    color: #e74c3c;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["Subject","takeUntil","interval","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LogisticsComponent_div_7_div_55_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r5","nutrient_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","refillNutrient","id","ɵɵproperty","ctx_r2","getStatusClass","percentage","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","ɵɵtemplate","LogisticsComponent_div_7_div_55_Template","LogisticsComponent_div_7_Template_button_click_64_listener","_r7","ctx_r6","refillWater","ctx_r1","getMetricStatus","currentTemp","currentHumidity","currentLight","currentPH","chartData","chartOptions","nutrientLevels","waterLevel","LogisticsComponent","constructor","logisticsService","destroy$","systemStatus","connectionStatus","powerStatus","automationMode","pumps","lastUpdated","Date","status","message","level","unit","current","capacity","isLoading","isAutoMode","waterChartData","labels","datasets","label","data","borderColor","backgroundColor","tension","fill","borderWidth","nutrientChartData","responsive","maintainAspectRatio","scales","x","grid","color","ticks","font","size","y","beginAtZero","plugins","legend","position","align","boxWidth","padding","tooltip","mode","intersect","titleColor","bodyColor","interaction","axis","borderDash","ngOnInit","loadLogisticsData","loadUsageChart","loadChartData","updateSubscription","subscribe","updateCurrentMetrics","ngOnDestroy","next","complete","getNutrientLevels","pipe","nutrients","error","console","getWaterLevel","water","getSystemStatus","getUsageHistory","dates","waterUsage","nutrientAUsage","toggleAutomationMode","newMode","setAutomationMode","toLowerCase","log","activatePump","pumpId","nutrientId","confirmNutrientRefill","confirmWaterRefill","Math","round","random","value","min","max","getSensorHistory","timestamps","Array","from","length","_","i","d","setMinutes","getMinutes","toLocaleTimeString","hour12","temperature","humidity","light","ph","ɵɵdirectiveInject","i1","LogisticsService","selectors","decls","vars","consts","template","LogisticsComponent_Template","rf","ctx","LogisticsComponent_div_6_Template","LogisticsComponent_div_7_Template"],"sources":["/home/injinia/eden-link/src/app/features/logistics/logistics.component.ts","/home/injinia/eden-link/src/app/features/logistics/logistics.component.html"],"sourcesContent":["// src/app/features/logistics/logistics.component.ts\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { LogisticsService } from '../../core/services/logistics.service';\nimport { SystemStatus, NutrientLevel, WaterLevel, UsageHistory, PumpStatus } from '../../core/models/system-status.model';\nimport { ChartData, ChartOptions } from 'chart.js';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { interval } from 'rxjs';\n\ninterface SensorHistory {\n  timestamps?: string[];\n  temperature?: number[];\n  humidity?: number[];\n  light?: number[];\n  ph?: number[];\n}\n\n@Component({\n  selector: 'app-logistics',\n  templateUrl: './logistics.component.html',\n  styleUrls: ['./logistics.component.css']\n})\nexport class LogisticsComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private updateSubscription?: Subscription;\n  \n  systemStatus: SystemStatus = {\n    connectionStatus: 'disconnected',\n    powerStatus: 'off',\n    automationMode: 'manual',\n    pumps: [] as PumpStatus[],\n    lastUpdated: new Date(),\n    status: 'operational',\n    message: 'System initialized'\n  };\n\n  nutrientLevels: NutrientLevel[] = [{\n    id: 'nutrient-a',\n    name: 'Nutrient A',\n    level: 0,\n    percentage: 0,\n    unit: 'ppm',\n    status: 'normal',\n    lastUpdated: new Date()\n  }];\n\n  waterLevel: WaterLevel = {\n    current: 0,\n    capacity: 100,\n    percentage: 0,\n    status: 'normal',\n    lastUpdated: new Date()\n  };\n\n  isLoading = true;\n  isAutoMode = true;\n  \n  // Updated chart properties\n  waterChartData: any = {\n    labels: [],\n    datasets: [{\n      label: 'Water Usage (L)',\n      data: [],\n      borderColor: '#006d5b',\n      backgroundColor: 'rgba(0, 109, 91, 0.1)',\n      tension: 0.4,\n      fill: true,\n      borderWidth: 2\n    }]\n  };\n\n  nutrientChartData: any = {\n    labels: [],\n    datasets: [{\n      label: 'Nutrient Usage (mL)',\n      data: [],\n      borderColor: '#dc3545',\n      backgroundColor: 'rgba(220, 53, 69, 0.1)',\n      tension: 0.4,\n      fill: true,\n      borderWidth: 2\n    }]\n  };\n\n  chartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n          borderColor: 'rgba(0, 0, 0, 0.3)'\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 11\n          }\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n          borderColor: 'rgba(0, 0, 0, 0.3)'\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 11\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        align: 'center',\n        labels: {\n          boxWidth: 15,\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        titleColor: '#000',\n        bodyColor: '#666',\n        borderColor: 'rgba(0, 0, 0, 0.1)',\n        borderWidth: 1,\n        padding: 10\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  };\n  \n  // Current metric values\n  currentTemp: number = 24;\n  currentHumidity: number = 65;\n  currentLight: number = 650;\n  currentPH: number = 6.2;\n\n  // Chart data with optimal ranges\n  chartData: any = {\n    labels: [],\n    datasets: [\n      {\n        label: 'Temperature (°C)',\n        data: [],\n        borderColor: '#006d5b',\n        backgroundColor: 'rgba(0, 109, 91, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      },\n      {\n        label: 'Optimal Temperature',\n        data: [],\n        borderColor: '#2ecc71',\n        borderDash: [5, 5],\n        fill: false,\n        tension: 0\n      },\n      {\n        label: 'Humidity (%)',\n        data: [],\n        borderColor: '#8d90bb',\n        backgroundColor: 'rgba(141, 144, 187, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      },\n      {\n        label: 'Optimal Humidity',\n        data: [],\n        borderColor: '#2ecc71',\n        borderDash: [5, 5],\n        fill: false,\n        tension: 0\n      },\n      {\n        label: 'Light (lux)',\n        data: [],\n        borderColor: '#ffc107',\n        backgroundColor: 'rgba(255, 193, 7, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      },\n      {\n        label: 'Optimal Light',\n        data: [],\n        borderColor: '#2ecc71',\n        borderDash: [5, 5],\n        fill: false,\n        tension: 0\n      },\n      {\n        label: 'pH Level',\n        data: [],\n        borderColor: '#6610f2',\n        backgroundColor: 'rgba(102, 16, 242, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      },\n      {\n        label: 'Optimal pH',\n        data: [],\n        borderColor: '#2ecc71',\n        borderDash: [5, 5],\n        fill: false,\n        tension: 0\n      }\n    ]\n  };\n\n  constructor(private logisticsService: LogisticsService) {}\n\n  ngOnInit(): void {\n    this.loadLogisticsData();\n    this.loadUsageChart();\n    this.loadChartData();\n    \n    // Set up real-time updates\n    this.updateSubscription = interval(5000).subscribe(() => {\n      this.updateCurrentMetrics();\n      this.loadChartData();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadLogisticsData(): void {\n    this.isLoading = true;\n    \n    this.logisticsService.getNutrientLevels().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (nutrients) => {\n        this.nutrientLevels = nutrients;\n      },\n      error: (error) => {\n        console.error('Error loading nutrient levels:', error);\n      }\n    });\n    \n    this.logisticsService.getWaterLevel().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (water) => {\n        this.waterLevel = water;\n      },\n      error: (error) => {\n        console.error('Error loading water level:', error);\n      }\n    });\n    \n    this.logisticsService.getSystemStatus().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (status) => {\n        this.systemStatus = status;\n        this.isAutoMode = status.automationMode === 'auto';\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Error loading system status:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n\n  loadUsageChart(): void {\n    this.logisticsService.getUsageHistory().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (data) => {\n        // Update water usage chart\n        this.waterChartData = {\n          labels: data.dates,\n          datasets: [{\n            label: 'Water Usage (L)',\n            data: data.waterUsage,\n            borderColor: '#006d5b',\n            backgroundColor: 'rgba(0, 109, 91, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }]\n        };\n\n        // Update nutrient usage chart\n        this.nutrientChartData = {\n          labels: data.dates,\n          datasets: [{\n            label: 'Nutrient Usage (mL)',\n            data: data.nutrientAUsage,\n            borderColor: '#dc3545',\n            backgroundColor: 'rgba(220, 53, 69, 0.1)',\n            tension: 0.4,\n            fill: true,\n            borderWidth: 2\n          }]\n        };\n      },\n      error: (error) => {\n        console.error('Error loading usage history:', error);\n      }\n    });\n  }\n\n  toggleAutomationMode(): void {\n    const newMode = this.isAutoMode ? 'manual' : 'auto';\n    \n    this.logisticsService.setAutomationMode(newMode).pipe(takeUntil(this.destroy$)).subscribe({\n      next: (status) => {\n        this.systemStatus = status;\n        this.isAutoMode = (status && status.automationMode?.toLowerCase?.()) === 'auto';\n        console.log(`Automation mode set to ${this.isAutoMode ? 'auto' : 'manual'}`);\n      },\n      error: (error) => {\n        console.error('Error toggling automation mode:', error);\n        // Reset the toggle if there was an error\n        this.isAutoMode = !this.isAutoMode;\n      }\n    });\n  }\n\n  activatePump(pumpId: string): void {\n    this.logisticsService.activatePump(pumpId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: (status) => {\n        this.systemStatus = status;\n      },\n      error: (error) => {\n        console.error(`Error activating pump ${pumpId}:`, error);\n      }\n    });\n  }\n\n  refillNutrient(nutrientId: string): void {\n    this.logisticsService.confirmNutrientRefill(nutrientId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: (nutrients) => {\n        this.nutrientLevels = nutrients;\n      },\n      error: (error) => {\n        console.error(`Error confirming refill for nutrient ${nutrientId}:`, error);\n      }\n    });\n  }\n\n  refillWater(): void {\n    this.logisticsService.confirmWaterRefill().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (water) => {\n        this.waterLevel = water;\n      },\n      error: (error) => {\n        console.error('Error confirming water refill:', error);\n      }\n    });\n  }\n\n  getStatusClass(percentage: number): string {\n    if (percentage <= 20) return 'critical';\n    if (percentage <= 40) return 'warning';\n    return 'normal';\n  }\n\n  updateCurrentMetrics(): void {\n    // Simulate real-time updates with small random variations\n    this.currentTemp = Math.round((24 + (Math.random() * 4 - 2)) * 10) / 10;\n    this.currentHumidity = Math.round((65 + (Math.random() * 10 - 5)) * 10) / 10;\n    this.currentLight = Math.round(650 + (Math.random() * 300 - 150));\n    this.currentPH = Math.round((6.2 + (Math.random() * 0.6 - 0.3)) * 100) / 100;\n  }\n\n  getMetricStatus(value: number, min: number, max: number): string {\n    if (value >= min && value <= max) {\n      return 'status-optimal';\n    } else if (value < min - ((min * 10) / 100) || value > max + ((max * 10) / 100)) {\n      return 'status-critical';\n    } else {\n      return 'status-warning';\n    }\n  }\n\n  loadChartData(): void {\n    this.logisticsService.getSensorHistory('defaultSensorId').subscribe({\n      next: (data: SensorHistory) => {\n        const timestamps = data.timestamps || Array.from({ length: 12 }, (_, i) => {\n          const d = new Date();\n          d.setMinutes(d.getMinutes() - (11 - i) * 5);\n          return d.toLocaleTimeString('en-US', { hour12: false });\n        });\n\n        // Update chart data with both actual values and optimal ranges\n        this.chartData = {\n          labels: timestamps,\n          datasets: [\n            {\n              label: 'Temperature (°C)',\n              data: data.temperature || Array.from({ length: 12 }, () => 22 + Math.random() * 4),\n              borderColor: '#006d5b',\n              backgroundColor: 'rgba(0, 109, 91, 0.1)',\n              tension: 0.4,\n              fill: true,\n              borderWidth: 2\n            },\n            {\n              label: 'Optimal Temperature',\n              data: Array(12).fill(24), // Optimal temperature line\n              borderColor: '#2ecc71',\n              borderDash: [5, 5],\n              fill: false,\n              tension: 0\n            },\n            {\n              label: 'Humidity (%)',\n              data: data.humidity || Array.from({ length: 12 }, () => 60 + Math.random() * 12),\n              borderColor: '#8d90bb',\n              backgroundColor: 'rgba(141, 144, 187, 0.1)',\n              tension: 0.4,\n              fill: true,\n              borderWidth: 2\n            },\n            {\n              label: 'Optimal Humidity',\n              data: Array(12).fill(65), // Optimal humidity line\n              borderColor: '#2ecc71',\n              borderDash: [5, 5],\n              fill: false,\n              tension: 0\n            },\n            {\n              label: 'Light (lux)',\n              data: data.light || Array.from({ length: 12 }, () => 500 + Math.random() * 300),\n              borderColor: '#ffc107',\n              backgroundColor: 'rgba(255, 193, 7, 0.1)',\n              tension: 0.4,\n              fill: true,\n              borderWidth: 2\n            },\n            {\n              label: 'Optimal Light',\n              data: Array(12).fill(650), // Optimal light line\n              borderColor: '#2ecc71',\n              borderDash: [5, 5],\n              fill: false,\n              tension: 0\n            },\n            {\n              label: 'pH Level',\n              data: data.ph || Array.from({ length: 12 }, () => 5.8 + Math.random() * 0.8),\n              borderColor: '#6610f2',\n              backgroundColor: 'rgba(102, 16, 242, 0.1)',\n              tension: 0.4,\n              fill: true,\n              borderWidth: 2\n            },\n            {\n              label: 'Optimal pH',\n              data: Array(12).fill(6.2), // Optimal pH line\n              borderColor: '#2ecc71',\n              borderDash: [5, 5],\n              fill: false,\n              tension: 0\n            }\n          ]\n        };\n      },\n      error: (error: Error) => {\n        console.error('Error loading sensor history:', error);\n      }\n    });\n  }\n}","<div class=\"logistics-container\">\n    <section class=\"section-header\">\n      <h1>Logistics Panel</h1>\n      <p class=\"section-description\">Monitor and control your system's water, nutrients, and equipment status.</p>\n    </section>\n  \n    <div class=\"loading-container\" *ngIf=\"isLoading\">\n      <div class=\"loading-spinner\"></div>\n      <p>Loading logistics data...</p>\n    </div>\n  \n    <div class=\"logistics-content\" *ngIf=\"!isLoading\">\n      <!-- Real-time Metrics Section -->\n      <section class=\"metrics-grid\">\n        <!-- Temperature Card -->\n        <div class=\"metric-card\">\n          <div class=\"metric-icon\">🌡️</div>\n          <div class=\"metric-content\">\n            <h3>Temperature</h3>\n            <div class=\"current-value\" [ngClass]=\"getMetricStatus(currentTemp, 22, 26)\">\n              {{ currentTemp }}°C\n            </div>\n            <div class=\"optimal-range\">\n              Optimal: 22-26°C\n            </div>\n          </div>\n        </div>\n\n        <!-- Humidity Card -->\n        <div class=\"metric-card\">\n          <div class=\"metric-icon\">💧</div>\n          <div class=\"metric-content\">\n            <h3>Humidity</h3>\n            <div class=\"current-value\" [ngClass]=\"getMetricStatus(currentHumidity, 60, 70)\">\n              {{ currentHumidity }}%\n            </div>\n            <div class=\"optimal-range\">\n              Optimal: 60-70%\n            </div>\n          </div>\n        </div>\n\n        <!-- Light Card -->\n        <div class=\"metric-card\">\n          <div class=\"metric-icon\">☀️</div>\n          <div class=\"metric-content\">\n            <h3>Light</h3>\n            <div class=\"current-value\" [ngClass]=\"getMetricStatus(currentLight, 500, 800)\">\n              {{ currentLight }} lux\n            </div>\n            <div class=\"optimal-range\">\n              Optimal: 500-800 lux\n            </div>\n          </div>\n        </div>\n\n        <!-- pH Card -->\n        <div class=\"metric-card\">\n          <div class=\"metric-icon\">🧪</div>\n          <div class=\"metric-content\">\n            <h3>pH Level</h3>\n            <div class=\"current-value\" [ngClass]=\"getMetricStatus(currentPH, 5.8, 6.5)\">\n              {{ currentPH }}\n            </div>\n            <div class=\"optimal-range\">\n              Optimal: 5.8-6.5\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <!-- Charts Section -->\n      <section class=\"charts-section\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h2>Environmental Metrics</h2>\n          </div>\n          <div class=\"chart-container\">\n            <app-chart \n              [chartData]=\"chartData\"\n              [chartOptions]=\"chartOptions\">\n            </app-chart>\n          </div>\n        </div>\n      </section>\n\n      <!-- Nutrient Levels Section -->\n      <section class=\"nutrient-levels\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h2>Nutrient Levels</h2>\n          </div>\n          <div class=\"nutrient-grid\">\n            <div class=\"nutrient-item\" *ngFor=\"let nutrient of nutrientLevels\" [ngClass]=\"getStatusClass(nutrient.percentage)\">\n              <div class=\"nutrient-icon\">🧪</div>\n              <div class=\"nutrient-details\">\n                <h3>{{ nutrient.name }}</h3>\n                <p>{{ nutrient.percentage }}%</p>\n                <button class=\"btn-secondary\" (click)=\"refillNutrient(nutrient.id)\">Refill</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n  \n      <!-- Water Level Section -->\n      <section class=\"water-level\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h2>Water Level</h2>\n          </div>\n          <div class=\"water-details\" [ngClass]=\"getStatusClass(waterLevel.percentage)\">\n            <h3>{{ waterLevel.percentage }}%</h3>\n            <button class=\"btn-secondary\" (click)=\"refillWater()\">Refill</button>\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}