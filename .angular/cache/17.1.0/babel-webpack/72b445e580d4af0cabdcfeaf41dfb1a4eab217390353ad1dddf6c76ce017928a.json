{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output, EventEmitter } from '@angular/core';\nlet HeaderComponent = class HeaderComponent {\n  constructor() {\n    this.toggleSidebar = new EventEmitter();\n    this.userProfile = {\n      name: 'John Farmer',\n      avatar: 'assets/images/user-avatar.png'\n    };\n    this.notifications = [{\n      id: 1,\n      message: 'Humidity alert: Levels below threshold',\n      read: false\n    }, {\n      id: 2,\n      message: 'Crop stage approaching: Flowering',\n      read: false\n    }, {\n      id: 3,\n      message: 'AI suggestion available for tomatoes',\n      read: true\n    }];\n    this.showNotifications = false;\n  }\n  toggleNotificationsPanel() {\n    this.showNotifications = !this.showNotifications;\n  }\n  onToggleSidebar() {\n    this.toggleSidebar.emit();\n  }\n  markAsRead(id) {\n    const notification = this.notifications.find(n => n.id === id);\n    if (notification) {\n      notification.read = true;\n    }\n  }\n  get unreadCount() {\n    return this.notifications.filter(n => !n.read).length;\n  }\n};\n__decorate([Output()], HeaderComponent.prototype, \"toggleSidebar\", void 0);\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"names":["Component","Output","EventEmitter","HeaderComponent","constructor","toggleSidebar","userProfile","name","avatar","notifications","id","message","read","showNotifications","toggleNotificationsPanel","onToggleSidebar","emit","markAsRead","notification","find","n","unreadCount","filter","length","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/injinia/eden-link/src/app/shared/components/header/header.component.ts"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  @Output() toggleSidebar = new EventEmitter<void>();\n  \n  userProfile = {\n    name: 'John Farmer',\n    avatar: 'assets/images/user-avatar.png'\n  };\n  \n  notifications = [\n    { id: 1, message: 'Humidity alert: Levels below threshold', read: false },\n    { id: 2, message: 'Crop stage approaching: Flowering', read: false },\n    { id: 3, message: 'AI suggestion available for tomatoes', read: true }\n  ];\n  \n  showNotifications = false;\n  \n  toggleNotificationsPanel() {\n    this.showNotifications = !this.showNotifications;\n  }\n  \n  onToggleSidebar() {\n    this.toggleSidebar.emit();\n  }\n  \n  markAsRead(id: number) {\n    const notification = this.notifications.find(n => n.id === id);\n    if (notification) {\n      notification.read = true;\n    }\n  }\n  \n  get unreadCount() {\n    return this.notifications.filter(n => !n.read).length;\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAOxD,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAArBC,YAAA;IACK,KAAAC,aAAa,GAAG,IAAIH,YAAY,EAAQ;IAElD,KAAAI,WAAW,GAAG;MACZC,IAAI,EAAE,aAAa;MACnBC,MAAM,EAAE;KACT;IAED,KAAAC,aAAa,GAAG,CACd;MAAEC,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,wCAAwC;MAAEC,IAAI,EAAE;IAAK,CAAE,EACzE;MAAEF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,mCAAmC;MAAEC,IAAI,EAAE;IAAK,CAAE,EACpE;MAAEF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,sCAAsC;MAAEC,IAAI,EAAE;IAAI,CAAE,CACvE;IAED,KAAAC,iBAAiB,GAAG,KAAK;EAoB3B;EAlBEC,wBAAwBA,CAAA;IACtB,IAAI,CAACD,iBAAiB,GAAG,CAAC,IAAI,CAACA,iBAAiB;EAClD;EAEAE,eAAeA,CAAA;IACb,IAAI,CAACV,aAAa,CAACW,IAAI,EAAE;EAC3B;EAEAC,UAAUA,CAACP,EAAU;IACnB,MAAMQ,YAAY,GAAG,IAAI,CAACT,aAAa,CAACU,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKA,EAAE,CAAC;IAC9D,IAAIQ,YAAY,EAAE;MAChBA,YAAY,CAACN,IAAI,GAAG,IAAI;;EAE5B;EAEA,IAAIS,WAAWA,CAAA;IACb,OAAO,IAAI,CAACZ,aAAa,CAACa,MAAM,CAACF,CAAC,IAAI,CAACA,CAAC,CAACR,IAAI,CAAC,CAACW,MAAM;EACvD;CACD;AAjCWC,UAAA,EAATvB,MAAM,EAAE,C,qDAA0C;AADxCE,eAAe,GAAAqB,UAAA,EAL3BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWxB,eAAe,CAkC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}