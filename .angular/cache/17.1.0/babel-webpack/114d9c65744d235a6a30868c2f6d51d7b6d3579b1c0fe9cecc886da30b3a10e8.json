{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport class ChartComponent {\n  constructor() {\n    this.data = [];\n    this.labels = [];\n    this.label = '';\n    this.type = 'line';\n    this.chartData = {\n      datasets: [],\n      labels: []\n    };\n    this.chartOptions = {\n      responsive: true,\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      },\n      plugins: {\n        legend: {\n          display: true\n        }\n      }\n    };\n  }\n  ngOnInit() {\n    this.updateChartData();\n  }\n  updateChartData() {\n    this.chartData = {\n      datasets: [{\n        data: this.data,\n        label: this.label,\n        backgroundColor: 'rgba(0, 123, 255, 0.2)',\n        borderColor: 'rgba(0, 123, 255, 1)',\n        tension: 0.4\n      }],\n      labels: this.labels\n    };\n  }\n  static {\n    this.ɵfac = function ChartComponent_Factory(t) {\n      return new (t || ChartComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChartComponent,\n      selectors: [[\"app-chart\"]],\n      inputs: {\n        data: \"data\",\n        labels: \"labels\",\n        label: \"label\",\n        type: \"type\"\n      },\n      decls: 2,\n      vars: 3,\n      consts: [[1, \"chart-container\"], [\"baseChart\", \"\", 3, \"type\", \"data\", \"options\"]],\n      template: function ChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"canvas\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"type\", ctx.type)(\"data\", ctx.chartData)(\"options\", ctx.chartOptions);\n        }\n      },\n      dependencies: [i1.BaseChartDirective],\n      styles: [\".chart-wrapper[_ngcontent-%COMP%] {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\\n.chart-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  height: 300px;\\n  width: 100%;\\n  margin: 1rem 0;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  width: 100% !important;\\n  height: 100% !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY2hhcnQvY2hhcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0VBQ2Q7O0FBRUY7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFdBQVc7RUFDWCxjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLHVCQUF1QjtBQUN6QiIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFydC13cmFwcGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cblxuLmNoYXJ0LWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMXJlbSAwO1xufVxuXG5jYW52YXMge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["ChartComponent","constructor","data","labels","label","type","chartData","datasets","chartOptions","responsive","scales","y","beginAtZero","plugins","legend","display","ngOnInit","updateChartData","backgroundColor","borderColor","tension","selectors","inputs","decls","vars","consts","template","ChartComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["/home/injinia/eden-link/src/app/shared/components/chart/chart.component.ts","/home/injinia/eden-link/src/app/shared/components/chart/chart.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ChartConfiguration, ChartType } from 'chart.js';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit {\n  @Input() data: number[] = [];\n  @Input() labels: string[] = [];\n  @Input() label: string = '';\n  @Input() type: ChartType = 'line';\n\n  public chartData: ChartConfiguration['data'] = {\n    datasets: [],\n    labels: []\n  };\n\n  public chartOptions: ChartConfiguration['options'] = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    },\n    plugins: {\n      legend: {\n        display: true\n      }\n    }\n  };\n\n  ngOnInit() {\n    this.updateChartData();\n  }\n\n  private updateChartData() {\n    this.chartData = {\n      datasets: [{\n        data: this.data,\n        label: this.label,\n        backgroundColor: 'rgba(0, 123, 255, 0.2)',\n        borderColor: 'rgba(0, 123, 255, 1)',\n        tension: 0.4\n      }],\n      labels: this.labels\n    };\n  }\n}","<!-- Chart container with responsive sizing -->\n<div class=\"chart-container\">\n  <canvas baseChart\n    [type]=\"type\"\n    [data]=\"chartData\"\n    [options]=\"chartOptions\">\n  </canvas>\n</div>"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAL3BC,YAAA;IAMW,KAAAC,IAAI,GAAa,EAAE;IACnB,KAAAC,MAAM,GAAa,EAAE;IACrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,IAAI,GAAc,MAAM;IAE1B,KAAAC,SAAS,GAA+B;MAC7CC,QAAQ,EAAE,EAAE;MACZJ,MAAM,EAAE;KACT;IAEM,KAAAK,YAAY,GAAkC;MACnDC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,WAAW,EAAE;;OAEhB;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,OAAO,EAAE;;;KAGd;;EAEDC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEQA,eAAeA,CAAA;IACrB,IAAI,CAACX,SAAS,GAAG;MACfC,QAAQ,EAAE,CAAC;QACTL,IAAI,EAAE,IAAI,CAACA,IAAI;QACfE,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBc,eAAe,EAAE,wBAAwB;QACzCC,WAAW,EAAE,sBAAsB;QACnCC,OAAO,EAAE;OACV,CAAC;MACFjB,MAAM,EAAE,IAAI,CAACA;KACd;EACH;;;uBAxCWH,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAqB,SAAA;MAAAC,MAAA;QAAApB,IAAA;QAAAC,MAAA;QAAAC,KAAA;QAAAC,IAAA;MAAA;MAAAkB,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCP3BE,EAAA,CAAAC,cAAA,aAA6B;UAC3BD,EAAA,CAAAE,SAAA,gBAIS;UACXF,EAAA,CAAAG,YAAA,EAAM;;;UAJFH,EAAA,CAAAI,SAAA,EAAa;UAAbJ,EAAA,CAAAK,UAAA,SAAAN,GAAA,CAAAxB,IAAA,CAAa,SAAAwB,GAAA,CAAAvB,SAAA,aAAAuB,GAAA,CAAArB,YAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}