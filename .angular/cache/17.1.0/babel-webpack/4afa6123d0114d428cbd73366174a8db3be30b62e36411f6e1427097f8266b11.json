{"ast":null,"code":"import { Chart } from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/sensor.service\";\nimport * as i2 from \"../../core/services/ai.service\";\nimport * as i3 from \"../../services/sensor-data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../shared/components/sensor-card/sensor-card.component\";\nconst _c0 = [\"chartCanvas\"];\nfunction DashboardComponent_app_sensor_card_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-sensor-card\", 26);\n  }\n  if (rf & 2) {\n    const sensor_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"sensor\", sensor_r4);\n  }\n}\nconst _c1 = (a0, a1) => ({\n  \"active\": a0,\n  \"completed\": a1\n});\nfunction DashboardComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\", 28);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 29);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const stage_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c1, stage_r5.active, stage_r5.completed));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", stage_r5.completed ? \"\\u2713\" : i_r6 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stage_r5.name);\n  }\n}\nfunction DashboardComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 31);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 32);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const sensor_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sensor_r7.name);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"online\", sensor_r7.isOnline);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", sensor_r7.isOnline ? \"Online\" : \"Offline\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Last Reading: \", i0.ɵɵpipeBind2(7, 5, sensor_r7.lastReading, \"medium\"), \" \");\n  }\n}\nexport class DashboardComponent {\n  constructor(sensorService, aiService, sensorDataService) {\n    this.sensorService = sensorService;\n    this.aiService = aiService;\n    this.sensorDataService = sensorDataService;\n    this.sensors = [];\n    this.systemHealth = {\n      status: 'excellent',\n      message: 'All systems functioning optimally. Consider adjusting CO₂ levels slightly for optimal tomato growth.',\n      cpuUsage: 45,\n      memoryUsage: 60,\n      storageUsage: 55\n    };\n    this.roadmapStages = [{\n      name: 'Germination',\n      completed: true,\n      active: false\n    }, {\n      name: 'Seedling',\n      completed: true,\n      active: false\n    }, {\n      name: 'Vegetation',\n      completed: false,\n      active: true\n    }, {\n      name: 'Flowering',\n      completed: false,\n      active: false\n    }, {\n      name: 'Fruiting',\n      completed: false,\n      active: false\n    }, {\n      name: 'Harvest',\n      completed: false,\n      active: false\n    }];\n  }\n  ngOnInit() {\n    this.loadSensorData();\n    this.loadChartData();\n    this.initChart();\n  }\n  ngOnDestroy() {\n    if (this.dataSubscription) {\n      this.dataSubscription.unsubscribe();\n    }\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  }\n  loadSensorData() {\n    this.sensorService.getECSensors().subscribe(data => {\n      this.sensors = data;\n    }, error => {\n      console.error('Error fetching sensor data:', error);\n      // Fallback to mock data\n      this.loadMockSensorData();\n    });\n  }\n  loadMockSensorData() {\n    this.sensors = [{\n      id: 1,\n      name: 'Temperature',\n      value: '24°C',\n      icon: '🌡️',\n      type: 'Environmental',\n      unit: '°C',\n      status: 'normal',\n      isOnline: true,\n      lastReading: new Date()\n    }, {\n      id: 2,\n      name: 'Humidity',\n      value: '65%',\n      icon: '💧',\n      type: 'Environmental',\n      unit: '%',\n      status: 'normal',\n      isOnline: true,\n      lastReading: new Date()\n    }, {\n      id: 3,\n      name: 'Light',\n      value: '850 lux',\n      icon: '☀️',\n      type: 'Environmental',\n      unit: 'lux',\n      status: 'normal',\n      isOnline: true,\n      lastReading: new Date()\n    }, {\n      id: 4,\n      name: 'EC',\n      value: '1.8 mS/cm',\n      icon: '⚡',\n      type: 'Nutrient',\n      unit: 'mS/cm',\n      status: 'normal',\n      isOnline: false,\n      lastReading: new Date()\n    }, {\n      id: 5,\n      name: 'pH',\n      value: '6.2',\n      icon: '🧪',\n      type: 'Nutrient',\n      unit: '',\n      status: 'normal',\n      isOnline: true,\n      lastReading: new Date()\n    }, {\n      id: 6,\n      name: 'CO₂',\n      value: '450 ppm',\n      icon: '🌫️',\n      type: 'Gas',\n      unit: 'ppm',\n      status: 'normal',\n      isOnline: true,\n      lastReading: new Date()\n    }];\n  }\n  loadChartData() {\n    this.sensorService.getSensorHistory('defaultSensorId').subscribe(data => {\n      this.processChartData(data);\n    }, error => {\n      console.error('Error fetching chart data:', error);\n      // Fallback to mock chart data\n      this.loadMockChartData();\n    });\n  }\n  processChartData(data) {\n    // Process and format real data for chart\n    this.chartData = {\n      labels: data.timestamps,\n      datasets: data.datasets\n    };\n  }\n  loadMockChartData() {\n    const labels = Array.from({\n      length: 24\n    }, (_, i) => `${i}:00`);\n    this.chartData = {\n      labels,\n      datasets: [{\n        label: 'Temperature (°C)',\n        data: [22, 22.5, 23, 23.5, 24, 24.5, 25, 25.5, 26, 26.5, 26, 25.5, 25, 24.5, 24, 23.5, 23, 22.5, 22, 21.5, 21, 21.5, 22, 22],\n        borderColor: '#006d5b',\n        tension: 0.4,\n        fill: false\n      }, {\n        label: 'Humidity (%)',\n        data: [60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 70, 68, 67, 65, 63, 62, 60, 59, 58, 57, 58, 59, 60, 60],\n        borderColor: '#8d90bb',\n        tension: 0.4,\n        fill: false\n      }, {\n        label: 'Light (lux/100)',\n        data: [0, 0, 0, 1, 3, 5, 7, 8, 8.5, 8.5, 8.5, 8.5, 8.5, 8, 7, 5, 3, 1, 0, 0, 0, 0, 0, 0],\n        borderColor: '#ffc107',\n        tension: 0.4,\n        fill: false\n      }]\n    };\n  }\n  startIrrigation() {\n    this.sensorService.startIrrigation().subscribe(() => alert('Irrigation started successfully!'), error => console.error('Error starting irrigation:', error));\n  }\n  exportData() {\n    this.sensorService.exportData().subscribe(data => {\n      const blob = new Blob([data], {\n        type: 'application/json'\n      }); // Set MIME type to JSON\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.setAttribute('hidden', '');\n      a.setAttribute('href', url);\n      a.setAttribute('download', 'eden-link-data-export.json'); // Update file extension to .json\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }, error => console.error('Error exporting data:', error));\n  }\n  initChart() {\n    this.dataSubscription = this.sensorDataService.getSensorData().subscribe(data => {\n      if (!this.chart && this.chartCanvas) {\n        this.createChart(data);\n      } else if (this.chart) {\n        this.updateChart(data);\n      }\n    });\n  }\n  createChart(data) {\n    const ctx = this.chartCanvas.nativeElement.getContext('2d');\n    const config = {\n      type: 'line',\n      data: {\n        labels: data.map(d => this.formatTimestamp(d.timestamp)),\n        datasets: [{\n          label: 'Temperature (°C)',\n          data: data.map(d => d.temperature),\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.3,\n          yAxisID: 'temperature'\n        }, {\n          label: 'Humidity (%)',\n          data: data.map(d => d.humidity),\n          borderColor: 'rgb(54, 162, 235)',\n          tension: 0.3,\n          yAxisID: 'humidity'\n        }, {\n          label: 'Light (lux)',\n          data: data.map(d => d.light),\n          borderColor: 'rgb(255, 205, 86)',\n          tension: 0.3,\n          yAxisID: 'light'\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 0\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Time'\n            }\n          },\n          temperature: {\n            type: 'linear',\n            position: 'left',\n            title: {\n              display: true,\n              text: 'Temperature (°C)'\n            },\n            min: 15,\n            max: 30\n          },\n          humidity: {\n            type: 'linear',\n            position: 'right',\n            title: {\n              display: true,\n              text: 'Humidity (%)'\n            },\n            min: 55,\n            max: 85\n          },\n          light: {\n            type: 'linear',\n            position: 'right',\n            title: {\n              display: true,\n              text: 'Light (lux)'\n            },\n            min: 1500,\n            max: 6500,\n            grid: {\n              drawOnChartArea: false\n            }\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: 'Greenhouse Environmental Conditions',\n            font: {\n              size: 16\n            }\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }\n    };\n    this.chart = new Chart(ctx, config);\n  }\n  updateChart(data) {\n    if (!this.chart) return;\n    this.chart.data.labels = data.map(d => this.formatTimestamp(d.timestamp));\n    this.chart.data.datasets[0].data = data.map(d => d.temperature);\n    this.chart.data.datasets[1].data = data.map(d => d.humidity);\n    this.chart.data.datasets[2].data = data.map(d => d.light);\n    this.chart.update();\n  }\n  formatTimestamp(timestamp) {\n    return new Date(timestamp).toLocaleTimeString();\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.SensorService), i0.ɵɵdirectiveInject(i2.AiService), i0.ɵɵdirectiveInject(i3.SensorDataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      viewQuery: function DashboardComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n        }\n      },\n      decls: 61,\n      vars: 17,\n      consts: [[1, \"dashboard-container\"], [1, \"dashboard-header\"], [1, \"dashboard-title\"], [1, \"dashboard-actions\"], [1, \"btn\", \"btn-outline\", 3, \"click\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"sensors-grid\"], [3, \"sensor\", 4, \"ngFor\", \"ngForOf\"], [1, \"chart-container\"], [\"chartCanvas\", \"\"], [1, \"system-health\", 3, \"ngClass\"], [1, \"system-health-icon\"], [1, \"system-health-content\"], [1, \"system-health-title\"], [1, \"system-health-message\"], [1, \"crop-roadmap\"], [\"class\", \"roadmap-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"system-status\"], [1, \"status-grid\"], [\"class\", \"status-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"status-card\", \"system-health\"], [1, \"health-metrics\"], [1, \"metric\"], [3, \"sensor\"], [1, \"roadmap-step\"], [1, \"step-icon\", 3, \"ngClass\"], [1, \"step-label\"], [1, \"status-card\"], [1, \"status-indicator\"], [1, \"last-reading\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n          i0.ɵɵtext(3, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_5_listener() {\n            return ctx.exportData();\n          });\n          i0.ɵɵtext(6, \"Export Data\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_7_listener() {\n            return ctx.startIrrigation();\n          });\n          i0.ɵɵtext(8, \"Start Irrigation\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"h2\", 8);\n          i0.ɵɵtext(12, \"Sensor Status\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 9);\n          i0.ɵɵtemplate(14, DashboardComponent_app_sensor_card_14_Template, 1, 1, \"app-sensor-card\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 6)(16, \"div\", 7)(17, \"h2\", 8);\n          i0.ɵɵtext(18, \"Real-Time Charts\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 11);\n          i0.ɵɵelement(20, \"canvas\", null, 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 13)(23, \"div\", 14);\n          i0.ɵɵtext(24, \"\\u2713\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 15)(26, \"div\", 16);\n          i0.ɵɵtext(27);\n          i0.ɵɵpipe(28, \"titlecase\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 17);\n          i0.ɵɵtext(30);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(31, \"div\", 6)(32, \"div\", 7)(33, \"h2\", 8);\n          i0.ɵɵtext(34, \"Crop Cycle Roadmap\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 18);\n          i0.ɵɵtemplate(36, DashboardComponent_div_36_Template, 5, 6, \"div\", 19);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(37, \"div\", 20)(38, \"h2\");\n          i0.ɵɵtext(39, \"System Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"div\", 21);\n          i0.ɵɵtemplate(41, DashboardComponent_div_41_Template, 8, 8, \"div\", 22);\n          i0.ɵɵelementStart(42, \"div\", 23)(43, \"h3\");\n          i0.ɵɵtext(44, \"System Health\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"div\", 24)(46, \"div\", 25)(47, \"span\");\n          i0.ɵɵtext(48, \"CPU Usage:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(49, \"span\");\n          i0.ɵɵtext(50);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(51, \"div\", 25)(52, \"span\");\n          i0.ɵɵtext(53, \"Memory Usage:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"span\");\n          i0.ɵɵtext(55);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(56, \"div\", 25)(57, \"span\");\n          i0.ɵɵtext(58, \"Storage:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(59, \"span\");\n          i0.ɵɵtext(60);\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngForOf\", ctx.sensors);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngClass\", \"system-health-\" + ctx.systemHealth.status);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\"System Health: \", i0.ɵɵpipeBind1(28, 15, ctx.systemHealth.status), \"\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.systemHealth.message);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.roadmapStages);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.sensors);\n          i0.ɵɵadvance(8);\n          i0.ɵɵclassProp(\"warning\", ctx.systemHealth.cpuUsage > 80);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.systemHealth.cpuUsage, \"% \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"warning\", ctx.systemHealth.memoryUsage > 80);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.systemHealth.memoryUsage, \"% \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"warning\", ctx.systemHealth.storageUsage > 80);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.systemHealth.storageUsage, \"% \");\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i5.SensorCardComponent, i4.TitleCasePipe, i4.DatePipe],\n      styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n    padding: 20px;\\n  }\\n  \\n  .dashboard-header[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .dashboard-title[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    font-weight: 700;\\n    color: #343a40;\\n  }\\n  \\n  .dashboard-actions[_ngcontent-%COMP%] {\\n    display: flex;\\n    gap: 10px;\\n  }\\n  \\n  .btn[_ngcontent-%COMP%] {\\n    padding: 8px 16px;\\n    border-radius: 6px;\\n    border: none;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: all 0.2s;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%] {\\n    background-color: #008e73;\\n    color: #ffffff;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%]:hover {\\n    background-color: #00594d;\\n  }\\n  \\n  .btn-outline[_ngcontent-%COMP%] {\\n    background-color: transparent;\\n    border: 1px solid #006d5b;\\n    color: #006d5b;\\n  }\\n  \\n  .btn-outline[_ngcontent-%COMP%]:hover {\\n    background-color: #006d5b;\\n    color: #ffffff;\\n  }\\n  \\n  .card[_ngcontent-%COMP%] {\\n    background-color: #ffffff;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 8px rgba(0,0,0,0.05);\\n    padding: 20px;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 15px;\\n  }\\n  \\n  .card-title[_ngcontent-%COMP%] {\\n    font-size: 16px;\\n    font-weight: 600;\\n    color: #343a40;\\n  }\\n  \\n  .sensors-grid[_ngcontent-%COMP%] {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\\n    gap: 15px;\\n  }\\n  \\n  .chart-container[_ngcontent-%COMP%] {\\n    width: 100%;\\n    height: 300px;\\n    position: relative;\\n  }\\n  \\n  .system-health[_ngcontent-%COMP%] {\\n    display: flex;\\n    background-color: rgba(40, 167, 69, 0.1);\\n    border-left: 4px solid #28a745;\\n    padding: 15px;\\n    border-radius: 6px;\\n    margin-top: 20px;\\n  }\\n  \\n  .system-health-warning[_ngcontent-%COMP%] {\\n    background-color: rgba(255, 193, 7, 0.1);\\n    border-left-color: #ffc107;\\n  }\\n  \\n  .system-health-danger[_ngcontent-%COMP%] {\\n    background-color: rgba(220, 53, 69, 0.1);\\n    border-left-color: #dc3545;\\n  }\\n  \\n  .system-health-icon[_ngcontent-%COMP%] {\\n    width: 40px;\\n    height: 40px;\\n    border-radius: 50%;\\n    background-color: #28a745;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    color: #ffffff;\\n    margin-right: 15px;\\n  }\\n  \\n  .system-health-warning[_ngcontent-%COMP%]   .system-health-icon[_ngcontent-%COMP%] {\\n    background-color: #ffc107;\\n    color: #212529;\\n  }\\n  \\n  .system-health-danger[_ngcontent-%COMP%]   .system-health-icon[_ngcontent-%COMP%] {\\n    background-color: #dc3545;\\n  }\\n  \\n  .system-health-content[_ngcontent-%COMP%] {\\n    flex-grow: 1;\\n  }\\n  \\n  .system-health-title[_ngcontent-%COMP%] {\\n    font-weight: 600;\\n    margin-bottom: 5px;\\n    color: #343a40;\\n  }\\n  \\n  .system-health-message[_ngcontent-%COMP%] {\\n    font-size: 14px;\\n    color: #495057;\\n  }\\n  \\n  .crop-roadmap[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-top: 10px;\\n  }\\n  \\n  .roadmap-step[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    position: relative;\\n    flex: 1;\\n  }\\n  \\n  .roadmap-step[_ngcontent-%COMP%]::before {\\n    content: \\\"\\\";\\n    height: 3px;\\n    width: 100%;\\n    background-color: #dee2e6;\\n    position: absolute;\\n    top: 15px;\\n    left: 50%;\\n    z-index: 0;\\n  }\\n  \\n  .roadmap-step[_ngcontent-%COMP%]:first-child::before {\\n    width: 50%;\\n    left: 50%;\\n  }\\n  \\n  .roadmap-step[_ngcontent-%COMP%]:last-child::before {\\n    width: 50%;\\n    left: 0;\\n  }\\n  \\n  .step-icon[_ngcontent-%COMP%] {\\n    width: 30px;\\n    height: 30px;\\n    border-radius: 50%;\\n    background-color: #ffffff;\\n    border: 3px solid #dee2e6;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    z-index: 1;\\n    font-size: 12px;\\n    color: #6c757d;\\n    margin-bottom: 8px;\\n    position: relative;\\n  }\\n  \\n  .step-icon.active[_ngcontent-%COMP%] {\\n    border-color: #006d5b;\\n    background-color: #006d5b;\\n    color: #ffffff;\\n  }\\n  \\n  .step-icon.completed[_ngcontent-%COMP%] {\\n    border-color: #006d5b;\\n    background-color: #006d5b;\\n    color: #ffffff;\\n  }\\n  \\n  .step-label[_ngcontent-%COMP%] {\\n    font-size: 12px;\\n    color: #6c757d;\\n    text-align: center;\\n  }\\n  \\n  @media (max-width: 768px) {\\n    .sensors-grid[_ngcontent-%COMP%] {\\n      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\\n    }\\n    \\n    .crop-roadmap[_ngcontent-%COMP%] {\\n      flex-wrap: wrap;\\n    }\\n    \\n    .roadmap-step[_ngcontent-%COMP%] {\\n      flex: 0 0 33.333%;\\n      margin-bottom: 20px;\\n    }\\n    \\n    .roadmap-step[_ngcontent-%COMP%]::before {\\n      display: none;\\n    }\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["Chart","i0","ɵɵelement","ɵɵproperty","sensor_r4","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpureFunction2","_c1","stage_r5","active","completed","ɵɵtextInterpolate1","i_r6","ɵɵtextInterpolate","name","sensor_r7","ɵɵclassProp","isOnline","ɵɵpipeBind2","lastReading","DashboardComponent","constructor","sensorService","aiService","sensorDataService","sensors","systemHealth","status","message","cpuUsage","memoryUsage","storageUsage","roadmapStages","ngOnInit","loadSensorData","loadChartData","initChart","ngOnDestroy","dataSubscription","unsubscribe","chart","destroy","getECSensors","subscribe","data","error","console","loadMockSensorData","id","value","icon","type","unit","Date","getSensorHistory","processChartData","loadMockChartData","chartData","labels","timestamps","datasets","Array","from","length","_","i","label","borderColor","tension","fill","startIrrigation","alert","exportData","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","setAttribute","body","appendChild","click","removeChild","getSensorData","chartCanvas","createChart","updateChart","ctx","nativeElement","getContext","config","map","d","formatTimestamp","timestamp","temperature","yAxisID","humidity","light","options","responsive","maintainAspectRatio","animation","duration","scales","x","title","display","text","position","min","max","grid","drawOnChartArea","plugins","font","size","legend","update","toLocaleTimeString","ɵɵdirectiveInject","i1","SensorService","i2","AiService","i3","SensorDataService","selectors","viewQuery","DashboardComponent_Query","rf","ɵɵlistener","DashboardComponent_Template_button_click_5_listener","DashboardComponent_Template_button_click_7_listener","ɵɵtemplate","DashboardComponent_app_sensor_card_14_Template","DashboardComponent_div_36_Template","DashboardComponent_div_41_Template","ɵɵpipeBind1"],"sources":["/home/injinia/eden-link/src/app/features/dashboard/dashboard.component.ts","/home/injinia/eden-link/src/app/features/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { SensorService } from '../../core/services/sensor.service';\nimport { AiService } from '../../core/services/ai.service';\nimport { Sensor } from '../../core/models/sensor.model';\nimport { Chart, ChartConfiguration } from 'chart.js/auto';\nimport { SensorDataService, SensorData } from '../../services/sensor-data.service';\nimport { Subscription } from 'rxjs';\n\ninterface SystemHealth {\n  status: 'excellent' | 'good' | 'warning' | 'error';\n  message: string;\n  cpuUsage: number;\n  memoryUsage: number;\n  storageUsage: number;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n  \n  private chart: Chart | undefined;\n  private dataSubscription: Subscription | undefined;\n\n  sensors: Sensor[] = [];\n  systemHealth: SystemHealth = {\n    status: 'excellent',\n    message: 'All systems functioning optimally. Consider adjusting CO₂ levels slightly for optimal tomato growth.',\n    cpuUsage: 45,\n    memoryUsage: 60,\n    storageUsage: 55\n  };\n  chartData: any;\n  roadmapStages = [\n    { name: 'Germination', completed: true, active: false },\n    { name: 'Seedling', completed: true, active: false },\n    { name: 'Vegetation', completed: false, active: true },\n    { name: 'Flowering', completed: false, active: false },\n    { name: 'Fruiting', completed: false, active: false },\n    { name: 'Harvest', completed: false, active: false }\n  ];\n\n  constructor(\n    private sensorService: SensorService,\n    private aiService: AiService,\n    private sensorDataService: SensorDataService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadSensorData();\n    this.loadChartData();\n    this.initChart();\n  }\n\n  ngOnDestroy() {\n    if (this.dataSubscription) {\n      this.dataSubscription.unsubscribe();\n    }\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  }\n\n  loadSensorData(): void {\n    this.sensorService.getECSensors().subscribe(\n      (data) => {\n        this.sensors = data;\n      },\n      (error) => {\n        console.error('Error fetching sensor data:', error);\n        // Fallback to mock data\n        this.loadMockSensorData();\n      }\n    );\n  }\n\n  loadMockSensorData(): void {\n    this.sensors = [\n      { id: 1, name: 'Temperature', value: '24°C', icon: '🌡️', type: 'Environmental', unit: '°C', status: 'normal', isOnline: true, lastReading: new Date() },\n      { id: 2, name: 'Humidity', value: '65%', icon: '💧', type: 'Environmental', unit: '%', status: 'normal', isOnline: true, lastReading: new Date() },\n      { id: 3, name: 'Light', value: '850 lux', icon: '☀️', type: 'Environmental', unit: 'lux', status: 'normal', isOnline: true, lastReading: new Date() },\n      { id: 4, name: 'EC', value: '1.8 mS/cm', icon: '⚡', type: 'Nutrient', unit: 'mS/cm', status: 'normal', isOnline: false, lastReading: new Date() },\n      { id: 5, name: 'pH', value: '6.2', icon: '🧪', type: 'Nutrient', unit: '', status: 'normal', isOnline: true, lastReading: new Date() },\n      { id: 6, name: 'CO₂', value: '450 ppm', icon: '🌫️', type: 'Gas', unit: 'ppm', status: 'normal', isOnline: true, lastReading: new Date() }\n    ];\n  }\n\n  loadChartData(): void {\n    this.sensorService.getSensorHistory('defaultSensorId').subscribe(\n      (data) => {\n        this.processChartData(data);\n      },\n      (error) => {\n        console.error('Error fetching chart data:', error);\n        // Fallback to mock chart data\n        this.loadMockChartData();\n      }\n    );\n  }\n\n  processChartData(data: any): void {\n    // Process and format real data for chart\n    this.chartData = {\n      labels: data.timestamps,\n      datasets: data.datasets\n    };\n  }\n\n  loadMockChartData(): void {\n    const labels = Array.from({ length: 24 }, (_, i) => `${i}:00`);\n    \n    this.chartData = {\n      labels,\n      datasets: [\n        {\n          label: 'Temperature (°C)',\n          data: [22, 22.5, 23, 23.5, 24, 24.5, 25, 25.5, 26, 26.5, 26, 25.5, 25, 24.5, 24, 23.5, 23, 22.5, 22, 21.5, 21, 21.5, 22, 22],\n          borderColor: '#006d5b',\n          tension: 0.4,\n          fill: false\n        },\n        {\n          label: 'Humidity (%)',\n          data: [60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 70, 68, 67, 65, 63, 62, 60, 59, 58, 57, 58, 59, 60, 60],\n          borderColor: '#8d90bb',\n          tension: 0.4,\n          fill: false\n        },\n        {\n          label: 'Light (lux/100)',\n          data: [0, 0, 0, 1, 3, 5, 7, 8, 8.5, 8.5, 8.5, 8.5, 8.5, 8, 7, 5, 3, 1, 0, 0, 0, 0, 0, 0],\n          borderColor: '#ffc107',\n          tension: 0.4,\n          fill: false\n        }\n      ]\n    };\n  }\n\n  startIrrigation(): void {\n    this.sensorService.startIrrigation().subscribe(\n      () => alert('Irrigation started successfully!'),\n      (error) => console.error('Error starting irrigation:', error)\n    );\n  }\n\n  exportData(): void {\n    this.sensorService.exportData().subscribe(\n      (data) => {\n        const blob = new Blob([data], { type: 'application/json' }); // Set MIME type to JSON\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.setAttribute('hidden', '');\n        a.setAttribute('href', url);\n        a.setAttribute('download', 'eden-link-data-export.json'); // Update file extension to .json\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      },\n      (error) => console.error('Error exporting data:', error)\n    );\n  }\n\n  private initChart() {\n    this.dataSubscription = this.sensorDataService.getSensorData().subscribe(data => {\n      if (!this.chart && this.chartCanvas) {\n        this.createChart(data);\n      } else if (this.chart) {\n        this.updateChart(data);\n      }\n    });\n  }\n\n  private createChart(data: SensorData[]) {\n    const ctx = this.chartCanvas.nativeElement.getContext('2d');\n    \n    const config: ChartConfiguration = {\n      type: 'line',\n      data: {\n        labels: data.map(d => this.formatTimestamp(d.timestamp)),\n        datasets: [\n          {\n            label: 'Temperature (°C)',\n            data: data.map(d => d.temperature),\n            borderColor: 'rgb(255, 99, 132)',\n            tension: 0.3,\n            yAxisID: 'temperature'\n          },\n          {\n            label: 'Humidity (%)',\n            data: data.map(d => d.humidity),\n            borderColor: 'rgb(54, 162, 235)',\n            tension: 0.3,\n            yAxisID: 'humidity'\n          },\n          {\n            label: 'Light (lux)',\n            data: data.map(d => d.light),\n            borderColor: 'rgb(255, 205, 86)',\n            tension: 0.3,\n            yAxisID: 'light'\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 0\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Time'\n            }\n          },\n          temperature: {\n            type: 'linear',\n            position: 'left',\n            title: {\n              display: true,\n              text: 'Temperature (°C)'\n            },\n            min: 15,\n            max: 30\n          },\n          humidity: {\n            type: 'linear',\n            position: 'right',\n            title: {\n              display: true,\n              text: 'Humidity (%)'\n            },\n            min: 55,\n            max: 85\n          },\n          light: {\n            type: 'linear',\n            position: 'right',\n            title: {\n              display: true,\n              text: 'Light (lux)'\n            },\n            min: 1500,\n            max: 6500,\n            grid: {\n              drawOnChartArea: false\n            }\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: 'Greenhouse Environmental Conditions',\n            font: {\n              size: 16\n            }\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }\n    };\n\n    this.chart = new Chart(ctx, config);\n  }\n\n  private updateChart(data: SensorData[]) {\n    if (!this.chart) return;\n\n    this.chart.data.labels = data.map(d => this.formatTimestamp(d.timestamp));\n    this.chart.data.datasets[0].data = data.map(d => d.temperature);\n    this.chart.data.datasets[1].data = data.map(d => d.humidity);\n    this.chart.data.datasets[2].data = data.map(d => d.light);\n    \n    this.chart.update();\n  }\n\n  private formatTimestamp(timestamp: Date): string {\n    return new Date(timestamp).toLocaleTimeString();\n  }\n}","<div class=\"dashboard-container\">\n    <div class=\"dashboard-header\">\n      <h1 class=\"dashboard-title\">Dashboard</h1>\n      <div class=\"dashboard-actions\">\n        <button class=\"btn btn-outline\" (click)=\"exportData()\">Export Data</button>\n        <button class=\"btn btn-primary\" (click)=\"startIrrigation()\">Start Irrigation</button>\n      </div>\n    </div>\n    \n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h2 class=\"card-title\">Sensor Status</h2>\n      </div>\n      <div class=\"sensors-grid\">\n        <app-sensor-card \n          *ngFor=\"let sensor of sensors\" \n          [sensor]=\"sensor\">\n        </app-sensor-card>\n      </div>\n    </div>\n    \n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h2 class=\"card-title\">Real-Time Charts</h2>\n      </div>\n      <div class=\"chart-container\">\n        <canvas #chartCanvas></canvas>\n      </div>\n      <div class=\"system-health\" [ngClass]=\"'system-health-' + systemHealth.status\">\n        <div class=\"system-health-icon\">✓</div>\n        <div class=\"system-health-content\">\n          <div class=\"system-health-title\">System Health: {{ systemHealth.status | titlecase }}</div>\n          <div class=\"system-health-message\">{{ systemHealth.message }}</div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h2 class=\"card-title\">Crop Cycle Roadmap</h2>\n      </div>\n      <div class=\"crop-roadmap\">\n        <div class=\"roadmap-step\" *ngFor=\"let stage of roadmapStages; let i = index\">\n          <div class=\"step-icon\" \n               [ngClass]=\"{'active': stage.active, 'completed': stage.completed}\">\n            {{ stage.completed ? '✓' : i + 1 }}\n          </div>\n          <div class=\"step-label\">{{ stage.name }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"system-status\">\n      <h2>System Status</h2>\n      <div class=\"status-grid\">\n        <div class=\"status-card\" *ngFor=\"let sensor of sensors\">\n          <h3>{{ sensor.name }}</h3>\n          <div class=\"status-indicator\" [class.online]=\"sensor.isOnline\">\n            {{ sensor.isOnline ? 'Online' : 'Offline' }}\n          </div>\n          <div class=\"last-reading\">\n            Last Reading: {{ sensor.lastReading | date:'medium' }}\n          </div>\n        </div>\n\n        <div class=\"status-card system-health\">\n          <h3>System Health</h3>\n          <div class=\"health-metrics\">\n            <div class=\"metric\">\n              <span>CPU Usage:</span>\n              <span [class.warning]=\"systemHealth.cpuUsage > 80\">\n                {{ systemHealth.cpuUsage }}%\n              </span>\n            </div>\n            <div class=\"metric\">\n              <span>Memory Usage:</span>\n              <span [class.warning]=\"systemHealth.memoryUsage > 80\">\n                {{ systemHealth.memoryUsage }}%\n              </span>\n            </div>\n            <div class=\"metric\">\n              <span>Storage:</span>\n              <span [class.warning]=\"systemHealth.storageUsage > 80\">\n                {{ systemHealth.storageUsage }}%\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"],"mappings":"AAIA,SAASA,KAAK,QAA4B,eAAe;;;;;;;;;;ICUjDC,EAAA,CAAAC,SAAA,0BAGkB;;;;IADhBD,EAAA,CAAAE,UAAA,WAAAC,SAAA,CAAiB;;;;;;;;;IA0BnBH,EAAA,CAAAI,cAAA,cAA6E;IAGzEJ,EAAA,CAAAK,MAAA,GACF;IAAAL,EAAA,CAAAM,YAAA,EAAM;IACNN,EAAA,CAAAI,cAAA,cAAwB;IAAAJ,EAAA,CAAAK,MAAA,GAAgB;IAAAL,EAAA,CAAAM,YAAA,EAAM;;;;;IAHzCN,EAAA,CAAAO,SAAA,EAAkE;IAAlEP,EAAA,CAAAE,UAAA,YAAAF,EAAA,CAAAQ,eAAA,IAAAC,GAAA,EAAAC,QAAA,CAAAC,MAAA,EAAAD,QAAA,CAAAE,SAAA,EAAkE;IACrEZ,EAAA,CAAAO,SAAA,EACF;IADEP,EAAA,CAAAa,kBAAA,MAAAH,QAAA,CAAAE,SAAA,cAAAE,IAAA,UACF;IACwBd,EAAA,CAAAO,SAAA,GAAgB;IAAhBP,EAAA,CAAAe,iBAAA,CAAAL,QAAA,CAAAM,IAAA,CAAgB;;;;;IAQ1ChB,EAAA,CAAAI,cAAA,cAAwD;IAClDJ,EAAA,CAAAK,MAAA,GAAiB;IAAAL,EAAA,CAAAM,YAAA,EAAK;IAC1BN,EAAA,CAAAI,cAAA,cAA+D;IAC7DJ,EAAA,CAAAK,MAAA,GACF;IAAAL,EAAA,CAAAM,YAAA,EAAM;IACNN,EAAA,CAAAI,cAAA,cAA0B;IACxBJ,EAAA,CAAAK,MAAA,GACF;;IAAAL,EAAA,CAAAM,YAAA,EAAM;;;;IANFN,EAAA,CAAAO,SAAA,GAAiB;IAAjBP,EAAA,CAAAe,iBAAA,CAAAE,SAAA,CAAAD,IAAA,CAAiB;IACShB,EAAA,CAAAO,SAAA,EAAgC;IAAhCP,EAAA,CAAAkB,WAAA,WAAAD,SAAA,CAAAE,QAAA,CAAgC;IAC5DnB,EAAA,CAAAO,SAAA,EACF;IADEP,EAAA,CAAAa,kBAAA,MAAAI,SAAA,CAAAE,QAAA,6BACF;IAEEnB,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAa,kBAAA,oBAAAb,EAAA,CAAAoB,WAAA,OAAAH,SAAA,CAAAI,WAAA,iBACF;;;ADzCV,OAAM,MAAOC,kBAAkB;EAwB7BC,YACUC,aAA4B,EAC5BC,SAAoB,EACpBC,iBAAoC;IAFpC,KAAAF,aAAa,GAAbA,aAAa;IACb,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,iBAAiB,GAAjBA,iBAAiB;IArB3B,KAAAC,OAAO,GAAa,EAAE;IACtB,KAAAC,YAAY,GAAiB;MAC3BC,MAAM,EAAE,WAAW;MACnBC,OAAO,EAAE,sGAAsG;MAC/GC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE;KACf;IAED,KAAAC,aAAa,GAAG,CACd;MAAElB,IAAI,EAAE,aAAa;MAAEJ,SAAS,EAAE,IAAI;MAAED,MAAM,EAAE;IAAK,CAAE,EACvD;MAAEK,IAAI,EAAE,UAAU;MAAEJ,SAAS,EAAE,IAAI;MAAED,MAAM,EAAE;IAAK,CAAE,EACpD;MAAEK,IAAI,EAAE,YAAY;MAAEJ,SAAS,EAAE,KAAK;MAAED,MAAM,EAAE;IAAI,CAAE,EACtD;MAAEK,IAAI,EAAE,WAAW;MAAEJ,SAAS,EAAE,KAAK;MAAED,MAAM,EAAE;IAAK,CAAE,EACtD;MAAEK,IAAI,EAAE,UAAU;MAAEJ,SAAS,EAAE,KAAK;MAAED,MAAM,EAAE;IAAK,CAAE,EACrD;MAAEK,IAAI,EAAE,SAAS;MAAEJ,SAAS,EAAE,KAAK;MAAED,MAAM,EAAE;IAAK,CAAE,CACrD;EAMG;EAEJwB,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACC,gBAAgB,EAAE;MACzB,IAAI,CAACA,gBAAgB,CAACC,WAAW,EAAE;;IAErC,IAAI,IAAI,CAACC,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,CAACC,OAAO,EAAE;;EAExB;EAEAP,cAAcA,CAAA;IACZ,IAAI,CAACZ,aAAa,CAACoB,YAAY,EAAE,CAACC,SAAS,CACxCC,IAAI,IAAI;MACP,IAAI,CAACnB,OAAO,GAAGmB,IAAI;IACrB,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;MACA,IAAI,CAACE,kBAAkB,EAAE;IAC3B,CAAC,CACF;EACH;EAEAA,kBAAkBA,CAAA;IAChB,IAAI,CAACtB,OAAO,GAAG,CACb;MAAEuB,EAAE,EAAE,CAAC;MAAElC,IAAI,EAAE,aAAa;MAAEmC,KAAK,EAAE,MAAM;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,eAAe;MAAEC,IAAI,EAAE,IAAI;MAAEzB,MAAM,EAAE,QAAQ;MAAEV,QAAQ,EAAE,IAAI;MAAEE,WAAW,EAAE,IAAIkC,IAAI;IAAE,CAAE,EACxJ;MAAEL,EAAE,EAAE,CAAC;MAAElC,IAAI,EAAE,UAAU;MAAEmC,KAAK,EAAE,KAAK;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE,eAAe;MAAEC,IAAI,EAAE,GAAG;MAAEzB,MAAM,EAAE,QAAQ;MAAEV,QAAQ,EAAE,IAAI;MAAEE,WAAW,EAAE,IAAIkC,IAAI;IAAE,CAAE,EAClJ;MAAEL,EAAE,EAAE,CAAC;MAAElC,IAAI,EAAE,OAAO;MAAEmC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE,eAAe;MAAEC,IAAI,EAAE,KAAK;MAAEzB,MAAM,EAAE,QAAQ;MAAEV,QAAQ,EAAE,IAAI;MAAEE,WAAW,EAAE,IAAIkC,IAAI;IAAE,CAAE,EACrJ;MAAEL,EAAE,EAAE,CAAC;MAAElC,IAAI,EAAE,IAAI;MAAEmC,KAAK,EAAE,WAAW;MAAEC,IAAI,EAAE,GAAG;MAAEC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,OAAO;MAAEzB,MAAM,EAAE,QAAQ;MAAEV,QAAQ,EAAE,KAAK;MAAEE,WAAW,EAAE,IAAIkC,IAAI;IAAE,CAAE,EACjJ;MAAEL,EAAE,EAAE,CAAC;MAAElC,IAAI,EAAE,IAAI;MAAEmC,KAAK,EAAE,KAAK;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,EAAE;MAAEzB,MAAM,EAAE,QAAQ;MAAEV,QAAQ,EAAE,IAAI;MAAEE,WAAW,EAAE,IAAIkC,IAAI;IAAE,CAAE,EACtI;MAAEL,EAAE,EAAE,CAAC;MAAElC,IAAI,EAAE,KAAK;MAAEmC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,KAAK;MAAEzB,MAAM,EAAE,QAAQ;MAAEV,QAAQ,EAAE,IAAI;MAAEE,WAAW,EAAE,IAAIkC,IAAI;IAAE,CAAE,CAC3I;EACH;EAEAlB,aAAaA,CAAA;IACX,IAAI,CAACb,aAAa,CAACgC,gBAAgB,CAAC,iBAAiB,CAAC,CAACX,SAAS,CAC7DC,IAAI,IAAI;MACP,IAAI,CAACW,gBAAgB,CAACX,IAAI,CAAC;IAC7B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;MACA,IAAI,CAACW,iBAAiB,EAAE;IAC1B,CAAC,CACF;EACH;EAEAD,gBAAgBA,CAACX,IAAS;IACxB;IACA,IAAI,CAACa,SAAS,GAAG;MACfC,MAAM,EAAEd,IAAI,CAACe,UAAU;MACvBC,QAAQ,EAAEhB,IAAI,CAACgB;KAChB;EACH;EAEAJ,iBAAiBA,CAAA;IACf,MAAME,MAAM,GAAGG,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAE,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,GAAGA,CAAC,KAAK,CAAC;IAE9D,IAAI,CAACR,SAAS,GAAG;MACfC,MAAM;MACNE,QAAQ,EAAE,CACR;QACEM,KAAK,EAAE,kBAAkB;QACzBtB,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;QAC5HuB,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE,GAAG;QACZC,IAAI,EAAE;OACP,EACD;QACEH,KAAK,EAAE,cAAc;QACrBtB,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACtGuB,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE,GAAG;QACZC,IAAI,EAAE;OACP,EACD;QACEH,KAAK,EAAE,iBAAiB;QACxBtB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACxFuB,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE,GAAG;QACZC,IAAI,EAAE;OACP;KAEJ;EACH;EAEAC,eAAeA,CAAA;IACb,IAAI,CAAChD,aAAa,CAACgD,eAAe,EAAE,CAAC3B,SAAS,CAC5C,MAAM4B,KAAK,CAAC,kCAAkC,CAAC,EAC9C1B,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAC9D;EACH;EAEA2B,UAAUA,CAAA;IACR,IAAI,CAAClD,aAAa,CAACkD,UAAU,EAAE,CAAC7B,SAAS,CACtCC,IAAI,IAAI;MACP,MAAM6B,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC9B,IAAI,CAAC,EAAE;QAAEO,IAAI,EAAE;MAAkB,CAAE,CAAC,CAAC,CAAC;MAC7D,MAAMwB,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MAC5C,MAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC;MAC5BH,CAAC,CAACG,YAAY,CAAC,MAAM,EAAEP,GAAG,CAAC;MAC3BI,CAAC,CAACG,YAAY,CAAC,UAAU,EAAE,4BAA4B,CAAC,CAAC,CAAC;MAC1DF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,CAAC,CAAC;MAC5BA,CAAC,CAACM,KAAK,EAAE;MACTL,QAAQ,CAACG,IAAI,CAACG,WAAW,CAACP,CAAC,CAAC;IAC9B,CAAC,EACAlC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CACzD;EACH;EAEQT,SAASA,CAAA;IACf,IAAI,CAACE,gBAAgB,GAAG,IAAI,CAACd,iBAAiB,CAAC+D,aAAa,EAAE,CAAC5C,SAAS,CAACC,IAAI,IAAG;MAC9E,IAAI,CAAC,IAAI,CAACJ,KAAK,IAAI,IAAI,CAACgD,WAAW,EAAE;QACnC,IAAI,CAACC,WAAW,CAAC7C,IAAI,CAAC;OACvB,MAAM,IAAI,IAAI,CAACJ,KAAK,EAAE;QACrB,IAAI,CAACkD,WAAW,CAAC9C,IAAI,CAAC;;IAE1B,CAAC,CAAC;EACJ;EAEQ6C,WAAWA,CAAC7C,IAAkB;IACpC,MAAM+C,GAAG,GAAG,IAAI,CAACH,WAAW,CAACI,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;IAE3D,MAAMC,MAAM,GAAuB;MACjC3C,IAAI,EAAE,MAAM;MACZP,IAAI,EAAE;QACJc,MAAM,EAAEd,IAAI,CAACmD,GAAG,CAACC,CAAC,IAAI,IAAI,CAACC,eAAe,CAACD,CAAC,CAACE,SAAS,CAAC,CAAC;QACxDtC,QAAQ,EAAE,CACR;UACEM,KAAK,EAAE,kBAAkB;UACzBtB,IAAI,EAAEA,IAAI,CAACmD,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACG,WAAW,CAAC;UAClChC,WAAW,EAAE,mBAAmB;UAChCC,OAAO,EAAE,GAAG;UACZgC,OAAO,EAAE;SACV,EACD;UACElC,KAAK,EAAE,cAAc;UACrBtB,IAAI,EAAEA,IAAI,CAACmD,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACK,QAAQ,CAAC;UAC/BlC,WAAW,EAAE,mBAAmB;UAChCC,OAAO,EAAE,GAAG;UACZgC,OAAO,EAAE;SACV,EACD;UACElC,KAAK,EAAE,aAAa;UACpBtB,IAAI,EAAEA,IAAI,CAACmD,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACM,KAAK,CAAC;UAC5BnC,WAAW,EAAE,mBAAmB;UAChCC,OAAO,EAAE,GAAG;UACZgC,OAAO,EAAE;SACV;OAEJ;MACDG,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,SAAS,EAAE;UACTC,QAAQ,EAAE;SACX;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;;WAET;UACDb,WAAW,EAAE;YACXhD,IAAI,EAAE,QAAQ;YACd8D,QAAQ,EAAE,MAAM;YAChBH,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;aACP;YACDE,GAAG,EAAE,EAAE;YACPC,GAAG,EAAE;WACN;UACDd,QAAQ,EAAE;YACRlD,IAAI,EAAE,QAAQ;YACd8D,QAAQ,EAAE,OAAO;YACjBH,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;aACP;YACDE,GAAG,EAAE,EAAE;YACPC,GAAG,EAAE;WACN;UACDb,KAAK,EAAE;YACLnD,IAAI,EAAE,QAAQ;YACd8D,QAAQ,EAAE,OAAO;YACjBH,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;aACP;YACDE,GAAG,EAAE,IAAI;YACTC,GAAG,EAAE,IAAI;YACTC,IAAI,EAAE;cACJC,eAAe,EAAE;;;SAGtB;QACDC,OAAO,EAAE;UACPR,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE,qCAAqC;YAC3CO,IAAI,EAAE;cACJC,IAAI,EAAE;;WAET;UACDC,MAAM,EAAE;YACNR,QAAQ,EAAE;;;;KAIjB;IAED,IAAI,CAACzE,KAAK,GAAG,IAAI3C,KAAK,CAAC8F,GAAG,EAAEG,MAAM,CAAC;EACrC;EAEQJ,WAAWA,CAAC9C,IAAkB;IACpC,IAAI,CAAC,IAAI,CAACJ,KAAK,EAAE;IAEjB,IAAI,CAACA,KAAK,CAACI,IAAI,CAACc,MAAM,GAAGd,IAAI,CAACmD,GAAG,CAACC,CAAC,IAAI,IAAI,CAACC,eAAe,CAACD,CAAC,CAACE,SAAS,CAAC,CAAC;IACzE,IAAI,CAAC1D,KAAK,CAACI,IAAI,CAACgB,QAAQ,CAAC,CAAC,CAAC,CAAChB,IAAI,GAAGA,IAAI,CAACmD,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACG,WAAW,CAAC;IAC/D,IAAI,CAAC3D,KAAK,CAACI,IAAI,CAACgB,QAAQ,CAAC,CAAC,CAAC,CAAChB,IAAI,GAAGA,IAAI,CAACmD,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACK,QAAQ,CAAC;IAC5D,IAAI,CAAC7D,KAAK,CAACI,IAAI,CAACgB,QAAQ,CAAC,CAAC,CAAC,CAAChB,IAAI,GAAGA,IAAI,CAACmD,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACM,KAAK,CAAC;IAEzD,IAAI,CAAC9D,KAAK,CAACkF,MAAM,EAAE;EACrB;EAEQzB,eAAeA,CAACC,SAAe;IACrC,OAAO,IAAI7C,IAAI,CAAC6C,SAAS,CAAC,CAACyB,kBAAkB,EAAE;EACjD;;;uBAxQWvG,kBAAkB,EAAAtB,EAAA,CAAA8H,iBAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAhI,EAAA,CAAA8H,iBAAA,CAAAG,EAAA,CAAAC,SAAA,GAAAlI,EAAA,CAAA8H,iBAAA,CAAAK,EAAA,CAAAC,iBAAA;IAAA;EAAA;;;YAAlB9G,kBAAkB;MAAA+G,SAAA;MAAAC,SAAA,WAAAC,yBAAAC,EAAA,EAAA3C,GAAA;QAAA,IAAA2C,EAAA;;;;;;;;;;;;;UCrB/BxI,EAAA,CAAAI,cAAA,aAAiC;UAECJ,EAAA,CAAAK,MAAA,gBAAS;UAAAL,EAAA,CAAAM,YAAA,EAAK;UAC1CN,EAAA,CAAAI,cAAA,aAA+B;UACGJ,EAAA,CAAAyI,UAAA,mBAAAC,oDAAA;YAAA,OAAS7C,GAAA,CAAAnB,UAAA,EAAY;UAAA,EAAC;UAAC1E,EAAA,CAAAK,MAAA,kBAAW;UAAAL,EAAA,CAAAM,YAAA,EAAS;UAC3EN,EAAA,CAAAI,cAAA,gBAA4D;UAA5BJ,EAAA,CAAAyI,UAAA,mBAAAE,oDAAA;YAAA,OAAS9C,GAAA,CAAArB,eAAA,EAAiB;UAAA,EAAC;UAACxE,EAAA,CAAAK,MAAA,uBAAgB;UAAAL,EAAA,CAAAM,YAAA,EAAS;UAIzFN,EAAA,CAAAI,cAAA,aAAkB;UAESJ,EAAA,CAAAK,MAAA,qBAAa;UAAAL,EAAA,CAAAM,YAAA,EAAK;UAE3CN,EAAA,CAAAI,cAAA,cAA0B;UACxBJ,EAAA,CAAA4I,UAAA,KAAAC,8CAAA,8BAGkB;UACpB7I,EAAA,CAAAM,YAAA,EAAM;UAGRN,EAAA,CAAAI,cAAA,cAAkB;UAESJ,EAAA,CAAAK,MAAA,wBAAgB;UAAAL,EAAA,CAAAM,YAAA,EAAK;UAE9CN,EAAA,CAAAI,cAAA,eAA6B;UAC3BJ,EAAA,CAAAC,SAAA,wBAA8B;UAChCD,EAAA,CAAAM,YAAA,EAAM;UACNN,EAAA,CAAAI,cAAA,eAA8E;UAC5CJ,EAAA,CAAAK,MAAA,cAAC;UAAAL,EAAA,CAAAM,YAAA,EAAM;UACvCN,EAAA,CAAAI,cAAA,eAAmC;UACAJ,EAAA,CAAAK,MAAA,IAAoD;;UAAAL,EAAA,CAAAM,YAAA,EAAM;UAC3FN,EAAA,CAAAI,cAAA,eAAmC;UAAAJ,EAAA,CAAAK,MAAA,IAA0B;UAAAL,EAAA,CAAAM,YAAA,EAAM;UAKzEN,EAAA,CAAAI,cAAA,cAAkB;UAESJ,EAAA,CAAAK,MAAA,0BAAkB;UAAAL,EAAA,CAAAM,YAAA,EAAK;UAEhDN,EAAA,CAAAI,cAAA,eAA0B;UACxBJ,EAAA,CAAA4I,UAAA,KAAAE,kCAAA,kBAMM;UACR9I,EAAA,CAAAM,YAAA,EAAM;UAGRN,EAAA,CAAAI,cAAA,eAA2B;UACrBJ,EAAA,CAAAK,MAAA,qBAAa;UAAAL,EAAA,CAAAM,YAAA,EAAK;UACtBN,EAAA,CAAAI,cAAA,eAAyB;UACvBJ,EAAA,CAAA4I,UAAA,KAAAG,kCAAA,kBAQM;UAEN/I,EAAA,CAAAI,cAAA,eAAuC;UACjCJ,EAAA,CAAAK,MAAA,qBAAa;UAAAL,EAAA,CAAAM,YAAA,EAAK;UACtBN,EAAA,CAAAI,cAAA,eAA4B;UAElBJ,EAAA,CAAAK,MAAA,kBAAU;UAAAL,EAAA,CAAAM,YAAA,EAAO;UACvBN,EAAA,CAAAI,cAAA,YAAmD;UACjDJ,EAAA,CAAAK,MAAA,IACF;UAAAL,EAAA,CAAAM,YAAA,EAAO;UAETN,EAAA,CAAAI,cAAA,eAAoB;UACZJ,EAAA,CAAAK,MAAA,qBAAa;UAAAL,EAAA,CAAAM,YAAA,EAAO;UAC1BN,EAAA,CAAAI,cAAA,YAAsD;UACpDJ,EAAA,CAAAK,MAAA,IACF;UAAAL,EAAA,CAAAM,YAAA,EAAO;UAETN,EAAA,CAAAI,cAAA,eAAoB;UACZJ,EAAA,CAAAK,MAAA,gBAAQ;UAAAL,EAAA,CAAAM,YAAA,EAAO;UACrBN,EAAA,CAAAI,cAAA,YAAuD;UACrDJ,EAAA,CAAAK,MAAA,IACF;UAAAL,EAAA,CAAAM,YAAA,EAAO;;;UArEQN,EAAA,CAAAO,SAAA,IAAU;UAAVP,EAAA,CAAAE,UAAA,YAAA2F,GAAA,CAAAlE,OAAA,CAAU;UAaN3B,EAAA,CAAAO,SAAA,GAAkD;UAAlDP,EAAA,CAAAE,UAAA,+BAAA2F,GAAA,CAAAjE,YAAA,CAAAC,MAAA,CAAkD;UAGxC7B,EAAA,CAAAO,SAAA,GAAoD;UAApDP,EAAA,CAAAa,kBAAA,oBAAAb,EAAA,CAAAgJ,WAAA,SAAAnD,GAAA,CAAAjE,YAAA,CAAAC,MAAA,MAAoD;UAClD7B,EAAA,CAAAO,SAAA,GAA0B;UAA1BP,EAAA,CAAAe,iBAAA,CAAA8E,GAAA,CAAAjE,YAAA,CAAAE,OAAA,CAA0B;UAUnB9B,EAAA,CAAAO,SAAA,GAAkB;UAAlBP,EAAA,CAAAE,UAAA,YAAA2F,GAAA,CAAA3D,aAAA,CAAkB;UAalBlC,EAAA,CAAAO,SAAA,GAAU;UAAVP,EAAA,CAAAE,UAAA,YAAA2F,GAAA,CAAAlE,OAAA,CAAU;UAe1C3B,EAAA,CAAAO,SAAA,GAA4C;UAA5CP,EAAA,CAAAkB,WAAA,YAAA2E,GAAA,CAAAjE,YAAA,CAAAG,QAAA,MAA4C;UAChD/B,EAAA,CAAAO,SAAA,EACF;UADEP,EAAA,CAAAa,kBAAA,MAAAgF,GAAA,CAAAjE,YAAA,CAAAG,QAAA,OACF;UAIM/B,EAAA,CAAAO,SAAA,GAA+C;UAA/CP,EAAA,CAAAkB,WAAA,YAAA2E,GAAA,CAAAjE,YAAA,CAAAI,WAAA,MAA+C;UACnDhC,EAAA,CAAAO,SAAA,EACF;UADEP,EAAA,CAAAa,kBAAA,MAAAgF,GAAA,CAAAjE,YAAA,CAAAI,WAAA,OACF;UAIMhC,EAAA,CAAAO,SAAA,GAAgD;UAAhDP,EAAA,CAAAkB,WAAA,YAAA2E,GAAA,CAAAjE,YAAA,CAAAK,YAAA,MAAgD;UACpDjC,EAAA,CAAAO,SAAA,EACF;UADEP,EAAA,CAAAa,kBAAA,MAAAgF,GAAA,CAAAjE,YAAA,CAAAK,YAAA,OACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}