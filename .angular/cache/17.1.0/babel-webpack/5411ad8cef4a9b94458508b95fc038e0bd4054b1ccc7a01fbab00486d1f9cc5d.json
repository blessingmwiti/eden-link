{"ast":null,"code":"import { Chart } from 'chart.js';\nimport { default as Annotation } from 'chartjs-plugin-annotation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport class ChartComponent {\n  constructor() {\n    this.chartData = {\n      datasets: [],\n      labels: []\n    };\n    this.type = 'line';\n    this.chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          }\n        },\n        y: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          align: 'center',\n          labels: {\n            boxWidth: 15,\n            padding: 15,\n            font: {\n              size: 11\n            }\n          }\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          titleColor: '#000',\n          bodyColor: '#666',\n          borderColor: 'rgba(0, 0, 0, 0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      interaction: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      }\n    };\n    Chart.register(Annotation);\n  }\n  ngOnInit() {\n    // Register chart plugins if needed\n  }\n  ngOnChanges(changes) {\n    // Component will automatically update when inputs change\n  }\n  static {\n    this.ɵfac = function ChartComponent_Factory(t) {\n      return new (t || ChartComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChartComponent,\n      selectors: [[\"app-chart\"]],\n      inputs: {\n        chartData: \"chartData\",\n        type: \"type\",\n        chartOptions: \"chartOptions\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 3,\n      consts: [[1, \"chart-container\"], [\"baseChart\", \"\", 3, \"data\", \"options\", \"type\"]],\n      template: function ChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"canvas\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"data\", ctx.chartData)(\"options\", ctx.chartOptions)(\"type\", \"line\");\n        }\n      },\n      dependencies: [i1.BaseChartDirective],\n      styles: [\".chart-wrapper[_ngcontent-%COMP%] {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\\n.chart-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  height: 300px;\\n  width: 100%;\\n  margin: 1rem 0;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  width: 100% !important;\\n  height: 100% !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY2hhcnQvY2hhcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0VBQ2Q7O0FBRUY7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFdBQVc7RUFDWCxjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLHVCQUF1QjtBQUN6QiIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFydC13cmFwcGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cblxuLmNoYXJ0LWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMXJlbSAwO1xufVxuXG5jYW52YXMge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Chart","default","Annotation","ChartComponent","constructor","chartData","datasets","labels","type","chartOptions","responsive","maintainAspectRatio","scales","x","grid","color","borderColor","ticks","font","size","y","plugins","legend","position","align","boxWidth","padding","tooltip","mode","intersect","backgroundColor","titleColor","bodyColor","borderWidth","interaction","axis","register","ngOnInit","ngOnChanges","changes","selectors","inputs","features","i0","ɵɵNgOnChangesFeature","decls","vars","consts","template","ChartComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["/home/injinia/eden-link/src/app/shared/components/chart/chart.component.ts","/home/injinia/eden-link/src/app/shared/components/chart/chart.component.html"],"sourcesContent":["import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Chart, ChartConfiguration, ChartType } from 'chart.js';\nimport { default as Annotation } from 'chartjs-plugin-annotation';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit {\n  @Input() chartData: ChartConfiguration['data'] = {\n    datasets: [],\n    labels: []\n  };\n  \n  @Input() type: ChartType = 'line';\n  \n  @Input() chartOptions: ChartConfiguration['options'] = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n          borderColor: 'rgba(0, 0, 0, 0.3)'\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 11\n          }\n        }\n      },\n      y: {\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n          borderColor: 'rgba(0, 0, 0, 0.3)'\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 11\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        align: 'center',\n        labels: {\n          boxWidth: 15,\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        titleColor: '#000',\n        bodyColor: '#666',\n        borderColor: 'rgba(0, 0, 0, 0.1)',\n        borderWidth: 1,\n        padding: 10\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  };\n\n  constructor() {\n    Chart.register(Annotation);\n  }\n\n  ngOnInit() {\n    // Register chart plugins if needed\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Component will automatically update when inputs change\n  }\n}","<!-- Chart container with responsive sizing -->\n<div class=\"chart-container\">\n  <canvas \n    baseChart \n    [data]=\"chartData\"\n    [options]=\"chartOptions\"\n    [type]=\"'line'\">\n  </canvas>\n</div>"],"mappings":"AACA,SAASA,KAAK,QAAuC,UAAU;AAC/D,SAASC,OAAO,IAAIC,UAAU,QAAQ,2BAA2B;;;AAOjE,OAAM,MAAOC,cAAc;EAmEzBC,YAAA;IAlES,KAAAC,SAAS,GAA+B;MAC/CC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;KACT;IAEQ,KAAAC,IAAI,GAAc,MAAM;IAExB,KAAAC,YAAY,GAAkC;MACrDC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE;YACJC,KAAK,EAAE,oBAAoB;YAC3BC,WAAW,EAAE;WACd;UACDC,KAAK,EAAE;YACLF,KAAK,EAAE,MAAM;YACbG,IAAI,EAAE;cACJC,IAAI,EAAE;;;SAGX;QACDC,CAAC,EAAE;UACDN,IAAI,EAAE;YACJC,KAAK,EAAE,oBAAoB;YAC3BC,WAAW,EAAE;WACd;UACDC,KAAK,EAAE;YACLF,KAAK,EAAE,MAAM;YACbG,IAAI,EAAE;cACJC,IAAI,EAAE;;;;OAIb;MACDE,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE,KAAK;UACfC,KAAK,EAAE,QAAQ;UACfjB,MAAM,EAAE;YACNkB,QAAQ,EAAE,EAAE;YACZC,OAAO,EAAE,EAAE;YACXR,IAAI,EAAE;cACJC,IAAI,EAAE;;;SAGX;QACDQ,OAAO,EAAE;UACPC,IAAI,EAAE,OAAO;UACbC,SAAS,EAAE,KAAK;UAChBC,eAAe,EAAE,0BAA0B;UAC3CC,UAAU,EAAE,MAAM;UAClBC,SAAS,EAAE,MAAM;UACjBhB,WAAW,EAAE,oBAAoB;UACjCiB,WAAW,EAAE,CAAC;UACdP,OAAO,EAAE;;OAEZ;MACDQ,WAAW,EAAE;QACXN,IAAI,EAAE,SAAS;QACfO,IAAI,EAAE,GAAG;QACTN,SAAS,EAAE;;KAEd;IAGC7B,KAAK,CAACoC,QAAQ,CAAClC,UAAU,CAAC;EAC5B;EAEAmC,QAAQA,CAAA;IACN;EAAA;EAGFC,WAAWA,CAACC,OAAsB;IAChC;EAAA;;;uBA5ESpC,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAqC,SAAA;MAAAC,MAAA;QAAApC,SAAA;QAAAG,IAAA;QAAAC,YAAA;MAAA;MAAAiC,QAAA,GAAAC,EAAA,CAAAC,oBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCR3BP,EAAA,CAAAS,cAAA,aAA6B;UAC3BT,EAAA,CAAAU,SAAA,gBAKS;UACXV,EAAA,CAAAW,YAAA,EAAM;;;UAJFX,EAAA,CAAAY,SAAA,EAAkB;UAAlBZ,EAAA,CAAAa,UAAA,SAAAL,GAAA,CAAA9C,SAAA,CAAkB,YAAA8C,GAAA,CAAA1C,YAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}