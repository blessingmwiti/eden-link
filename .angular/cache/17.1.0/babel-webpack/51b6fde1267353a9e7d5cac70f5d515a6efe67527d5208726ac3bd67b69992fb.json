{"ast":null,"code":"import { interval, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/sensor.service\";\nimport * as i2 from \"../../core/services/ai.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../shared/components/chart/chart.component\";\nfunction DashboardComponent_app_chart_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-chart\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"chartData\", ctx_r0.chartData)(\"chartOptions\", ctx_r0.chartOptions);\n  }\n}\nconst _c0 = (a0, a1) => ({\n  \"active\": a0,\n  \"completed\": a1\n});\nfunction DashboardComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"div\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 27);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const stage_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, stage_r2.active, stage_r2.completed));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", stage_r2.completed ? \"\\u2713\" : i_r3 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stage_r2.name);\n  }\n}\nexport class DashboardComponent {\n  constructor(sensorService, aiService) {\n    this.sensorService = sensorService;\n    this.aiService = aiService;\n    this.sensors = [];\n    this.systemHealth = {\n      status: 'excellent',\n      message: 'All systems functioning optimally. Consider adjusting CO₂ levels slightly for optimal tomato growth.'\n    };\n    this.roadmapStages = [{\n      name: 'Germination',\n      completed: true,\n      active: false\n    }, {\n      name: 'Seedling',\n      completed: true,\n      active: false\n    }, {\n      name: 'Vegetation',\n      completed: false,\n      active: true\n    }, {\n      name: 'Flowering',\n      completed: false,\n      active: false\n    }, {\n      name: 'Fruiting',\n      completed: false,\n      active: false\n    }, {\n      name: 'Harvest',\n      completed: false,\n      active: false\n    }];\n    this.destroy$ = new Subject();\n    this.updateInterval$ = interval(5000);\n    this.currentMetrics = {\n      temperature: 24,\n      humidity: 65,\n      light: 650,\n      ec: 1.8,\n      ph: 6.2\n    };\n  }\n  ngOnInit() {\n    this.loadInitialData();\n    this.setupRealTimeUpdates();\n  }\n  ngOnDestroy() {\n    if (this.updateSubscription) {\n      this.updateSubscription.unsubscribe();\n    }\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  loadInitialData() {\n    this.loadCurrentMetrics();\n    this.loadChartData();\n  }\n  setupRealTimeUpdates() {\n    this.updateInterval$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.loadCurrentMetrics();\n      this.loadChartData();\n    });\n  }\n  loadCurrentMetrics() {\n    this.sensorService.getCurrentMetrics().pipe(takeUntil(this.destroy$)).subscribe({\n      next: metrics => {\n        this.currentMetrics = metrics;\n      },\n      error: error => {\n        console.error('Error loading current metrics:', error);\n        // Keep using last known values\n      }\n    });\n  }\n  loadSensorData() {\n    this.sensorService.getECSensors().subscribe(data => {\n      this.sensors = data;\n    }, error => {\n      console.error('Error fetching sensor data:', error);\n      // Fallback to mock data\n      this.loadMockSensorData();\n    });\n  }\n  loadMockSensorData() {\n    this.sensors = [{\n      id: 1,\n      name: 'Temperature',\n      value: '24°C',\n      icon: '🌡️',\n      type: 'Environmental',\n      unit: '°C',\n      status: 'normal'\n    }, {\n      id: 2,\n      name: 'Humidity',\n      value: '65%',\n      icon: '💧',\n      type: 'Environmental',\n      unit: '%',\n      status: 'normal'\n    }, {\n      id: 3,\n      name: 'Light',\n      value: '850 lux',\n      icon: '☀️',\n      type: 'Environmental',\n      unit: 'lux',\n      status: 'normal'\n    }, {\n      id: 4,\n      name: 'EC',\n      value: '1.8 mS/cm',\n      icon: '⚡',\n      type: 'Nutrient',\n      unit: 'mS/cm',\n      status: 'normal'\n    }, {\n      id: 5,\n      name: 'pH',\n      value: '6.2',\n      icon: '🧪',\n      type: 'Nutrient',\n      unit: '',\n      status: 'normal'\n    }, {\n      id: 6,\n      name: 'CO₂',\n      value: '450 ppm',\n      icon: '🌫️',\n      type: 'Gas',\n      unit: 'ppm',\n      status: 'normal'\n    }];\n  }\n  loadChartData() {\n    this.sensorService.getSensorHistory().pipe(takeUntil(this.destroy$)).subscribe({\n      next: data => {\n        this.processChartData(data);\n      },\n      error: error => {\n        console.error('Error loading chart data:', error);\n        this.loadMockChartData();\n      }\n    });\n  }\n  processChartData(data) {\n    this.chartData = {\n      labels: data.timestamps,\n      datasets: data.datasets\n    };\n  }\n  loadMockChartData() {\n    const now = new Date();\n    const labels = Array.from({\n      length: 12\n    }, (_, i) => {\n      const d = new Date(now.getTime() - (11 - i) * 5000);\n      return d.toLocaleTimeString('en-US', {\n        hour12: false\n      });\n    });\n    this.chartData = {\n      labels,\n      datasets: [{\n        label: 'Temperature (°C)',\n        data: Array.from({\n          length: 12\n        }, () => 22 + Math.random() * 4),\n        borderColor: '#006d5b',\n        backgroundColor: 'rgba(0, 109, 91, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }, {\n        label: 'Humidity (%)',\n        data: Array.from({\n          length: 12\n        }, () => 60 + Math.random() * 12),\n        borderColor: '#8d90bb',\n        backgroundColor: 'rgba(141, 144, 187, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }, {\n        label: 'Light (lux/100)',\n        data: Array.from({\n          length: 12\n        }, () => Math.max(0, 5 + Math.random() * 3)),\n        borderColor: '#ffc107',\n        backgroundColor: 'rgba(255, 193, 7, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }, {\n        label: 'EC (mS/cm)',\n        data: Array.from({\n          length: 12\n        }, () => 1.5 + Math.random() * 0.6),\n        borderColor: '#dc3545',\n        backgroundColor: 'rgba(220, 53, 69, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }, {\n        label: 'pH',\n        data: Array.from({\n          length: 12\n        }, () => 5.8 + Math.random() * 0.8),\n        borderColor: '#6610f2',\n        backgroundColor: 'rgba(102, 16, 242, 0.1)',\n        tension: 0.4,\n        fill: true,\n        borderWidth: 2\n      }]\n    };\n    // Add chart options\n    this.chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 750,\n        easing: 'easeInOutQuart'\n      },\n      scales: {\n        x: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          },\n          title: {\n            display: true,\n            text: 'Time',\n            color: '#666',\n            font: {\n              size: 12,\n              weight: 'bold'\n            }\n          }\n        },\n        y: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          align: 'center',\n          labels: {\n            boxWidth: 15,\n            padding: 15,\n            font: {\n              size: 11\n            }\n          }\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          titleColor: '#000',\n          bodyColor: '#666',\n          borderColor: 'rgba(0, 0, 0, 0.1)',\n          borderWidth: 1,\n          padding: 10,\n          bodyFont: {\n            size: 11\n          },\n          titleFont: {\n            size: 12,\n            weight: 'bold'\n          }\n        }\n      },\n      interaction: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      }\n    };\n  }\n  startIrrigation() {\n    this.sensorService.startIrrigation().subscribe(() => {\n      console.log('Irrigation started');\n    }, error => {\n      console.error('Error starting irrigation:', error);\n    });\n  }\n  exportData() {\n    this.sensorService.exportData().subscribe(data => {\n      const blob = new Blob([JSON.stringify(data, null, 2)], {\n        type: 'application/json'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'sensor-data.json';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, error => {\n      console.error('Error exporting data:', error);\n    });\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.SensorService), i0.ɵɵdirectiveInject(i2.AiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 36,\n      vars: 27,\n      consts: [[1, \"dashboard-container\"], [1, \"dashboard-header\"], [1, \"dashboard-title\"], [1, \"dashboard-actions\"], [1, \"btn\", \"btn-outline\", 3, \"click\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"metrics-grid\"], [\"name\", \"Temperature\", \"icon\", \"\\uD83C\\uDF21\\uFE0F\", \"unit\", \"\\u00B0C\", 3, \"currentValue\", \"minOptimal\", \"maxOptimal\", \"maxRange\"], [\"name\", \"Humidity\", \"icon\", \"\\uD83D\\uDCA7\", \"unit\", \"%\", 3, \"currentValue\", \"minOptimal\", \"maxOptimal\", \"maxRange\"], [\"name\", \"Light\", \"icon\", \"\\u2600\\uFE0F\", \"unit\", \" lux\", 3, \"currentValue\", \"minOptimal\", \"maxOptimal\", \"maxRange\"], [\"name\", \"EC\", \"icon\", \"\\u26A1\", \"unit\", \" mS/cm\", 3, \"currentValue\", \"minOptimal\", \"maxOptimal\", \"maxRange\"], [\"name\", \"pH\", \"icon\", \"\\uD83E\\uDDEA\", \"unit\", \"\", 3, \"currentValue\", \"minOptimal\", \"maxOptimal\", \"maxRange\"], [1, \"chart-container\"], [3, \"chartData\", \"chartOptions\", 4, \"ngIf\"], [1, \"system-health\", 3, \"ngClass\"], [1, \"system-health-icon\"], [1, \"system-health-content\"], [1, \"system-health-title\"], [1, \"system-health-message\"], [1, \"crop-roadmap\"], [\"class\", \"roadmap-step\", 4, \"ngFor\", \"ngForOf\"], [3, \"chartData\", \"chartOptions\"], [1, \"roadmap-step\"], [1, \"step-icon\", 3, \"ngClass\"], [1, \"step-label\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n          i0.ɵɵtext(3, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_5_listener() {\n            return ctx.exportData();\n          });\n          i0.ɵɵtext(6, \"Export Data\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_7_listener() {\n            return ctx.startIrrigation();\n          });\n          i0.ɵɵtext(8, \"Start Irrigation\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"h2\", 8);\n          i0.ɵɵtext(12, \"Real-Time Charts\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 9);\n          i0.ɵɵelement(14, \"app-metric-card\", 10)(15, \"app-metric-card\", 11)(16, \"app-metric-card\", 12)(17, \"app-metric-card\", 13)(18, \"app-metric-card\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 15);\n          i0.ɵɵtemplate(20, DashboardComponent_app_chart_20_Template, 1, 2, \"app-chart\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\", 17)(22, \"div\", 18);\n          i0.ɵɵtext(23, \"\\u2713\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 19)(25, \"div\", 20);\n          i0.ɵɵtext(26);\n          i0.ɵɵpipe(27, \"titlecase\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"div\", 21);\n          i0.ɵɵtext(29);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(30, \"div\", 6)(31, \"div\", 7)(32, \"h2\", 8);\n          i0.ɵɵtext(33, \"Crop Cycle Roadmap\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(34, \"div\", 22);\n          i0.ɵɵtemplate(35, DashboardComponent_div_35_Template, 5, 6, \"div\", 23);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"currentValue\", ctx.currentMetrics.temperature)(\"minOptimal\", 22)(\"maxOptimal\", 26)(\"maxRange\", 35);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"currentValue\", ctx.currentMetrics.humidity)(\"minOptimal\", 60)(\"maxOptimal\", 70)(\"maxRange\", 100);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"currentValue\", ctx.currentMetrics.light)(\"minOptimal\", 500)(\"maxOptimal\", 800)(\"maxRange\", 1000);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"currentValue\", ctx.currentMetrics.ec)(\"minOptimal\", 1.5)(\"maxOptimal\", 2.1)(\"maxRange\", 3);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"currentValue\", ctx.currentMetrics.ph)(\"minOptimal\", 5.8)(\"maxOptimal\", 6.6)(\"maxRange\", 14);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.chartData);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngClass\", \"system-health-\" + ctx.systemHealth.status);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\"System Health: \", i0.ɵɵpipeBind1(27, 25, ctx.systemHealth.status), \"\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.systemHealth.message);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.roadmapStages);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.ChartComponent, i3.TitleCasePipe],\n      styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n    padding: 20px;\\n  }\\n  \\n  .dashboard-header[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .dashboard-title[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    font-weight: 700;\\n    color: #343a40;\\n  }\\n  \\n  .dashboard-actions[_ngcontent-%COMP%] {\\n    display: flex;\\n    gap: 10px;\\n  }\\n  \\n  .btn[_ngcontent-%COMP%] {\\n    padding: 8px 16px;\\n    border-radius: 6px;\\n    border: none;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: all 0.2s;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%] {\\n    background-color: #008e73;\\n    color: #ffffff;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%]:hover {\\n    background-color: #00594d;\\n  }\\n  \\n  .btn-outline[_ngcontent-%COMP%] {\\n    background-color: transparent;\\n    border: 1px solid #006d5b;\\n    color: #006d5b;\\n  }\\n  \\n  .btn-outline[_ngcontent-%COMP%]:hover {\\n    background-color: #006d5b;\\n    color: #ffffff;\\n  }\\n  \\n  .card[_ngcontent-%COMP%] {\\n    background-color: #ffffff;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 8px rgba(0,0,0,0.05);\\n    padding: 20px;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 15px;\\n  }\\n  \\n  .card-title[_ngcontent-%COMP%] {\\n    font-size: 16px;\\n    font-weight: 600;\\n    color: #343a40;\\n  }\\n  \\n  .sensors-grid[_ngcontent-%COMP%] {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\\n    gap: 15px;\\n  }\\n  \\n  .chart-container[_ngcontent-%COMP%] {\\n    width: 100%;\\n    height: 300px;\\n    position: relative;\\n  }\\n  \\n  .system-health[_ngcontent-%COMP%] {\\n    display: flex;\\n    background-color: rgba(40, 167, 69, 0.1);\\n    border-left: 4px solid #28a745;\\n    padding: 15px;\\n    border-radius: 6px;\\n    margin-top: 20px;\\n  }\\n  \\n  .system-health-warning[_ngcontent-%COMP%] {\\n    background-color: rgba(255, 193, 7, 0.1);\\n    border-left-color: #ffc107;\\n  }\\n  \\n  .system-health-danger[_ngcontent-%COMP%] {\\n    background-color: rgba(220, 53, 69, 0.1);\\n    border-left-color: #dc3545;\\n  }\\n  \\n  .system-health-icon[_ngcontent-%COMP%] {\\n    width: 40px;\\n    height: 40px;\\n    border-radius: 50%;\\n    background-color: #28a745;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    color: #ffffff;\\n    margin-right: 15px;\\n  }\\n  \\n  .system-health-warning[_ngcontent-%COMP%]   .system-health-icon[_ngcontent-%COMP%] {\\n    background-color: #ffc107;\\n    color: #212529;\\n  }\\n  \\n  .system-health-danger[_ngcontent-%COMP%]   .system-health-icon[_ngcontent-%COMP%] {\\n    background-color: #dc3545;\\n  }\\n  \\n  .system-health-content[_ngcontent-%COMP%] {\\n    flex-grow: 1;\\n  }\\n  \\n  .system-health-title[_ngcontent-%COMP%] {\\n    font-weight: 600;\\n    margin-bottom: 5px;\\n    color: #343a40;\\n  }\\n  \\n  .system-health-message[_ngcontent-%COMP%] {\\n    font-size: 14px;\\n    color: #495057;\\n  }\\n  \\n  .crop-roadmap[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-top: 10px;\\n  }\\n  \\n  .roadmap-step[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    position: relative;\\n    flex: 1;\\n  }\\n  \\n  .roadmap-step[_ngcontent-%COMP%]::before {\\n    content: \\\"\\\";\\n    height: 3px;\\n    width: 100%;\\n    background-color: #dee2e6;\\n    position: absolute;\\n    top: 15px;\\n    left: 50%;\\n    z-index: 0;\\n  }\\n  \\n  .roadmap-step[_ngcontent-%COMP%]:first-child::before {\\n    width: 50%;\\n    left: 50%;\\n  }\\n  \\n  .roadmap-step[_ngcontent-%COMP%]:last-child::before {\\n    width: 50%;\\n    left: 0;\\n  }\\n  \\n  .step-icon[_ngcontent-%COMP%] {\\n    width: 30px;\\n    height: 30px;\\n    border-radius: 50%;\\n    background-color: #ffffff;\\n    border: 3px solid #dee2e6;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    z-index: 1;\\n    font-size: 12px;\\n    color: #6c757d;\\n    margin-bottom: 8px;\\n    position: relative;\\n  }\\n  \\n  .step-icon.active[_ngcontent-%COMP%] {\\n    border-color: #006d5b;\\n    background-color: #006d5b;\\n    color: #ffffff;\\n  }\\n  \\n  .step-icon.completed[_ngcontent-%COMP%] {\\n    border-color: #006d5b;\\n    background-color: #006d5b;\\n    color: #ffffff;\\n  }\\n  \\n  .step-label[_ngcontent-%COMP%] {\\n    font-size: 12px;\\n    color: #6c757d;\\n    text-align: center;\\n  }\\n  \\n  @media (max-width: 768px) {\\n    .sensors-grid[_ngcontent-%COMP%] {\\n      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\\n    }\\n    \\n    .crop-roadmap[_ngcontent-%COMP%] {\\n      flex-wrap: wrap;\\n    }\\n    \\n    .roadmap-step[_ngcontent-%COMP%] {\\n      flex: 0 0 33.333%;\\n      margin-bottom: 20px;\\n    }\\n    \\n    .roadmap-step[_ngcontent-%COMP%]::before {\\n      display: none;\\n    }\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["interval","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","ctx_r0","chartData","chartOptions","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpureFunction2","_c0","stage_r2","active","completed","ɵɵtextInterpolate1","i_r3","ɵɵtextInterpolate","name","DashboardComponent","constructor","sensorService","aiService","sensors","systemHealth","status","message","roadmapStages","destroy$","updateInterval$","currentMetrics","temperature","humidity","light","ec","ph","ngOnInit","loadInitialData","setupRealTimeUpdates","ngOnDestroy","updateSubscription","unsubscribe","next","complete","loadCurrentMetrics","loadChartData","pipe","subscribe","getCurrentMetrics","metrics","error","console","loadSensorData","getECSensors","data","loadMockSensorData","id","value","icon","type","unit","getSensorHistory","processChartData","loadMockChartData","labels","timestamps","datasets","now","Date","Array","from","length","_","i","d","getTime","toLocaleTimeString","hour12","label","Math","random","borderColor","backgroundColor","tension","fill","borderWidth","max","responsive","maintainAspectRatio","animation","duration","easing","scales","x","grid","color","ticks","font","size","title","display","text","weight","y","plugins","legend","position","align","boxWidth","padding","tooltip","mode","intersect","titleColor","bodyColor","bodyFont","titleFont","interaction","axis","startIrrigation","log","exportData","blob","Blob","JSON","stringify","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","ɵɵdirectiveInject","i1","SensorService","i2","AiService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵlistener","DashboardComponent_Template_button_click_5_listener","DashboardComponent_Template_button_click_7_listener","ɵɵtemplate","DashboardComponent_app_chart_20_Template","DashboardComponent_div_35_Template","ɵɵpipeBind1"],"sources":["/home/injinia/eden-link/src/app/features/dashboard/dashboard.component.ts","/home/injinia/eden-link/src/app/features/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SensorService } from '../../core/services/sensor.service';\nimport { AiService } from '../../core/services/ai.service';\nimport { Sensor } from '../../core/models/sensor.model';\nimport { interval, Subscription, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\ninterface CurrentMetrics {\n  temperature: number;\n  humidity: number;\n  light: number;\n  ec: number;\n  ph: number;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  sensors: Sensor[] = [];\n  systemHealth = {\n    status: 'excellent',\n    message: 'All systems functioning optimally. Consider adjusting CO₂ levels slightly for optimal tomato growth.'\n  };\n  chartData: any;\n  private updateSubscription?: Subscription;\n  roadmapStages = [\n    { name: 'Germination', completed: true, active: false },\n    { name: 'Seedling', completed: true, active: false },\n    { name: 'Vegetation', completed: false, active: true },\n    { name: 'Flowering', completed: false, active: false },\n    { name: 'Fruiting', completed: false, active: false },\n    { name: 'Harvest', completed: false, active: false }\n  ];\n  chartOptions: any;\n  private destroy$ = new Subject<void>();\n  private updateInterval$ = interval(5000);\n\n  currentMetrics: CurrentMetrics = {\n    temperature: 24,\n    humidity: 65,\n    light: 650,\n    ec: 1.8,\n    ph: 6.2\n  };\n\n  constructor(\n    private sensorService: SensorService,\n    private aiService: AiService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadInitialData();\n    this.setupRealTimeUpdates();\n  }\n\n  ngOnDestroy(): void {\n    if (this.updateSubscription) {\n      this.updateSubscription.unsubscribe();\n    }\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private loadInitialData(): void {\n    this.loadCurrentMetrics();\n    this.loadChartData();\n  }\n\n  private setupRealTimeUpdates(): void {\n    this.updateInterval$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.loadCurrentMetrics();\n      this.loadChartData();\n    });\n  }\n\n  private loadCurrentMetrics(): void {\n    this.sensorService.getCurrentMetrics().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe({\n      next: (metrics) => {\n        this.currentMetrics = metrics;\n      },\n      error: (error) => {\n        console.error('Error loading current metrics:', error);\n        // Keep using last known values\n      }\n    });\n  }\n\n  loadSensorData(): void {\n    this.sensorService.getECSensors().subscribe(\n      (data) => {\n        this.sensors = data;\n      },\n      (error) => {\n        console.error('Error fetching sensor data:', error);\n        // Fallback to mock data\n        this.loadMockSensorData();\n      }\n    );\n  }\n\n  loadMockSensorData(): void {\n    this.sensors = [\n      { id: 1, name: 'Temperature', value: '24°C', icon: '🌡️', type: 'Environmental', unit: '°C', status: 'normal' },\n      { id: 2, name: 'Humidity', value: '65%', icon: '💧', type: 'Environmental', unit: '%', status: 'normal' },\n      { id: 3, name: 'Light', value: '850 lux', icon: '☀️', type: 'Environmental', unit: 'lux', status: 'normal' },\n      { id: 4, name: 'EC', value: '1.8 mS/cm', icon: '⚡', type: 'Nutrient', unit: 'mS/cm', status: 'normal' },\n      { id: 5, name: 'pH', value: '6.2', icon: '🧪', type: 'Nutrient', unit: '', status: 'normal' },\n      { id: 6, name: 'CO₂', value: '450 ppm', icon: '🌫️', type: 'Gas', unit: 'ppm', status: 'normal' }\n    ];\n  }\n\n  private loadChartData(): void {\n    this.sensorService.getSensorHistory().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe({\n      next: (data) => {\n        this.processChartData(data);\n      },\n      error: (error) => {\n        console.error('Error loading chart data:', error);\n        this.loadMockChartData();\n      }\n    });\n  }\n\n  private processChartData(data: any): void {\n    this.chartData = {\n      labels: data.timestamps,\n      datasets: data.datasets\n    };\n  }\n\n  private loadMockChartData(): void {\n    const now = new Date();\n    const labels = Array.from({ length: 12 }, (_, i) => {\n      const d = new Date(now.getTime() - (11 - i) * 5000);\n      return d.toLocaleTimeString('en-US', { hour12: false });\n    });\n    \n    this.chartData = {\n      labels,\n      datasets: [\n        {\n          label: 'Temperature (°C)',\n          data: Array.from({ length: 12 }, () => 22 + Math.random() * 4),\n          borderColor: '#006d5b',\n          backgroundColor: 'rgba(0, 109, 91, 0.1)',\n          tension: 0.4,\n          fill: true,\n          borderWidth: 2\n        },\n        {\n          label: 'Humidity (%)',\n          data: Array.from({ length: 12 }, () => 60 + Math.random() * 12),\n          borderColor: '#8d90bb',\n          backgroundColor: 'rgba(141, 144, 187, 0.1)',\n          tension: 0.4,\n          fill: true,\n          borderWidth: 2\n        },\n        {\n          label: 'Light (lux/100)',\n          data: Array.from({ length: 12 }, () => Math.max(0, 5 + Math.random() * 3)),\n          borderColor: '#ffc107',\n          backgroundColor: 'rgba(255, 193, 7, 0.1)',\n          tension: 0.4,\n          fill: true,\n          borderWidth: 2\n        },\n        {\n          label: 'EC (mS/cm)',\n          data: Array.from({ length: 12 }, () => 1.5 + Math.random() * 0.6),\n          borderColor: '#dc3545',\n          backgroundColor: 'rgba(220, 53, 69, 0.1)',\n          tension: 0.4,\n          fill: true,\n          borderWidth: 2\n        },\n        {\n          label: 'pH',\n          data: Array.from({ length: 12 }, () => 5.8 + Math.random() * 0.8),\n          borderColor: '#6610f2',\n          backgroundColor: 'rgba(102, 16, 242, 0.1)',\n          tension: 0.4,\n          fill: true,\n          borderWidth: 2\n        }\n      ]\n    };\n\n    // Add chart options\n    this.chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 750,\n        easing: 'easeInOutQuart'\n      },\n      scales: {\n        x: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          },\n          title: {\n            display: true,\n            text: 'Time',\n            color: '#666',\n            font: {\n              size: 12,\n              weight: 'bold'\n            }\n          }\n        },\n        y: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            borderColor: 'rgba(0, 0, 0, 0.3)'\n          },\n          ticks: {\n            color: '#666',\n            font: {\n              size: 11\n            }\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          align: 'center',\n          labels: {\n            boxWidth: 15,\n            padding: 15,\n            font: {\n              size: 11\n            }\n          }\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          titleColor: '#000',\n          bodyColor: '#666',\n          borderColor: 'rgba(0, 0, 0, 0.1)',\n          borderWidth: 1,\n          padding: 10,\n          bodyFont: {\n            size: 11\n          },\n          titleFont: {\n            size: 12,\n            weight: 'bold'\n          }\n        }\n      },\n      interaction: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      }\n    };\n  }\n\n  startIrrigation(): void {\n    this.sensorService.startIrrigation().subscribe(\n      () => {\n        console.log('Irrigation started');\n      },\n      error => {\n        console.error('Error starting irrigation:', error);\n      }\n    );\n  }\n\n  exportData(): void {\n    this.sensorService.exportData().subscribe(\n      (data) => {\n        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'sensor-data.json';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      },\n      error => {\n        console.error('Error exporting data:', error);\n      }\n    );\n  }\n}","<div class=\"dashboard-container\">\n    <div class=\"dashboard-header\">\n      <h1 class=\"dashboard-title\">Dashboard</h1>\n      <div class=\"dashboard-actions\">\n        <button class=\"btn btn-outline\" (click)=\"exportData()\">Export Data</button>\n        <button class=\"btn btn-primary\" (click)=\"startIrrigation()\">Start Irrigation</button>\n      </div>\n    </div>\n    \n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h2 class=\"card-title\">Real-Time Charts</h2>\n      </div>\n      <div class=\"metrics-grid\">\n        <app-metric-card\n          name=\"Temperature\"\n          icon=\"🌡️\"\n          [currentValue]=\"currentMetrics.temperature\"\n          [minOptimal]=\"22\"\n          [maxOptimal]=\"26\"\n          unit=\"°C\"\n          [maxRange]=\"35\">\n        </app-metric-card>\n\n        <app-metric-card\n          name=\"Humidity\"\n          icon=\"💧\"\n          [currentValue]=\"currentMetrics.humidity\"\n          [minOptimal]=\"60\"\n          [maxOptimal]=\"70\"\n          unit=\"%\"\n          [maxRange]=\"100\">\n        </app-metric-card>\n\n        <app-metric-card\n          name=\"Light\"\n          icon=\"☀️\"\n          [currentValue]=\"currentMetrics.light\"\n          [minOptimal]=\"500\"\n          [maxOptimal]=\"800\"\n          unit=\" lux\"\n          [maxRange]=\"1000\">\n        </app-metric-card>\n\n        <app-metric-card\n          name=\"EC\"\n          icon=\"⚡\"\n          [currentValue]=\"currentMetrics.ec\"\n          [minOptimal]=\"1.5\"\n          [maxOptimal]=\"2.1\"\n          unit=\" mS/cm\"\n          [maxRange]=\"3.0\">\n        </app-metric-card>\n\n        <app-metric-card\n          name=\"pH\"\n          icon=\"🧪\"\n          [currentValue]=\"currentMetrics.ph\"\n          [minOptimal]=\"5.8\"\n          [maxOptimal]=\"6.6\"\n          unit=\"\"\n          [maxRange]=\"14\">\n        </app-metric-card>\n      </div>\n\n      <div class=\"chart-container\">\n        <app-chart \n          *ngIf=\"chartData\" \n          [chartData]=\"chartData\"\n          [chartOptions]=\"chartOptions\">\n        </app-chart>\n      </div>\n      <div class=\"system-health\" [ngClass]=\"'system-health-' + systemHealth.status\">\n        <div class=\"system-health-icon\">✓</div>\n        <div class=\"system-health-content\">\n          <div class=\"system-health-title\">System Health: {{ systemHealth.status | titlecase }}</div>\n          <div class=\"system-health-message\">{{ systemHealth.message }}</div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h2 class=\"card-title\">Crop Cycle Roadmap</h2>\n      </div>\n      <div class=\"crop-roadmap\">\n        <div class=\"roadmap-step\" *ngFor=\"let stage of roadmapStages; let i = index\">\n          <div class=\"step-icon\" \n               [ngClass]=\"{'active': stage.active, 'completed': stage.completed}\">\n            {{ stage.completed ? '✓' : i + 1 }}\n          </div>\n          <div class=\"step-label\">{{ stage.name }}</div>\n        </div>\n      </div>\n    </div>\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}